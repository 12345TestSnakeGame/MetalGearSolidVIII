LR0
I74
E -> E + E · 
E -> E · + E
E -> E · * E
I50
B -> E relop · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I67
S -> L = E ; · 
I18
D -> T ID · ;
I53
relop -> < · 
I47
B -> not B · 
B -> B · or B
I30
E -> ID · 
L -> ID · [ E ]
I28
B -> false · 
I70
B -> B or B · 
B -> B · or B
I40
S -> ID = E · ;
E -> E · + E
E -> E · * E
I3
P -> S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I35
T -> X C · 
I82
Elist -> Elist ， · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I55
relop -> == · 
I10
S -> call · ID ( Elist )
I15
D -> D D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I78
Elist -> E · 
E -> E · + E
E -> E · * E
I22
L -> L [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I32
E -> L · 
L -> L · [ E ]
I33
S -> while B · do S
B -> B · or B
I46
B -> B or · B
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I68
L -> L [ E ] · 
I51
E -> E + · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I45
S -> if B then · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I37
T -> record D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I84
Elist -> Elist ， E · 
E -> E · + E
E -> E · * E
I6
S -> ID · = E ;
L -> ID · [ E ]
I14
X -> real · 
I43
S -> L = E · ;
E -> E · + E
E -> E · * E
I59
E -> - E · 
E -> E · + E
E -> E · * E
I0
P' ->  · P
P ->  · D
P ->  · S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
T ->  · X C
T ->  · record D
L ->  · ID [ E ]
L ->  · L [ E ]
X ->  · int
X ->  · real
I8
S -> if · B then S
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I12
T -> record · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I25
B -> ( · B )
E -> ( · E )
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I73
B -> E relop E · 
E -> E · + E
E -> E · * E
I2
P -> D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I20
L -> ID [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I48
B -> ( B · )
B -> B · or B
I11
T -> X · C
C ->  · [ CONST ] C
C ->  · empty
I39
D -> T ID ; · 
I57
relop -> > · 
I54
relop -> <= · 
I52
E -> E * · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I83
C -> [ CONST ] C · 
I4
D -> proc · ID ; D S
I66
L -> ID [ E ] · 
I61
S -> call ID ( · Elist )
Elist ->  · Elist ， E
Elist ->  · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I71
B -> ( B ) · 
I56
relop -> != · 
I24
B -> not · B
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I26
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I81
S -> call ID ( Elist ) · 
I41
E -> ( · E )
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I38
D -> proc ID ; · D S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I44
L -> L [ E · ]
E -> E · + E
E -> E · * E
I65
E -> ( E · )
E -> E · + E
E -> E · * E
I9
S -> while · B do S
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I64
S -> ID = E ; · 
I16
S -> S S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I76
S -> while B do S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I62
C -> [ CONST · ] C
I21
S -> L = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I7
S -> L · = E ;
L -> L · [ E ]
I80
D -> proc ID ; D S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I29
E -> - · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I5
D -> T · ID ;
I23
S -> if B · then S
B -> B · or B
I17
D -> proc ID · ; D S
I63
D -> proc ID ; D · S
D -> D · D
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
L ->  · ID [ E ]
L ->  · L [ E ]
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I13
X -> int · 
I34
S -> call ID · ( Elist )
I36
C -> [ · CONST ] C
I58
relop -> >= · 
I31
E -> CONST · 
I27
B -> true · 
I72
E -> ( E ) · 
I42
L -> ID [ E · ]
E -> E · + E
E -> E · * E
I79
C -> [ CONST ] · C
C ->  · [ CONST ] C
C ->  · empty
I60
S -> while B do · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I19
S -> ID = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I69
S -> if B then S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I49
E -> ( E · )
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I75
E -> E * E · 
E -> E · + E
E -> E · * E
I1
P' -> P · 
I77
S -> call ID ( Elist · )
Elist -> Elist · ， E

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17)]
5 - [(ID, 18)]
6 - [(=, 19), ([, 20)]
7 - [(=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 34)]
11 - [(C, 35), ([, 36)]
12 - [(D, 37), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 38)]
18 - [(;, 39)]
19 - [(E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
20 - [(E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
21 - [(E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
22 - [(E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
23 - [(then, 45), (or, 46)]
24 - [(B, 47), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 48), (E, 49), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
26 - [(relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58)]
29 - [(E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 20)]
32 - [([, 22)]
33 - [(do, 60), (or, 46)]
34 - [((, 61)]
36 - [(CONST, 62)]
37 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
38 - [(D, 63), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
40 - [(;, 64), (+, 51), (*, 52)]
41 - [(E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
42 - [(], 66), (+, 51), (*, 52)]
43 - [(;, 67), (+, 51), (*, 52)]
44 - [(], 68), (+, 51), (*, 52)]
45 - [(S, 69), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
46 - [(B, 70), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
47 - [(or, 46)]
48 - [(), 71), (or, 46)]
49 - [(), 72), (relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58)]
50 - [(E, 73), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
51 - [(E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
52 - [(E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
59 - [(+, 51), (*, 52)]
60 - [(S, 76), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
61 - [(Elist, 77), (E, 78), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
62 - [(], 79)]
63 - [(S, 80), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
65 - [(), 72), (+, 51), (*, 52)]
69 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
70 - [(or, 46)]
73 - [(+, 51), (*, 52)]
74 - [(+, 51), (*, 52)]
75 - [(+, 51), (*, 52)]
76 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
77 - [(), 81), (，, 82)]
78 - [(+, 51), (*, 52)]
79 - [(C, 83), ([, 36)]
80 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
82 - [(E, 84), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
84 - [(+, 51), (*, 52)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4,r15	s6,r15	r15	s12,r15	s13,r15	s14,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
1	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	
2	s4,r1	r1	r1	s12,r1	s13,r1	s14,r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	
3	r2,r15	s6,r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	s8,r2,r15	r2,r15	r2,r15	s9,r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	s10,r2,r15	r2,r15	r2,r15	
4	[]	s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20	[]	[]	s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22	[]	[]	s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	r12	r12	r12	r12	r12	r12	s36,r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	
12	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	
14	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	
15	s4,r4	r4	r4	s12,r4	s13,r4	s14,r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	
16	r3,r15	s6,r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	s8,r3,r15	r3,r15	r3,r15	s9,r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	s10,r3,r15	r3,r15	r3,r15	
17	[]	[]	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s45	[]	[]	[]	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s53	s54	s55	s56	s58	s57	[]	[]	[]	
27	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	
28	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	
29	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	r20	r20	r20	r20	r20	r20	s20,r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	
31	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	
32	r22	r22	r22	r22	r22	r22	s22,r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s60	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	
36	[]	[]	[]	[]	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	s4,r8	r8	r8	s12,r8	s13,r8	s14,r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	
38	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	
40	[]	[]	s64	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	s66	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	s67	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	s68	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	r15	s6,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
46	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	s46,r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s71	[]	[]	[]	[]	[]	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	s72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s53	s54	s55	s56	s58	s57	[]	[]	[]	
50	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	
54	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	
55	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	
56	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	
57	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	
58	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	
59	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	s51,r18	s52,r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	
60	r15	s6,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
61	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	[]	s79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	s4,r15	s6,r15	r15	s12,r15	s13,r15	s14,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
64	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	s72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	
67	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	
68	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	
69	r25,r15	s6,r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	s8,r25,r15	r25,r15	r25,r15	s9,r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	s10,r25,r15	r25,r15	r25,r15	
70	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	s46,r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	
71	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	
72	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	
73	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	s51,r30	s52,r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	
74	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	s51,r16	s52,r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	
75	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	s51,r17	s52,r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	
76	r26,r15	s6,r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	s8,r26,r15	r26,r15	r26,r15	s9,r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	s10,r26,r15	r26,r15	r26,r15	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s82	[]	
78	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	s51,r41	s52,r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	
79	r12	r12	r12	r12	r12	r12	s36,r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	
80	r5,r15	s6,r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	s8,r5,r15	r5,r15	r5,r15	s9,r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	s10,r5,r15	r5,r15	r5,r15	
81	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	
82	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	
84	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	s51,r40	s52,r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26	s32	s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s26	s32	s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s35	[]	[]	[]	[]	[]	
12	[]	[]	s37	[]	s5	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s40	s32	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s42	s32	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s43	s32	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s44	s32	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26	s32	s47	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s49	s32	s48	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s50	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s59	s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
38	[]	[]	s63	[]	s5	s11	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s65	s32	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	[]	s69	[]	[]	[]	[]	s7	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	s26	s32	s70	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s50	[]	
50	[]	[]	[]	[]	[]	[]	[]	s73	s32	[]	[]	[]	
51	[]	[]	[]	[]	[]	[]	[]	s74	s32	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	s75	s32	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	s76	[]	[]	[]	[]	s7	[]	[]	[]	
61	[]	[]	[]	[]	[]	[]	[]	s78	s32	[]	[]	s77	
62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	s15	s80	s5	s11	[]	[]	s7	[]	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	s83	[]	[]	[]	[]	[]	
80	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	[]	[]	[]	[]	[]	[]	s84	s32	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


SLR
I74
E -> E + E · 
E -> E · + E
E -> E · * E
I50
B -> E relop · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I67
S -> L = E ; · 
I18
D -> T ID · ;
I53
relop -> < · 
I47
B -> not B · 
B -> B · or B
I30
E -> ID · 
L -> ID · [ E ]
I28
B -> false · 
I70
B -> B or B · 
B -> B · or B
I40
S -> ID = E · ;
E -> E · + E
E -> E · * E
I3
P -> S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I35
T -> X C · 
I82
Elist -> Elist ， · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I55
relop -> == · 
I10
S -> call · ID ( Elist )
I15
D -> D D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I78
Elist -> E · 
E -> E · + E
E -> E · * E
I22
L -> L [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I32
E -> L · 
L -> L · [ E ]
I33
S -> while B · do S
B -> B · or B
I46
B -> B or · B
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I68
L -> L [ E ] · 
I51
E -> E + · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I45
S -> if B then · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I37
T -> record D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I84
Elist -> Elist ， E · 
E -> E · + E
E -> E · * E
I6
S -> ID · = E ;
L -> ID · [ E ]
I14
X -> real · 
I43
S -> L = E · ;
E -> E · + E
E -> E · * E
I59
E -> - E · 
E -> E · + E
E -> E · * E
I0
P' ->  · P
P ->  · D
P ->  · S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
T ->  · X C
T ->  · record D
L ->  · ID [ E ]
L ->  · L [ E ]
X ->  · int
X ->  · real
I8
S -> if · B then S
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I12
T -> record · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I25
B -> ( · B )
E -> ( · E )
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I73
B -> E relop E · 
E -> E · + E
E -> E · * E
I2
P -> D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I20
L -> ID [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I48
B -> ( B · )
B -> B · or B
I11
T -> X · C
C ->  · [ CONST ] C
C ->  · empty
I39
D -> T ID ; · 
I57
relop -> > · 
I54
relop -> <= · 
I52
E -> E * · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I83
C -> [ CONST ] C · 
I4
D -> proc · ID ; D S
I66
L -> ID [ E ] · 
I61
S -> call ID ( · Elist )
Elist ->  · Elist ， E
Elist ->  · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I71
B -> ( B ) · 
I56
relop -> != · 
I24
B -> not · B
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I26
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I81
S -> call ID ( Elist ) · 
I41
E -> ( · E )
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I38
D -> proc ID ; · D S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I44
L -> L [ E · ]
E -> E · + E
E -> E · * E
I65
E -> ( E · )
E -> E · + E
E -> E · * E
I9
S -> while · B do S
B ->  · B or B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I64
S -> ID = E ; · 
I16
S -> S S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I76
S -> while B do S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I62
C -> [ CONST · ] C
I21
S -> L = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I7
S -> L · = E ;
L -> L · [ E ]
I80
D -> proc ID ; D S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I29
E -> - · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I5
D -> T · ID ;
I23
S -> if B · then S
B -> B · or B
I17
D -> proc ID · ; D S
I63
D -> proc ID ; D · S
D -> D · D
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
L ->  · ID [ E ]
L ->  · L [ E ]
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I13
X -> int · 
I34
S -> call ID · ( Elist )
I36
C -> [ · CONST ] C
I58
relop -> >= · 
I31
E -> CONST · 
I27
B -> true · 
I72
E -> ( E ) · 
I42
L -> ID [ E · ]
E -> E · + E
E -> E · * E
I79
C -> [ CONST ] · C
C ->  · [ CONST ] C
C ->  · empty
I60
S -> while B do · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I19
S -> ID = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I69
S -> if B then S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I49
E -> ( E · )
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I75
E -> E * E · 
E -> E · + E
E -> E · * E
I1
P' -> P · 
I77
S -> call ID ( Elist · )
Elist -> Elist · ， E

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17)]
5 - [(ID, 18)]
6 - [(=, 19), ([, 20)]
7 - [(=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 34)]
11 - [(C, 35), ([, 36)]
12 - [(D, 37), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 38)]
18 - [(;, 39)]
19 - [(E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
20 - [(E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
21 - [(E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
22 - [(E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
23 - [(then, 45), (or, 46)]
24 - [(B, 47), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 48), (E, 49), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
26 - [(relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58)]
29 - [(E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 20)]
32 - [([, 22)]
33 - [(do, 60), (or, 46)]
34 - [((, 61)]
36 - [(CONST, 62)]
37 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
38 - [(D, 63), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
40 - [(;, 64), (+, 51), (*, 52)]
41 - [(E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
42 - [(], 66), (+, 51), (*, 52)]
43 - [(;, 67), (+, 51), (*, 52)]
44 - [(], 68), (+, 51), (*, 52)]
45 - [(S, 69), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
46 - [(B, 70), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
47 - [(or, 46)]
48 - [(), 71), (or, 46)]
49 - [(), 72), (relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58)]
50 - [(E, 73), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
51 - [(E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
52 - [(E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
59 - [(+, 51), (*, 52)]
60 - [(S, 76), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
61 - [(Elist, 77), (E, 78), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
62 - [(], 79)]
63 - [(S, 80), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
65 - [(), 72), (+, 51), (*, 52)]
69 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
70 - [(or, 46)]
73 - [(+, 51), (*, 52)]
74 - [(+, 51), (*, 52)]
75 - [(+, 51), (*, 52)]
76 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
77 - [(), 81), (，, 82)]
78 - [(+, 51), (*, 52)]
79 - [(C, 83), ([, 36)]
80 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
82 - [(E, 84), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
84 - [(+, 51), (*, 52)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4,r15	s6,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r0	
2	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r1	
3	r15	s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r2,r15	
4	[]	s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20	[]	[]	s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22	[]	[]	s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
12	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	[]	r9	[]	[]	[]	[]	r9	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	r10	[]	[]	[]	[]	r10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	s4,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	r4	
16	r3,r15	s6,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r3,r15	[]	[]	s9,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r3,r15	[]	r3,r15	
17	[]	[]	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s45	[]	[]	[]	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s53	s54	s55	s56	s58	s57	[]	[]	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r31	[]	r31	[]	[]	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	r32	[]	[]	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	[]	[]	r20	[]	[]	[]	s20	[]	r20	[]	r20	r20	[]	[]	r20	[]	r20	[]	[]	r20	r20	[]	[]	[]	[]	r20	r20	r20	r20	r20	r20	[]	r20	[]	
31	[]	[]	r21	[]	[]	[]	[]	[]	r21	[]	r21	r21	[]	[]	r21	[]	r21	[]	[]	r21	r21	[]	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	r21	[]	
32	[]	[]	r22	[]	[]	[]	s22	[]	r22	[]	r22	r22	[]	[]	r22	[]	r22	[]	[]	r22	r22	[]	[]	[]	[]	r22	r22	r22	r22	r22	r22	[]	r22	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s60	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	r7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	s4	r8	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	r6	
40	[]	[]	s64	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	s66	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	s67	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	s68	[]	s51	s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	r15	s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
46	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	r28	[]	[]	r28	s46,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s71	[]	[]	[]	[]	[]	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	s72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s53	s54	s55	s56	s58	s57	[]	[]	[]	
50	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	r33	[]	[]	[]	[]	[]	r33	[]	[]	[]	[]	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	r34	[]	[]	[]	[]	[]	r34	[]	[]	[]	[]	r34	r34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	r35	[]	[]	[]	[]	[]	r35	[]	[]	[]	[]	r35	r35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	r36	[]	[]	[]	[]	[]	r36	[]	[]	[]	[]	r36	r36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	r37	[]	[]	[]	[]	[]	r37	[]	[]	[]	[]	r37	r37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	r38	[]	[]	[]	[]	[]	r38	[]	[]	[]	[]	r38	r38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	r18	[]	[]	[]	[]	[]	r18	[]	s51,r18	s52,r18	[]	[]	r18	[]	r18	[]	[]	r18	r18	[]	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	r18	[]	
60	r15	s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
61	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	[]	s79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	s4,r15	s6,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
64	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	s72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	r23	[]	[]	[]	r23	[]	r23	r23	r23	r23	[]	[]	r23	[]	r23	[]	[]	r23	r23	[]	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	r23	[]	
67	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
68	[]	[]	r24	[]	[]	[]	r24	[]	r24	r24	r24	r24	[]	[]	r24	[]	r24	[]	[]	r24	r24	[]	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	r24	[]	
69	r25,r15	s6,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r25,r15	[]	[]	s9,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r25,r15	[]	r25,r15	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	r27	[]	[]	r27	s46,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	r29	[]	[]	r29	r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	r19	[]	[]	[]	[]	[]	r19	[]	r19	r19	[]	[]	r19	[]	r19	[]	[]	r19	r19	[]	[]	[]	[]	r19	r19	r19	r19	r19	r19	[]	r19	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	r30	[]	r30	[]	[]	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	r16	[]	[]	[]	[]	[]	r16	[]	s51,r16	s52,r16	[]	[]	r16	[]	r16	[]	[]	r16	r16	[]	[]	[]	[]	r16	r16	r16	r16	r16	r16	[]	r16	[]	
75	[]	[]	r17	[]	[]	[]	[]	[]	r17	[]	s51,r17	s52,r17	[]	[]	r17	[]	r17	[]	[]	r17	r17	[]	[]	[]	[]	r17	r17	r17	r17	r17	r17	[]	r17	[]	
76	r26,r15	s6,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r26,r15	[]	[]	s9,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r26,r15	[]	r26,r15	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s82	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	r41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r41	[]	
79	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	r5,r15	s6,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r5,r15	[]	[]	s9,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r5,r15	[]	r5,r15	
81	r39	r39	[]	r39	r39	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	r39	
82	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	[]	r11	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26	s32	s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s26	s32	s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s35	[]	[]	[]	[]	[]	
12	[]	[]	s37	[]	s5	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s40	s32	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s42	s32	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s43	s32	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s44	s32	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26	s32	s47	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s49	s32	s48	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s50	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s59	s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
38	[]	[]	s63	[]	s5	s11	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s65	s32	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	[]	s69	[]	[]	[]	[]	s7	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	s26	s32	s70	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s50	[]	
50	[]	[]	[]	[]	[]	[]	[]	s73	s32	[]	[]	[]	
51	[]	[]	[]	[]	[]	[]	[]	s74	s32	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	s75	s32	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	s76	[]	[]	[]	[]	s7	[]	[]	[]	
61	[]	[]	[]	[]	[]	[]	[]	s78	s32	[]	[]	s77	
62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	s15	s80	s5	s11	[]	[]	s7	[]	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	s83	[]	[]	[]	[]	[]	
80	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	[]	[]	[]	[]	[]	[]	s84	s32	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


LR1
I116
E -> ( E · ), *]+
E -> E · + E, *+)
E -> E · * E, *+)
I158
S -> call ID ( Elist · ), ID$ifwhilecall
Elist -> Elist · ， E, ，)
I28
B -> false · , thenor
I51
E -> CONST · , *;+
I291
E -> E + E · , *or+)
E -> E · + E, +*or)
E -> E · * E, +*or)
I225
E -> - E · , *，+)
E -> E · + E, ，+*)
E -> E · * E, ，+*)
I205
L -> ID [ E · ], ==[<=!=<>+*>=)
E -> E · + E, *]+
E -> E · * E, *]+
I44
D -> T · ID ;, IDprocrealrecordint
I274
D -> proc ID ; D S · , IDprocrealrecordint
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I244
L -> ID [ E · ], *[+)
E -> E · + E, *]+
E -> E · * E, *]+
I19
S -> ID = · E ;, ID$ifwhilecall
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I52
E -> L · , *;+
L -> L · [ E ], *[;+
I283
S -> ID = E · ;, procrecordintifwhilecallIDreal$
E -> E · + E, *;+
E -> E · * E, *;+
I79
C -> [ CONST ] · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I217
E -> - E · , *ordo+
E -> E · + E, +*ordo
E -> E · * E, +*ordo
I104
E -> ( E · ), *;+
E -> E · + E, *+)
E -> E · * E, *+)
I302
S -> S S · , procrecordintifwhilecallIDreal
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I134
E -> - E · , ==!=<=<>+*>=)
E -> E · + E, ==!=<=<>+*>=)
E -> E · * E, ==!=<=<>+*>=)
I188
E -> E + E · , *]+
E -> E · + E, *]+
E -> E · * E, *]+
I175
D -> proc ID · ; D S, procrecordifwhilecallintIDreal$
I129
B -> not B · , or)
B -> B · or B, or)
I118
L -> L [ · E ], *[]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I33
S -> while B · do S, ID$ifwhilecall
B -> B · or B, ordo
I182
E -> - E · , *+)
E -> E · + E, *+)
E -> E · * E, *+)
I192
L -> L [ E · ], *[]+
E -> E · + E, *]+
E -> E · * E, *]+
I314
S -> call ID ( Elist · ), procrecordintifwhilecallIDreal$
Elist -> Elist · ， E, ，)
I227
L -> ID [ · E ], [，+*)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I257
L -> L [ E ] · , ==[<=!=<>+*>=)
I13
X -> int · , [ID
I194
B -> E relop E · , or)
E -> E · + E, *or+)
E -> E · * E, *or+)
I290
L -> L [ E ] · , *[+)
I219
L -> ID [ · E ], [+*ordo
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I193
B -> B or B · , or)
B -> B · or B, or)
I161
E -> ( · E ), *，+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I29
E -> - · E, >===!=+*<=<>
E ->  · E + E, ==!=<=<>+*>=
E ->  · E * E, ==!=<=<>+*>=
E ->  · - E, ==!=<=<>+*>=
E ->  · ( E ), ==!=<=<>+*>=
E ->  · ID, ==!=<=<>+*>=
E ->  · CONST, ==!=<=<>+*>=
E ->  · L, ==!=<=<>+*>=
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I223
E -> E + · E, *，+)
E ->  · E + E, ，+*)
E ->  · E * E, ，+*)
E ->  · - E, ，+*)
E ->  · ( E ), ，+*)
E ->  · ID, ，+*)
E ->  · CONST, ，+*)
E ->  · L, ，+*)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I154
E -> ( · E ), *ordo+
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I234
S -> ID = · E ;, procrecordintifwhilecallIDreal$
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I327
S -> if B then S · , procrecordintifwhilecallIDreal
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I68
B -> true · , or)
I111
L -> L [ · E ], *[;+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I85
L -> ID [ · E ], ==[!=<=<>+*>=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I187
L -> L [ E · ], *[;+
E -> E · + E, *]+
E -> E · * E, *]+
I195
E -> - · E, *or+)
E ->  · E + E, +*or)
E ->  · E * E, +*or)
E ->  · - E, +*or)
E ->  · ( E ), +*or)
E ->  · ID, +*or)
E ->  · CONST, +*or)
E ->  · L, +*or)
L ->  · ID [ E ], [+*or)
L ->  · L [ E ], [+*or)
I123
B -> ( B ) · , thenor
I25
B -> ( · B ), thenor
E -> ( · E ), >===!=+*<=<>
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[<=!=<>+*>=)
L ->  · L [ E ], ==[<=!=<>+*>=)
I84
E -> ( · E ), ==!=<=<>+*>=
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I191
L -> ID [ E · ], *[]+
E -> E · + E, *]+
E -> E · * E, *]+
I83
E -> - E · , >===!=+*<=<>
E -> E · + E, ==!=<=<>+*>=
E -> E · * E, ==!=<=<>+*>=
I112
L -> ID [ E ] · , =[
I237
S -> while B · do S, procrecordintifwhilecallIDreal$
B -> B · or B, ordo
I176
D -> T ID · ;, procrecordifwhilecallintIDreal$
I141
E -> ID · , *thenor+
L -> ID · [ E ], then[+*or
I87
S -> while B do · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I16
S -> S S · , ID$ifwhilecall
S -> S · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I316
L -> ID [ E ] · , [+*or)
I11
T -> X · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I186
L -> ID [ E · ], *[;+
E -> E · + E, *]+
E -> E · * E, *]+
I215
E -> E + · E, *ordo+
E ->  · E + E, +*ordo
E ->  · E * E, +*ordo
E ->  · - E, +*ordo
E ->  · ( E ), +*ordo
E ->  · ID, +*ordo
E ->  · CONST, +*ordo
E ->  · L, +*ordo
L ->  · ID [ E ], [+*ordo
L ->  · L [ E ], [+*ordo
I280
S -> call · ID ( Elist ), procrecordintifwhilecallIDreal
I46
D -> T ID ; · , procreal$recordint
I56
E -> ID · , *]+
L -> ID · [ E ], *[]+
I177
E -> E + E · , *;+
E -> E · + E, *;+
E -> E · * E, *;+
I69
B -> false · , or)
I102
E -> E * · E, *;+
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I249
L -> L [ E ] · , *[]+
I163
E -> CONST · , *，+)
I156
E -> CONST · , *ordo+
I0
P' ->  · P, $
P ->  · D, $
P ->  · S, $
D ->  · D D, procreal$recordint
D ->  · proc ID ; D S, procreal$recordint
D ->  · T ID ;, procreal$recordint
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
T ->  · X C, ID
T ->  · record D, ID
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
X ->  · int, [ID
X ->  · real, [ID
I89
B -> not B · , ordo
B -> B · or B, ordo
I121
S -> if B then S · , ID$ifwhilecall
S -> S · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I260
E -> ( E ) · , *thenor+
I226
E -> ( E · ), *，+)
E -> E · + E, *+)
E -> E · * E, *+)
I150
B -> B or B · , ordo
B -> B · or B, ordo
I230
D -> proc ID ; D · S, IDprocrealrecordint
D -> D · D, procrecordifwhilecallintIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I100
S -> ID = E ; · , ID$ifwhilecall
I58
relop -> >= · , (CONST-ID
I31
E -> CONST · , >===!=+*<=<>
I218
E -> ( E · ), *ordo+
E -> E · + E, *+)
E -> E · * E, *+)
I247
L -> L [ E ] · , *[;+
I275
D -> D D · , procrecordifwhilecallintIDreal
D -> D · D, procrecordifwhilecallintIDreal
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I21
S -> L = · E ;, ID$ifwhilecall
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I309
D -> T ID ; · , procrecordifwhilecallintIDreal
I7
S -> L · = E ;, ID$ifwhilecall
L -> L · [ E ], =[
I59
S -> L = E · ;, ID$ifwhilecall
E -> E · + E, *;+
E -> E · * E, *;+
I98
D -> proc · ID ; D S, procrecordifwhilecallintIDreal$
I259
E -> E * E · , *thenor+
E -> E · + E, then+*or
E -> E · * E, then+*or
I17
D -> proc ID · ; D S, procreal$recordint
I146
E -> ( E · ), ==!=<=<>+*>=
E -> E · + E, *+)
E -> E · * E, *+)
I199
E -> L · , *or+)
L -> L · [ E ], [+*or)
I313
S -> while B do S · , procrecordintifwhilecallIDreal$
S -> S · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I50
E -> ID · , *;+
L -> ID · [ E ], *[;+
I315
D -> proc ID ; D S · , procrecordifwhilecallintIDreal$
S -> S · S, procrecordifwhilecallintIDreal$
S ->  · S S, procrecordifwhilecallintIDreal$
S ->  · ID = E ;, procrecordifwhilecallintIDreal$
S ->  · L = E ;, procrecordifwhilecallintIDreal$
S ->  · empty, procrecordifwhilecallintIDreal$
S ->  · if B then S, procrecordifwhilecallintIDreal$
S ->  · while B do S, procrecordifwhilecallintIDreal$
S ->  · call ID ( Elist ), procrecordifwhilecallintIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I37
T -> record D · , ID
D -> D · D, IDprocrealrecordint
D ->  · D D, procrecordintIDreal
D ->  · proc ID ; D S, procrecordintIDreal
D ->  · T ID ;, procrecordintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I76
E -> E * · E, >===!=+*<=<>
E ->  · E + E, ==!=<=<>+*>=
E ->  · E * E, ==!=<=<>+*>=
E ->  · - E, ==!=<=<>+*>=
E ->  · ( E ), ==!=<=<>+*>=
E ->  · ID, ==!=<=<>+*>=
E ->  · CONST, ==!=<=<>+*>=
E ->  · L, ==!=<=<>+*>=
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I36
B -> E · relop E, ordo
E -> E · + E, >===!=+*<=<>
E -> E · * E, >===!=+*<=<>
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I228
L -> L [ · E ], [，+*)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I273
L -> L [ E · ], [，+*)
E -> E · + E, *]+
E -> E · * E, *]+
I202
B -> ( B ) · , or)
I310
S -> ID = E ; · , procrecordintifwhilecallIDreal$
I318
S -> ID = E · ;, procrecordintifwhilecallIDreal
E -> E · + E, *;+
E -> E · * E, *;+
I130
B -> ( · B ), or)
E -> ( · E ), >===!=+*<=<>
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[<=!=<>+*>=)
L ->  · L [ E ], ==[<=!=<>+*>=)
I220
L -> L [ · E ], [+*ordo
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I267
L -> L [ E · ], [+*ordo
E -> E · + E, *]+
E -> E · * E, *]+
I99
D -> T · ID ;, procrecordifwhilecallintIDreal$
I235
S -> L = · E ;, procrecordintifwhilecallIDreal$
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I251
E -> E * · E, *or+)
E ->  · E + E, +*or)
E ->  · E * E, +*or)
E ->  · - E, +*or)
E ->  · ( E ), +*or)
E ->  · ID, +*or)
E ->  · CONST, +*or)
E ->  · L, +*or)
L ->  · ID [ E ], [+*or)
L ->  · L [ E ], [+*or)
I171
S -> L · = E ;, procrecordintifwhilecallIDreal$
L -> L · [ E ], =[
I284
S -> L = E · ;, procrecordintifwhilecallIDreal$
E -> E · + E, *;+
E -> E · * E, *;+
I281
D -> proc ID · ; D S, procrecordifwhilecallintIDreal
I86
L -> L [ · E ], ==[!=<=<>+*>=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I148
L -> L [ E · ], ==[!=<=<>+*>=
E -> E · + E, *]+
E -> E · * E, *]+
I329
S -> call ID ( Elist · ), procrecordintifwhilecallIDreal
Elist -> Elist · ， E, ，)
I18
D -> T ID · ;, procreal$recordint
I91
B -> E relop · E, ordo
E ->  · E + E, *ordo+
E ->  · E * E, *ordo+
E ->  · - E, *ordo+
E ->  · ( E ), *ordo+
E ->  · ID, *ordo+
E ->  · CONST, *ordo+
E ->  · L, *ordo+
L ->  · ID [ E ], [+*ordo
L ->  · L [ E ], [+*ordo
I252
E -> - E · , *or+)
E -> E · + E, +*or)
E -> E · * E, +*or)
I272
L -> ID [ E · ], [，+*)
E -> E · + E, *]+
E -> E · * E, *]+
I211
L -> ID [ · E ], then[+*or
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I266
L -> ID [ E · ], [+*ordo
E -> E · + E, *]+
E -> E · * E, *]+
I303
S -> ID = · E ;, procrecordintifwhilecallIDreal
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I140
E -> ( · E ), *thenor+
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I164
E -> L · , *，+)
L -> L · [ E ], [，+*)
I24
B -> not · B, thenor
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I101
E -> E + · E, *;+
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I147
L -> ID [ E · ], ==[!=<=<>+*>=
E -> E · + E, *]+
E -> E · * E, *]+
I115
E -> - E · , *]+
E -> E · + E, *]+
E -> E · * E, *]+
I293
E -> ( E ) · , *or+)
I157
E -> L · , *ordo+
L -> L · [ E ], [+*ordo
I306
S -> while B · do S, procrecordintifwhilecallIDreal
B -> B · or B, ordo
I282
D -> T ID · ;, procrecordifwhilecallintIDreal
I83
C -> [ CONST ] C · , ID
I92
S -> call ID ( · Elist ), ID$ifwhilecall
Elist ->  · Elist ， E, ，)
Elist ->  · E, ，)
E ->  · E + E, *，+)
E ->  · E * E, *，+)
E ->  · - E, *，+)
E ->  · ( E ), *，+)
E ->  · ID, *，+)
E ->  · CONST, *，+)
E ->  · L, *，+)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I256
L -> ID [ E ] · , ==[<=!=<>+*>=)
I301
L -> L [ E ] · , [，+*)
I289
L -> ID [ E ] · , *[+)
I2
P -> D · , $
D -> D · D, procreal$recordint
D ->  · D D, procrecordintreal$
D ->  · proc ID ; D S, procrecordintreal$
D ->  · T ID ;, procrecordintreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I299
L -> L [ E ] · , [+*ordo
I56
relop -> != · , (CONST-ID
I139
E -> - · E, *thenor+
E ->  · E + E, then+*or
E ->  · E * E, then+*or
E ->  · - E, then+*or
E ->  · ( E ), then+*or
E ->  · ID, then+*or
E ->  · CONST, then+*or
E ->  · L, then+*or
L ->  · ID [ E ], then[+*or
L ->  · L [ E ], then[+*or
I270
E -> E * E · , *，+)
E -> E · + E, ，+*)
E -> E · * E, ，+*)
I214
L -> L [ E ] · , ==[!=<=<>+*>=
I4
D -> proc · ID ; D S, procreal$recordint
I239
D -> proc ID ; · D S, procrecordifwhilecallintIDreal$
D ->  · D D, procrecordifwhilecallintIDreal$
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal$
D ->  · T ID ;, procrecordifwhilecallintIDreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I221
S -> call ID ( Elist ) · , ID$ifwhilecall
I12
T -> record · D, ID
D ->  · D D, IDprocrealrecordint
D ->  · proc ID ; D S, IDprocrealrecordint
D ->  · T ID ;, IDprocrealrecordint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I32
E -> L · , >===!=+*<=<>
L -> L · [ E ], ==[!=<=<>+*>=
I90
B -> ( B · ), ordo
B -> B · or B, or)
I142
E -> CONST · , *thenor+
I264
E -> E * E · , *ordo+
E -> E · + E, +*ordo
E -> E · * E, +*ordo
I308
D -> proc ID ; · D S, procrecordifwhilecallintIDreal
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I168
D -> proc ID ; D S · , procreal$recordint
S -> S · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I287
S -> call ID ( · Elist ), procrecordintifwhilecallIDreal$
Elist ->  · Elist ， E, ，)
Elist ->  · E, ，)
E ->  · E + E, *，+)
E ->  · E * E, *，+)
E ->  · - E, *，+)
E ->  · ( E ), *，+)
E ->  · ID, *，+)
E ->  · CONST, *，+)
E ->  · L, *，+)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I23
S -> if B · then S, ID$ifwhilecall
B -> B · or B, thenor
I75
E -> E + · E, >===!=+*<=<>
E ->  · E + E, ==!=<=<>+*>=
E ->  · E * E, ==!=<=<>+*>=
E ->  · - E, ==!=<=<>+*>=
E ->  · ( E ), ==!=<=<>+*>=
E ->  · ID, ==!=<=<>+*>=
E ->  · CONST, ==!=<=<>+*>=
E ->  · L, ==!=<=<>+*>=
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I201
E -> E * E · , ==!=<=<>+*>=)
E -> E · + E, ==!=<=<>+*>=)
E -> E · * E, ==!=<=<>+*>=)
I84
Elist -> Elist ， E · , ，)
E -> E · + E, *，+)
E -> E · * E, *，+)
I197
E -> ID · , *or+)
L -> ID · [ E ], [+*or)
I242
E -> E * E · , *+)
E -> E · + E, *+)
E -> E · * E, *+)
I210
E -> ( E · ), *thenor+
E -> E · + E, *+)
E -> E · * E, *+)
I70
E -> - · E, ==!=<=<>+*>=)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[!=<=<>+*>=)
L ->  · L [ E ], ==[!=<=<>+*>=)
I20
L -> ID [ · E ], =[
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I5
D -> T · ID ;, procreal$recordint
I133
E -> ( E · ), ==!=<=<>+*>=)
B -> E · relop E, or)
E -> E · + E, ==!=<=<>+*>=)
E -> E · * E, ==!=<=<>+*>=)
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I250
E -> E + · E, *or+)
E ->  · E + E, +*or)
E ->  · E * E, +*or)
E ->  · - E, +*or)
E ->  · ( E ), +*or)
E ->  · ID, +*or)
E ->  · CONST, +*or)
E ->  · L, +*or)
L ->  · ID [ E ], [+*or)
L ->  · L [ E ], [+*or)
I39
S -> call ID · ( Elist ), ID$ifwhilecall
I231
D -> proc · ID ; D S, procrecordifwhilecallintIDreal
I103
E -> - E · , *;+
E -> E · + E, *;+
E -> E · * E, *;+
I248
L -> ID [ E ] · , *[]+
I258
E -> E + E · , *thenor+
E -> E · + E, then+*or
E -> E · * E, then+*or
I324
S -> call ID ( Elist ) · , procrecordintifwhilecallIDreal$
I254
L -> ID [ · E ], [+*or)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I196
E -> ( · E ), *or+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I34
B -> not · B, ordo
B ->  · B or B, ordo
B ->  · not B, ordo
B ->  · ( B ), ordo
B ->  · E relop E, ordo
B ->  · true, ordo
B ->  · false, ordo
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I285
S -> if B then · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I236
S -> if B · then S, procrecordintifwhilecallIDreal$
B -> B · or B, thenor
I26
B -> E · relop E, thenor
E -> E · + E, >===!=+*<=<>
E -> E · * E, >===!=+*<=<>
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I325
S -> ID = E ; · , procrecordintifwhilecallIDreal
I53
relop -> < · , (CONST-ID
I328
S -> while B do S · , procrecordintifwhilecallIDreal
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I105
E -> - · E, *+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I145
E -> E * E · , >===!=+*<=<>
E -> E · + E, ==!=<=<>+*>=
E -> E · * E, ==!=<=<>+*>=
I246
L -> ID [ E ] · , *[;+
I82
Elist -> Elist ， · E, ，)
E ->  · E + E, *，+)
E ->  · E * E, *，+)
E ->  · - E, *，+)
E ->  · ( E ), *，+)
E ->  · ID, *，+)
E ->  · CONST, *，+)
E ->  · L, *，+)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I212
L -> L [ · E ], then[+*or
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I232
D -> T · ID ;, procrecordifwhilecallintIDreal
I330
D -> proc ID ; D S · , procrecordifwhilecallintIDreal
S -> S · S, procrecordifwhilecallintIDreal
S ->  · S S, procrecordifwhilecallintIDreal
S ->  · ID = E ;, procrecordifwhilecallintIDreal
S ->  · L = E ;, procrecordifwhilecallintIDreal
S ->  · empty, procrecordifwhilecallintIDreal
S ->  · if B then S, procrecordifwhilecallintIDreal
S ->  · while B do S, procrecordifwhilecallintIDreal
S ->  · call ID ( Elist ), procrecordifwhilecallintIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I262
L -> L [ E · ], then[+*or
E -> E · + E, *]+
E -> E · * E, *]+
I304
S -> L = · E ;, procrecordintifwhilecallIDreal
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I277
S -> L · = E ;, procrecordintifwhilecallIDreal
L -> L · [ E ], =[
I66
B -> not · B, or)
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I319
S -> L = E · ;, procrecordintifwhilecallIDreal
E -> E · + E, *;+
E -> E · * E, *;+
I119
S -> L = E ; · , ID$ifwhilecall
I320
S -> if B then · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I238
S -> call ID · ( Elist ), procrecordintifwhilecallIDreal$
I94
D -> D D · , IDprocrealrecordint
D -> D · D, procrecordintIDreal
D ->  · D D, procrecordintIDreal
D ->  · proc ID ; D S, procrecordintIDreal
D ->  · T ID ;, procrecordintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I138
B -> E relop E · , thenor
E -> E · + E, *thenor+
E -> E · * E, *thenor+
I54
E -> - · E, *]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I162
E -> ID · , *，+)
L -> ID · [ E ], [，+*)
I208
E -> E * · E, *thenor+
E ->  · E + E, then+*or
E ->  · E * E, then+*or
E ->  · - E, then+*or
E ->  · ( E ), then+*or
E ->  · ID, then+*or
E ->  · CONST, then+*or
E ->  · L, then+*or
L ->  · ID [ E ], then[+*or
L ->  · L [ E ], then[+*or
I261
L -> ID [ E · ], then[+*or
E -> E · + E, *]+
E -> E · * E, *]+
I155
E -> ID · , *ordo+
L -> ID · [ E ], [+*ordo
I203
E -> ( E ) · , ==!=<=<>+*>=)
I198
E -> CONST · , *or+)
I243
E -> ( E ) · , *+)
I6
S -> ID · = E ;, ID$ifwhilecall
L -> ID · [ E ], =[
I311
S -> L = E ; · , procrecordintifwhilecallIDreal$
I57
relop -> > · , (CONST-ID
I45
D -> proc ID ; · D S, procreal$recordint
D ->  · D D, procrecordifwhilecallintIDreal$
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal$
D ->  · T ID ;, procrecordifwhilecallintIDreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I9
S -> while · B do S, ID$ifwhilecall
B ->  · B or B, ordo
B ->  · not B, ordo
B ->  · ( B ), ordo
B ->  · E relop E, ordo
B ->  · true, ordo
B ->  · false, ordo
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I8
S -> if · B then S, ID$ifwhilecall
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I149
S -> while B do S · , ID$ifwhilecall
S -> S · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I253
E -> ( E · ), *or+)
E -> E · + E, *+)
E -> E · * E, *+)
I126
B -> E relop · E, or)
E ->  · E + E, *or+)
E ->  · E * E, *or+)
E ->  · - E, *or+)
E ->  · ( E ), *or+)
E ->  · ID, *or+)
E ->  · CONST, *or+)
E ->  · L, *or+)
L ->  · ID [ E ], [+*or)
L ->  · L [ E ], [+*or)
I297
L -> L [ E ] · , then[+*or
I37
B -> true · , ordo
I30
E -> ID · , >===!=+*<=<>
L -> ID · [ E ], ==[!=<=<>+*>=
I128
E -> E * · E, ==!=<=<>+*>=)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[!=<=<>+*>=)
L ->  · L [ E ], ==[!=<=<>+*>=)
I286
S -> while B do · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I269
E -> E + E · , *，+)
E -> E · + E, ，+*)
E -> E · * E, ，+*)
I170
S -> ID · = E ;, procrecordintifwhilecallIDreal$
L -> ID · [ E ], =[
I22
L -> L [ · E ], =[
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I167
D -> T ID ; · , IDprocrealrecordint
I60
L -> L [ E · ], =[
E -> E · + E, *]+
E -> E · * E, *]+
I288
D -> proc ID ; D · S, procrecordifwhilecallintIDreal$
D -> D · D, procrecordifwhilecallintIDreal$
S ->  · S S, procrecordifwhilecallintIDreal$
S ->  · ID = E ;, procrecordifwhilecallintIDreal$
S ->  · L = E ;, procrecordifwhilecallintIDreal$
S ->  · empty, procrecordifwhilecallintIDreal$
S ->  · if B then S, procrecordifwhilecallintIDreal$
S ->  · while B do S, procrecordifwhilecallintIDreal$
S ->  · call ID ( Elist ), procrecordifwhilecallintIDreal$
D ->  · D D, procrecordifwhilecallintIDreal$
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal$
D ->  · T ID ;, procrecordifwhilecallintIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I173
S -> while · B do S, procrecordintifwhilecallIDreal$
B ->  · B or B, ordo
B ->  · not B, ordo
B ->  · ( B ), ordo
B ->  · E relop E, ordo
B ->  · true, ordo
B ->  · false, ordo
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I160
E -> - · E, *，+)
E ->  · E + E, ，+*)
E ->  · E * E, ，+*)
E ->  · - E, ，+*)
E ->  · ( E ), ，+*)
E ->  · ID, ，+*)
E ->  · CONST, ，+*)
E ->  · L, ，+*)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I131
B -> E · relop E, or)
E -> E · + E, >===!=+*<=<>
E -> E · * E, >===!=+*<=<>
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I172
S -> if · B then S, procrecordintifwhilecallIDreal$
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I322
S -> call ID ( · Elist ), procrecordintifwhilecallIDreal
Elist ->  · Elist ， E, ，)
Elist ->  · E, ，)
E ->  · E + E, *，+)
E ->  · E * E, *，+)
E ->  · - E, *，+)
E ->  · ( E ), *，+)
E ->  · ID, *，+)
E ->  · CONST, *，+)
E ->  · L, *，+)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I263
E -> E + E · , *ordo+
E -> E · + E, +*ordo
E -> E · * E, +*ordo
I321
S -> while B do · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I300
L -> ID [ E ] · , [，+*)
I64
B -> ( B · ), thenor
B -> B · or B, or)
I255
L -> L [ · E ], [+*or)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I36
C -> [ · CONST ] C, ID
I3
P -> S · , $
S -> S · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I295
L -> L [ E · ], [+*or)
E -> E · + E, *]+
E -> E · * E, *]+
I298
L -> ID [ E ] · , [+*ordo
I200
E -> E + E · , ==!=<=<>+*>=)
E -> E · + E, ==!=<=<>+*>=)
E -> E · * E, ==!=<=<>+*>=)
I63
B -> not B · , thenor
B -> B · or B, thenor
I190
E -> ( E ) · , *]+
I73
E -> L · , ==!=<=<>+*>=)
L -> L · [ E ], ==[<=!=<>+*>=)
I181
E -> E * · E, *+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I109
E -> L · , *+)
L -> L · [ E ], *[+)
I122
B -> B or B · , thenor
B -> B · or B, thenor
I241
E -> E + E · , *+)
E -> E · + E, *+)
E -> E · * E, *+)
I38
B -> false · , ordo
I323
D -> proc ID ; D · S, procrecordifwhilecallintIDreal
D -> D · D, procrecordifwhilecallintIDreal
S ->  · S S, procrecordifwhilecallintIDreal
S ->  · ID = E ;, procrecordifwhilecallintIDreal
S ->  · L = E ;, procrecordifwhilecallintIDreal
S ->  · empty, procrecordifwhilecallintIDreal
S ->  · if B then S, procrecordifwhilecallintIDreal
S ->  · while B do S, procrecordifwhilecallintIDreal
S ->  · call ID ( Elist ), procrecordifwhilecallintIDreal
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I136
L -> ID [ · E ], ==[<=!=<>+*>=)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I213
L -> ID [ E ] · , ==[!=<=<>+*>=
I292
E -> E * E · , *or+)
E -> E · + E, +*or)
E -> E · * E, +*or)
I184
L -> ID [ · E ], *[+)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I233
S -> S S · , procrecordintifwhilecallIDreal$
S -> S · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I53
L -> ID [ E · ], =[
E -> E · + E, *]+
E -> E · * E, *]+
I135
E -> ( · E ), ==!=<=<>+*>=)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I331
S -> call ID ( Elist ) · , procrecordintifwhilecallIDreal
I106
E -> ( · E ), *+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I179
E -> ( E ) · , *;+
I114
E -> E * · E, *]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I95
D -> proc ID · ; D S, IDprocrealrecordint
I294
L -> ID [ E · ], [+*or)
E -> E · + E, *]+
E -> E · * E, *]+
I152
B -> E relop E · , ordo
E -> E · + E, *ordo+
E -> E · * E, *ordo+
I153
E -> - · E, *ordo+
E ->  · E + E, +*ordo
E ->  · E * E, +*ordo
E ->  · - E, +*ordo
E ->  · ( E ), +*ordo
E ->  · ID, +*ordo
E ->  · CONST, +*ordo
E ->  · L, +*ordo
L ->  · ID [ E ], [+*ordo
L ->  · L [ E ], [+*ordo
I62
B -> B or · B, thenor
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I305
S -> if B · then S, procrecordintifwhilecallIDreal
B -> B · or B, thenor
I189
E -> E * E · , *]+
E -> E · + E, *]+
E -> E · * E, *]+
I207
E -> E + · E, *thenor+
E ->  · E + E, then+*or
E ->  · E * E, then+*or
E ->  · - E, then+*or
E ->  · ( E ), then+*or
E ->  · ID, then+*or
E ->  · CONST, then+*or
E ->  · L, then+*or
L ->  · ID [ E ], then[+*or
L ->  · L [ E ], then[+*or
I144
E -> E + E · , >===!=+*<=<>
E -> E · + E, ==!=<=<>+*>=
E -> E · * E, ==!=<=<>+*>=
I120
L -> L [ E ] · , =[
I312
S -> if B then S · , procrecordintifwhilecallIDreal$
S -> S · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I55
relop -> == · , (CONST-ID
I35
T -> X C · , ID
I307
S -> call ID · ( Elist ), procrecordintifwhilecallIDreal
I209
E -> - E · , *thenor+
E -> E · + E, then+*or
E -> E · * E, then+*or
I317
L -> L [ E ] · , [+*or)
I10
S -> call · ID ( Elist ), ID$ifwhilecall
I151
B -> ( B ) · , ordo
I65
E -> ( E · ), >===!=+*<=<>
B -> E · relop E, or)
E -> E · + E, ==!=<=<>+*>=)
E -> E · * E, ==!=<=<>+*>=)
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I35
B -> ( · B ), ordo
E -> ( · E ), >===!=+*<=<>
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[<=!=<>+*>=)
L ->  · L [ E ], ==[<=!=<>+*>=)
I96
D -> T ID · ;, IDprocrealrecordint
I117
L -> ID [ · E ], *[]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I72
E -> CONST · , ==!=<=<>+*>=)
I108
E -> CONST · , *+)
I55
E -> ( · E ), *]+
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I127
E -> E + · E, ==!=<=<>+*>=)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[!=<=<>+*>=)
L ->  · L [ E ], ==[!=<=<>+*>=)
I326
S -> L = E ; · , procrecordintifwhilecallIDreal
I54
relop -> <= · , (CONST-ID
I132
B -> ( B · ), or)
B -> B · or B, or)
I224
E -> E * · E, *，+)
E ->  · E + E, ，+*)
E ->  · E * E, ，+*)
E ->  · - E, ，+*)
E ->  · ( E ), ，+*)
E ->  · ID, ，+*)
E ->  · CONST, ，+*)
E ->  · L, ，+*)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I97
D -> proc ID ; D · S, procreal$recordint
D -> D · D, procrecordifwhilecallintIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
D ->  · D D, procrecordifwhilecallintIDreal$
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal$
D ->  · T ID ;, procrecordifwhilecallintIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I204
E -> ( E · ), ==!=<=<>+*>=)
E -> E · + E, *+)
E -> E · * E, *+)
I183
E -> ( E · ), *+)
E -> E · + E, *+)
E -> E · * E, *+)
I110
L -> ID [ · E ], *[;+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I49
E -> ( · E ), *;+
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I143
E -> L · , *thenor+
L -> L · [ E ], then[+*or
I174
S -> call · ID ( Elist ), procrecordintifwhilecallIDreal$
I178
E -> E * E · , *;+
E -> E · + E, *;+
E -> E · * E, *;+
I166
D -> proc ID ; · D S, IDprocrealrecordint
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I15
D -> D D · , procreal$recordint
D -> D · D, procrecordintreal$
D ->  · D D, procrecordintreal$
D ->  · proc ID ; D S, procrecordintreal$
D ->  · T ID ;, procrecordintreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I67
B -> ( · B ), or)
E -> ( · E ), ==!=<=<>+*>=)
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[<=!=<>+*>=)
L ->  · L [ E ], ==[<=!=<>+*>=)
I180
E -> E + · E, *+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I27
B -> true · , thenor
I271
E -> ( E ) · , *，+)
I88
B -> B or · B, ordo
B ->  · B or B, ordo
B ->  · not B, ordo
B ->  · ( B ), ordo
B ->  · E relop E, ordo
B ->  · true, ordo
B ->  · false, ordo
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I62
C -> [ CONST · ] C, ID
I58
E -> L · , *]+
L -> L · [ E ], *[]+
I265
E -> ( E ) · , *ordo+
I276
S -> ID · = E ;, procrecordintifwhilecallIDreal
L -> ID · [ E ], =[
I14
X -> real · , [ID
I169
D -> D D · , procrecordifwhilecallintIDreal$
D -> D · D, procrecordifwhilecallintIDreal$
D ->  · D D, procrecordifwhilecallintIDreal$
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal$
D ->  · T ID ;, procrecordifwhilecallintIDreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I71
E -> ID · , ==!=<=<>+*>=)
L -> ID · [ E ], ==[<=!=<>+*>=)
I137
L -> L [ · E ], ==[<=!=<>+*>=)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I279
S -> while · B do S, procrecordintifwhilecallIDreal
B ->  · B or B, ordo
B ->  · not B, ordo
B ->  · ( B ), ordo
B ->  · E relop E, ordo
B ->  · true, ordo
B ->  · false, ordo
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I206
L -> L [ E · ], ==[<=!=<>+*>=)
E -> E · + E, *]+
E -> E · * E, *]+
I278
S -> if · B then S, procrecordintifwhilecallIDreal
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I185
L -> L [ · E ], *[+)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I47
S -> ID = E · ;, ID$ifwhilecall
E -> E · + E, *;+
E -> E · * E, *;+
I78
Elist -> E · , ，)
E -> E · + E, *，+)
E -> E · * E, *，+)
I245
L -> L [ E · ], *[+)
E -> E · + E, *]+
E -> E · * E, *]+
I43
D -> proc · ID ; D S, IDprocrealrecordint
I113
E -> E + · E, *]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I74
B -> E relop · E, thenor
E ->  · E + E, *thenor+
E ->  · E * E, *thenor+
E ->  · - E, *thenor+
E ->  · ( E ), *thenor+
E ->  · ID, *thenor+
E ->  · CONST, *thenor+
E ->  · L, *thenor+
L ->  · ID [ E ], then[+*or
L ->  · L [ E ], then[+*or
I107
E -> ID · , *+)
L -> ID · [ E ], *[+)
I57
E -> CONST · , *]+
I124
B -> B or · B, or)
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I216
E -> E * · E, *ordo+
E ->  · E + E, +*ordo
E ->  · E * E, +*ordo
E ->  · - E, +*ordo
E ->  · ( E ), +*ordo
E ->  · ID, +*ordo
E ->  · CONST, +*ordo
E ->  · L, +*ordo
L ->  · ID [ E ], [+*ordo
L ->  · L [ E ], [+*ordo
I240
D -> T ID ; · , procrecordifwhilecallintIDreal$
I125
E -> ( E ) · , >===!=+*<=<>
I296
L -> ID [ E ] · , then[+*or
I1
P' -> P · , $
I61
S -> if B then · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I48
E -> - · E, *;+
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17)]
5 - [(ID, 18)]
6 - [(=, 19), ([, 20)]
7 - [(=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 39)]
11 - [(C, 40), ([, 41)]
12 - [(D, 42), (proc, 43), (T, 44), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 45)]
18 - [(;, 46)]
19 - [(E, 47), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
20 - [(E, 53), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
21 - [(E, 59), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
22 - [(E, 60), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
23 - [(then, 61), (or, 62)]
24 - [(B, 63), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 64), (E, 65), (not, 66), ((, 67), (true, 68), (false, 69), (-, 70), (ID, 71), (CONST, 72), (L, 73)]
26 - [(relop, 74), (+, 75), (*, 76), (<, 77), (<=, 78), (==, 79), (!=, 80), (>, 81), (>=, 82)]
29 - [(E, 83), (-, 29), ((, 84), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 85)]
32 - [([, 86)]
33 - [(do, 87), (or, 88)]
34 - [(B, 89), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
35 - [(B, 90), (E, 65), (not, 66), ((, 67), (true, 68), (false, 69), (-, 70), (ID, 71), (CONST, 72), (L, 73)]
36 - [(relop, 91), (+, 75), (*, 76), (<, 77), (<=, 78), (==, 79), (!=, 80), (>, 81), (>=, 82)]
39 - [((, 92)]
41 - [(CONST, 93)]
42 - [(D, 94), (proc, 43), (T, 44), (X, 11), (record, 12), (int, 13), (real, 14)]
43 - [(ID, 95)]
44 - [(ID, 96)]
45 - [(D, 97), (proc, 98), (T, 99), (X, 11), (record, 12), (int, 13), (real, 14)]
47 - [(;, 100), (+, 101), (*, 102)]
48 - [(E, 103), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
49 - [(E, 104), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
50 - [([, 110)]
52 - [([, 111)]
53 - [(], 112), (+, 113), (*, 114)]
54 - [(E, 115), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
55 - [(E, 116), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
56 - [([, 117)]
58 - [([, 118)]
59 - [(;, 119), (+, 101), (*, 102)]
60 - [(], 120), (+, 113), (*, 114)]
61 - [(S, 121), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
62 - [(B, 122), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
63 - [(or, 62)]
64 - [(), 123), (or, 124)]
65 - [(), 125), (relop, 126), (+, 127), (*, 128), (<, 77), (<=, 78), (==, 79), (!=, 80), (>, 81), (>=, 82)]
66 - [(B, 129), (not, 66), ((, 130), (E, 131), (true, 68), (false, 69), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
67 - [(B, 132), (E, 133), (not, 66), ((, 67), (true, 68), (false, 69), (-, 70), (ID, 71), (CONST, 72), (L, 73)]
70 - [(E, 134), (-, 70), ((, 135), (ID, 71), (CONST, 72), (L, 73)]
71 - [([, 136)]
73 - [([, 137)]
74 - [(E, 138), (-, 139), ((, 140), (ID, 141), (CONST, 142), (L, 143)]
75 - [(E, 144), (-, 29), ((, 84), (ID, 30), (CONST, 31), (L, 32)]
76 - [(E, 145), (-, 29), ((, 84), (ID, 30), (CONST, 31), (L, 32)]
83 - [(+, 75), (*, 76)]
84 - [(E, 146), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
85 - [(E, 147), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
86 - [(E, 148), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
87 - [(S, 149), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
88 - [(B, 150), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
89 - [(or, 88)]
90 - [(), 151), (or, 124)]
91 - [(E, 152), (-, 153), ((, 154), (ID, 155), (CONST, 156), (L, 157)]
92 - [(Elist, 158), (E, 159), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
93 - [(], 165)]
94 - [(D, 94), (proc, 43), (T, 44), (X, 11), (record, 12), (int, 13), (real, 14)]
95 - [(;, 166)]
96 - [(;, 167)]
97 - [(S, 168), (D, 169), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174), (proc, 98), (T, 99), (X, 11), (record, 12), (int, 13), (real, 14)]
98 - [(ID, 175)]
99 - [(ID, 176)]
101 - [(E, 177), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
102 - [(E, 178), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
103 - [(+, 101), (*, 102)]
104 - [(), 179), (+, 180), (*, 181)]
105 - [(E, 182), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
106 - [(E, 183), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
107 - [([, 184)]
109 - [([, 185)]
110 - [(E, 186), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
111 - [(E, 187), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
113 - [(E, 188), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
114 - [(E, 189), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
115 - [(+, 113), (*, 114)]
116 - [(), 190), (+, 180), (*, 181)]
117 - [(E, 191), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
118 - [(E, 192), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
121 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
122 - [(or, 62)]
124 - [(B, 193), (not, 66), ((, 130), (E, 131), (true, 68), (false, 69), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
126 - [(E, 194), (-, 195), ((, 196), (ID, 197), (CONST, 198), (L, 199)]
127 - [(E, 200), (-, 70), ((, 135), (ID, 71), (CONST, 72), (L, 73)]
128 - [(E, 201), (-, 70), ((, 135), (ID, 71), (CONST, 72), (L, 73)]
129 - [(or, 124)]
130 - [(B, 132), (E, 65), (not, 66), ((, 67), (true, 68), (false, 69), (-, 70), (ID, 71), (CONST, 72), (L, 73)]
131 - [(relop, 126), (+, 75), (*, 76), (<, 77), (<=, 78), (==, 79), (!=, 80), (>, 81), (>=, 82)]
132 - [(), 202), (or, 124)]
133 - [(), 203), (relop, 126), (+, 127), (*, 128), (<, 77), (<=, 78), (==, 79), (!=, 80), (>, 81), (>=, 82)]
134 - [(+, 127), (*, 128)]
135 - [(E, 204), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
136 - [(E, 205), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
137 - [(E, 206), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
138 - [(+, 207), (*, 208)]
139 - [(E, 209), (-, 139), ((, 140), (ID, 141), (CONST, 142), (L, 143)]
140 - [(E, 210), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
141 - [([, 211)]
143 - [([, 212)]
144 - [(+, 75), (*, 76)]
145 - [(+, 75), (*, 76)]
146 - [(), 125), (+, 180), (*, 181)]
147 - [(], 213), (+, 113), (*, 114)]
148 - [(], 214), (+, 113), (*, 114)]
149 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
150 - [(or, 88)]
152 - [(+, 215), (*, 216)]
153 - [(E, 217), (-, 153), ((, 154), (ID, 155), (CONST, 156), (L, 157)]
154 - [(E, 218), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
155 - [([, 219)]
157 - [([, 220)]
158 - [(), 221), (，, 222)]
159 - [(+, 223), (*, 224)]
160 - [(E, 225), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
161 - [(E, 226), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
162 - [([, 227)]
164 - [([, 228)]
165 - [(C, 229), ([, 41)]
166 - [(D, 230), (proc, 231), (T, 232), (X, 11), (record, 12), (int, 13), (real, 14)]
168 - [(S, 233), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
169 - [(D, 169), (proc, 98), (T, 99), (X, 11), (record, 12), (int, 13), (real, 14)]
170 - [(=, 234), ([, 20)]
171 - [(=, 235), ([, 22)]
172 - [(B, 236), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
173 - [(B, 237), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
174 - [(ID, 238)]
175 - [(;, 239)]
176 - [(;, 240)]
177 - [(+, 101), (*, 102)]
178 - [(+, 101), (*, 102)]
180 - [(E, 241), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
181 - [(E, 242), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
182 - [(+, 180), (*, 181)]
183 - [(), 243), (+, 180), (*, 181)]
184 - [(E, 244), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
185 - [(E, 245), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
186 - [(], 246), (+, 113), (*, 114)]
187 - [(], 247), (+, 113), (*, 114)]
188 - [(+, 113), (*, 114)]
189 - [(+, 113), (*, 114)]
191 - [(], 248), (+, 113), (*, 114)]
192 - [(], 249), (+, 113), (*, 114)]
193 - [(or, 124)]
194 - [(+, 250), (*, 251)]
195 - [(E, 252), (-, 195), ((, 196), (ID, 197), (CONST, 198), (L, 199)]
196 - [(E, 253), (-, 105), ((, 106), (ID, 107), (CONST, 108), (L, 109)]
197 - [([, 254)]
199 - [([, 255)]
200 - [(+, 127), (*, 128)]
201 - [(+, 127), (*, 128)]
204 - [(), 203), (+, 180), (*, 181)]
205 - [(], 256), (+, 113), (*, 114)]
206 - [(], 257), (+, 113), (*, 114)]
207 - [(E, 258), (-, 139), ((, 140), (ID, 141), (CONST, 142), (L, 143)]
208 - [(E, 259), (-, 139), ((, 140), (ID, 141), (CONST, 142), (L, 143)]
209 - [(+, 207), (*, 208)]
210 - [(), 260), (+, 180), (*, 181)]
211 - [(E, 261), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
212 - [(E, 262), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
215 - [(E, 263), (-, 153), ((, 154), (ID, 155), (CONST, 156), (L, 157)]
216 - [(E, 264), (-, 153), ((, 154), (ID, 155), (CONST, 156), (L, 157)]
217 - [(+, 215), (*, 216)]
218 - [(), 265), (+, 180), (*, 181)]
219 - [(E, 266), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
220 - [(E, 267), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
222 - [(E, 268), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
223 - [(E, 269), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
224 - [(E, 270), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
225 - [(+, 223), (*, 224)]
226 - [(), 271), (+, 180), (*, 181)]
227 - [(E, 272), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
228 - [(E, 273), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
230 - [(S, 274), (D, 275), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280), (proc, 231), (T, 232), (X, 11), (record, 12), (int, 13), (real, 14)]
231 - [(ID, 281)]
232 - [(ID, 282)]
233 - [(S, 233), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
234 - [(E, 283), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
235 - [(E, 284), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
236 - [(then, 285), (or, 62)]
237 - [(do, 286), (or, 88)]
238 - [((, 287)]
239 - [(D, 288), (proc, 98), (T, 99), (X, 11), (record, 12), (int, 13), (real, 14)]
241 - [(+, 180), (*, 181)]
242 - [(+, 180), (*, 181)]
244 - [(], 289), (+, 113), (*, 114)]
245 - [(], 290), (+, 113), (*, 114)]
250 - [(E, 291), (-, 195), ((, 196), (ID, 197), (CONST, 198), (L, 199)]
251 - [(E, 292), (-, 195), ((, 196), (ID, 197), (CONST, 198), (L, 199)]
252 - [(+, 250), (*, 251)]
253 - [(), 293), (+, 180), (*, 181)]
254 - [(E, 294), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
255 - [(E, 295), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
258 - [(+, 207), (*, 208)]
259 - [(+, 207), (*, 208)]
261 - [(], 296), (+, 113), (*, 114)]
262 - [(], 297), (+, 113), (*, 114)]
263 - [(+, 215), (*, 216)]
264 - [(+, 215), (*, 216)]
266 - [(], 298), (+, 113), (*, 114)]
267 - [(], 299), (+, 113), (*, 114)]
268 - [(+, 223), (*, 224)]
269 - [(+, 223), (*, 224)]
270 - [(+, 223), (*, 224)]
272 - [(], 300), (+, 113), (*, 114)]
273 - [(], 301), (+, 113), (*, 114)]
274 - [(S, 302), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]
275 - [(D, 275), (proc, 231), (T, 232), (X, 11), (record, 12), (int, 13), (real, 14)]
276 - [(=, 303), ([, 20)]
277 - [(=, 304), ([, 22)]
278 - [(B, 305), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
279 - [(B, 306), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
280 - [(ID, 307)]
281 - [(;, 308)]
282 - [(;, 309)]
283 - [(;, 310), (+, 101), (*, 102)]
284 - [(;, 311), (+, 101), (*, 102)]
285 - [(S, 312), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
286 - [(S, 313), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
287 - [(Elist, 314), (E, 159), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
288 - [(S, 315), (D, 169), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174), (proc, 98), (T, 99), (X, 11), (record, 12), (int, 13), (real, 14)]
291 - [(+, 250), (*, 251)]
292 - [(+, 250), (*, 251)]
294 - [(], 316), (+, 113), (*, 114)]
295 - [(], 317), (+, 113), (*, 114)]
302 - [(S, 302), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]
303 - [(E, 318), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
304 - [(E, 319), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
305 - [(then, 320), (or, 62)]
306 - [(do, 321), (or, 88)]
307 - [((, 322)]
308 - [(D, 323), (proc, 231), (T, 232), (X, 11), (record, 12), (int, 13), (real, 14)]
312 - [(S, 233), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
313 - [(S, 233), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
314 - [(), 324), (，, 222)]
315 - [(S, 233), (ID, 170), (L, 171), (if, 172), (while, 173), (call, 174)]
318 - [(;, 325), (+, 101), (*, 102)]
319 - [(;, 326), (+, 101), (*, 102)]
320 - [(S, 327), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]
321 - [(S, 328), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]
322 - [(Elist, 329), (E, 159), (-, 160), ((, 161), (ID, 162), (CONST, 163), (L, 164)]
323 - [(S, 330), (D, 275), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280), (proc, 231), (T, 232), (X, 11), (record, 12), (int, 13), (real, 14)]
327 - [(S, 302), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]
328 - [(S, 302), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]
329 - [(), 331), (，, 222)]
330 - [(S, 302), (ID, 276), (L, 277), (if, 278), (while, 279), (call, 280)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4	s6,r15	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r0	
2	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r1	
3	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r2,r15	
4	[]	s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20	[]	[]	s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22	[]	[]	s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	r12	[]	[]	[]	[]	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
12	s43	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	[]	r9	[]	[]	[]	[]	r9	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	r10	[]	[]	[]	[]	r10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	s4,r4	[]	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	
16	[]	s6,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r3,r15	[]	[]	s9,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r3,r15	[]	r3,r15	
17	[]	[]	s45	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s67	[]	[]	[]	[]	[]	[]	[]	[]	s66	s68	s69	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75	s76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s77	s78	s79	s80	s82	s81	[]	[]	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r31	[]	[]	[]	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	[]	[]	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	s85	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r20	r20	r20	r20	r20	r20	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	s86	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r22	r22	r22	r22	r22	r22	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s87	s88	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s67	[]	[]	[]	[]	[]	[]	[]	[]	s66	s68	s69	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75	s76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s77	s78	s79	s80	s82	s81	[]	[]	[]	
37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s92	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	r7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s93	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	s43	r8	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	s95	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	s96	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	s98	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
46	r6	[]	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	
47	[]	[]	s100	[]	[]	[]	[]	[]	[]	[]	s101	s102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	r20	[]	[]	[]	s110	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	[]	r22	[]	[]	[]	s111	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	s112	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	s117	[]	r20	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	r21	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	s118	[]	r22	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	s119	[]	[]	[]	[]	[]	[]	[]	s101	s102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	s120	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
62	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	[]	[]	s62,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s123	[]	[]	[]	[]	[]	s124	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s127	s128	[]	[]	s125	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s77	s78	s79	s80	s82	s81	[]	[]	[]	
66	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s130	[]	[]	[]	[]	[]	[]	[]	[]	s66	s68	s69	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s67	[]	[]	[]	[]	[]	[]	[]	[]	s66	s68	s69	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r31	[]	[]	[]	[]	[]	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	[]	[]	[]	[]	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s135	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	s136	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r20	r20	r20	r20	r20	r20	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	s137	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r22	r22	r22	r22	r22	r22	[]	[]	[]	
74	[]	s141	[]	[]	[]	[]	[]	s142	[]	[]	[]	[]	s139	s140	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
77	[]	r33	[]	[]	[]	[]	[]	r33	[]	[]	[]	[]	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	r34	[]	[]	[]	[]	[]	r34	[]	[]	[]	[]	r34	r34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	r35	[]	[]	[]	[]	[]	r35	[]	[]	[]	[]	r35	r35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	r36	[]	[]	[]	[]	[]	r36	[]	[]	[]	[]	r36	r36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	r37	[]	[]	[]	[]	[]	r37	[]	[]	[]	[]	r37	r37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	r38	[]	[]	[]	[]	[]	r38	[]	[]	[]	[]	r38	r38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75,r18	s76,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	[]	[]	
84	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
87	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
88	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
89	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	s88,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
90	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s151	[]	[]	[]	[]	[]	s124	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
91	[]	s155	[]	[]	[]	[]	[]	s156	[]	[]	[]	[]	s153	s154	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
92	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
93	[]	[]	[]	[]	[]	[]	[]	[]	s165	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
94	s43,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
95	[]	[]	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
96	[]	[]	s167	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
97	s98,r15	s170,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r15	[]	[]	s173,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r15	[]	r15	
98	[]	s175	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
99	[]	s176	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
100	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
101	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
102	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
103	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	s101,r18	s102,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s179	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
105	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
106	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
107	[]	[]	[]	[]	[]	[]	s184	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
109	[]	[]	[]	[]	[]	[]	s185	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
110	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
111	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
112	[]	[]	[]	[]	[]	[]	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
113	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
114	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
115	[]	[]	[]	[]	[]	[]	[]	[]	r18	[]	s113,r18	s114,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s190	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
117	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
118	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
119	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
120	[]	[]	[]	[]	[]	[]	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
121	[]	s6,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r25,r15	[]	[]	s9,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r25,r15	[]	r25,r15	
122	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	[]	[]	s62,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
123	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	[]	[]	r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
124	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s130	[]	[]	[]	[]	[]	[]	[]	[]	s66	s68	s69	[]	[]	[]	[]	[]	[]	[]	[]	[]	
125	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	r19	r19	r19	r19	[]	[]	[]	
126	[]	s197	[]	[]	[]	[]	[]	s198	[]	[]	[]	[]	s195	s196	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
127	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s135	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
128	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s135	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
129	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	[]	[]	[]	[]	s124,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
130	[]	s71	[]	[]	[]	[]	[]	s72	[]	[]	[]	[]	s70	s67	[]	[]	[]	[]	[]	[]	[]	[]	s66	s68	s69	[]	[]	[]	[]	[]	[]	[]	[]	[]	
131	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75	s76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s77	s78	s79	s80	s82	s81	[]	[]	[]	
132	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s202	[]	[]	[]	[]	[]	s124	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
133	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s127	s128	[]	[]	s203	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s77	s78	s79	s80	s82	s81	[]	[]	[]	
134	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s127,r18	s128,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	[]	[]	
135	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
136	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
137	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
138	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s207	s208	[]	[]	[]	[]	r30	[]	[]	[]	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
139	[]	s141	[]	[]	[]	[]	[]	s142	[]	[]	[]	[]	s139	s140	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
140	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
141	[]	[]	[]	[]	[]	[]	s211	[]	[]	[]	r20	r20	[]	[]	[]	[]	r20	[]	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
142	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	r21	[]	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
143	[]	[]	[]	[]	[]	[]	s212	[]	[]	[]	r22	r22	[]	[]	[]	[]	r22	[]	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
144	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75,r16	s76,r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r16	r16	r16	r16	r16	r16	[]	[]	[]	
145	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75,r17	s76,r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r17	r17	r17	r17	r17	r17	[]	[]	[]	
146	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s125	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
147	[]	[]	[]	[]	[]	[]	[]	[]	s213	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
148	[]	[]	[]	[]	[]	[]	[]	[]	s214	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
149	[]	s6,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r26,r15	[]	[]	s9,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r26,r15	[]	r26,r15	
150	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	s88,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
151	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
152	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s215	s216	[]	[]	[]	[]	[]	[]	[]	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
153	[]	s155	[]	[]	[]	[]	[]	s156	[]	[]	[]	[]	s153	s154	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
154	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
155	[]	[]	[]	[]	[]	[]	s219	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
156	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
157	[]	[]	[]	[]	[]	[]	s220	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
158	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s221	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s222	[]	
159	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s223	s224	[]	[]	r41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r41	[]	
160	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
161	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
162	[]	[]	[]	[]	[]	[]	s227	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r20	[]	
163	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	[]	
164	[]	[]	[]	[]	[]	[]	s228	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r22	[]	
165	[]	r12	[]	[]	[]	[]	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
166	s231	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
167	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
168	r5,r15	s170,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r15	[]	[]	s173,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r15	[]	r5,r15	
169	s98,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	r4	
170	[]	[]	[]	[]	[]	[]	s20	[]	[]	s234	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
171	[]	[]	[]	[]	[]	[]	s22	[]	[]	s235	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
172	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
173	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
174	[]	s238	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
175	[]	[]	s239	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
176	[]	[]	s240	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
177	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	s101,r16	s102,r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
178	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	s101,r17	s102,r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
179	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
180	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
181	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
182	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180,r18	s181,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
183	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s243	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
184	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
185	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
186	[]	[]	[]	[]	[]	[]	[]	[]	s246	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
187	[]	[]	[]	[]	[]	[]	[]	[]	s247	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
188	[]	[]	[]	[]	[]	[]	[]	[]	r16	[]	s113,r16	s114,r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
189	[]	[]	[]	[]	[]	[]	[]	[]	r17	[]	s113,r17	s114,r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
190	[]	[]	[]	[]	[]	[]	[]	[]	r19	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
191	[]	[]	[]	[]	[]	[]	[]	[]	s248	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
192	[]	[]	[]	[]	[]	[]	[]	[]	s249	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
193	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	[]	[]	[]	[]	s124,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
194	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s250	s251	[]	[]	r30	[]	[]	[]	[]	[]	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
195	[]	s197	[]	[]	[]	[]	[]	s198	[]	[]	[]	[]	s195	s196	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
196	[]	s107	[]	[]	[]	[]	[]	s108	[]	[]	[]	[]	s105	s106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
197	[]	[]	[]	[]	[]	[]	s254	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
198	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
199	[]	[]	[]	[]	[]	[]	s255	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
200	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s127,r16	s128,r16	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r16	r16	r16	r16	r16	r16	[]	[]	[]	
201	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s127,r17	s128,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r17	r17	r17	r17	r17	r17	[]	[]	[]	
202	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	[]	[]	[]	[]	r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
203	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	r19	r19	r19	r19	[]	[]	[]	
204	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s203	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
205	[]	[]	[]	[]	[]	[]	[]	[]	s256	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
206	[]	[]	[]	[]	[]	[]	[]	[]	s257	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
207	[]	s141	[]	[]	[]	[]	[]	s142	[]	[]	[]	[]	s139	s140	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
208	[]	s141	[]	[]	[]	[]	[]	s142	[]	[]	[]	[]	s139	s140	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
209	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s207,r18	s208,r18	[]	[]	[]	[]	r18	[]	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
210	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s260	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
211	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
212	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
213	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	[]	[]	
214	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	[]	[]	
215	[]	s155	[]	[]	[]	[]	[]	s156	[]	[]	[]	[]	s153	s154	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
216	[]	s155	[]	[]	[]	[]	[]	s156	[]	[]	[]	[]	s153	s154	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
217	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s215,r18	s216,r18	[]	[]	[]	[]	[]	[]	[]	r18	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
218	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s265	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
219	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
220	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
221	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	r39	
222	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
223	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
224	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
225	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s223,r18	s224,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	[]	
226	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s271	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
227	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
228	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
229	[]	r11	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
230	s231,r15	s276,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r15	[]	[]	s279,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r15	[]	[]	
231	[]	s281	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
232	[]	s282	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
233	r3,r15	s170,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r3,r15	[]	[]	s173,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r3,r15	[]	r3,r15	
234	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
235	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
236	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s285	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
237	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286	s88	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
238	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s287	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
239	s98	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
240	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	r6	
241	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180,r16	s181,r16	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
242	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180,r17	s181,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
243	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
244	[]	[]	[]	[]	[]	[]	[]	[]	s289	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
245	[]	[]	[]	[]	[]	[]	[]	[]	s290	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
246	[]	[]	r23	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
247	[]	[]	r24	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
248	[]	[]	[]	[]	[]	[]	r23	[]	r23	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
249	[]	[]	[]	[]	[]	[]	r24	[]	r24	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
250	[]	s197	[]	[]	[]	[]	[]	s198	[]	[]	[]	[]	s195	s196	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
251	[]	s197	[]	[]	[]	[]	[]	s198	[]	[]	[]	[]	s195	s196	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
252	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s250,r18	s251,r18	[]	[]	r18	[]	[]	[]	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
253	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s180	s181	[]	[]	s293	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
254	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
255	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
256	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	[]	[]	
257	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	[]	[]	
258	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s207,r16	s208,r16	[]	[]	[]	[]	r16	[]	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
259	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s207,r17	s208,r17	[]	[]	[]	[]	r17	[]	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
260	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	r19	[]	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
261	[]	[]	[]	[]	[]	[]	[]	[]	s296	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
262	[]	[]	[]	[]	[]	[]	[]	[]	s297	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
263	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s215,r16	s216,r16	[]	[]	[]	[]	[]	[]	[]	r16	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
264	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s215,r17	s216,r17	[]	[]	[]	[]	[]	[]	[]	r17	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
265	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
266	[]	[]	[]	[]	[]	[]	[]	[]	s298	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
267	[]	[]	[]	[]	[]	[]	[]	[]	s299	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
268	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s223	s224	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	
269	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s223,r16	s224,r16	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r16	[]	
270	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s223,r17	s224,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r17	[]	
271	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	[]	
272	[]	[]	[]	[]	[]	[]	[]	[]	s300	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
273	[]	[]	[]	[]	[]	[]	[]	[]	s301	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
274	r5,r15	s276,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r15	[]	[]	s279,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r15	[]	[]	
275	s231,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	
276	[]	[]	[]	[]	[]	[]	s20	[]	[]	s303	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
277	[]	[]	[]	[]	[]	[]	s22	[]	[]	s304	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
278	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
279	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
280	[]	s307	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
281	[]	[]	s308	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
282	[]	[]	s309	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
283	[]	[]	s310	[]	[]	[]	[]	[]	[]	[]	s101	s102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
284	[]	[]	s311	[]	[]	[]	[]	[]	[]	[]	s101	s102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
285	r15	s170,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r15	[]	[]	s173,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r15	[]	r15	
286	r15	s170,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r15	[]	[]	s173,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r15	[]	r15	
287	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
288	s98,r15	s170,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r15	[]	[]	s173,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r15	[]	r15	
289	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
290	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
291	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s250,r16	s251,r16	[]	[]	r16	[]	[]	[]	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
292	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s250,r17	s251,r17	[]	[]	r17	[]	[]	[]	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
293	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
294	[]	[]	[]	[]	[]	[]	[]	[]	s316	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
295	[]	[]	[]	[]	[]	[]	[]	[]	s317	[]	s113	s114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
296	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	r23	[]	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
297	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	r24	[]	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
298	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
299	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
300	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	[]	
301	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	[]	
302	r3,r15	s276,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r3,r15	[]	[]	s279,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r3,r15	[]	[]	
303	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
304	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
305	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s320	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
306	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s321	s88	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
307	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s322	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
308	s231	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
309	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	
310	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
311	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
312	r25,r15	s170,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r25,r15	[]	[]	s173,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r25,r15	[]	r25,r15	
313	r26,r15	s170,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r26,r15	[]	[]	s173,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r26,r15	[]	r26,r15	
314	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s324	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s222	[]	
315	r5,r15	s170,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s172,r5,r15	[]	[]	s173,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s174,r5,r15	[]	r5,r15	
316	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
317	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
318	[]	[]	s325	[]	[]	[]	[]	[]	[]	[]	s101	s102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
319	[]	[]	s326	[]	[]	[]	[]	[]	[]	[]	s101	s102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
320	r15	s276,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r15	[]	[]	s279,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r15	[]	[]	
321	r15	s276,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r15	[]	[]	s279,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r15	[]	[]	
322	[]	s162	[]	[]	[]	[]	[]	s163	[]	[]	[]	[]	s160	s161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
323	s231,r15	s276,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r15	[]	[]	s279,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r15	[]	[]	
324	r39	r39	[]	r39	r39	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	r39	
325	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	
326	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	
327	r25,r15	s276,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r25,r15	[]	[]	s279,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r25,r15	[]	[]	
328	r26,r15	s276,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r26,r15	[]	[]	s279,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r26,r15	[]	[]	
329	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s331	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s222	[]	
330	r5,r15	s276,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s278,r5,r15	[]	[]	s279,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s280,r5,r15	[]	[]	
331	r39	r39	[]	r39	r39	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	[]	
332	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26	s32	s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s36	s32	s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s40	[]	[]	[]	[]	[]	
12	[]	[]	s42	[]	s44	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s47	s52	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s53	s58	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s59	s52	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s60	s58	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26	s32	s63	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s65	s73	s64	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s74	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s83	s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	s36	s32	s89	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	s65	s73	s90	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s91	[]	
37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	s94	[]	s44	s11	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	s97	[]	s99	s11	[]	[]	[]	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	s103	s52	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	s104	s109	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	s115	s58	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	s116	s109	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	[]	[]	s121	[]	[]	[]	[]	s7	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	s26	s32	s122	[]	[]	
63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s126	[]	
66	[]	[]	[]	[]	[]	[]	[]	s131	s32	s129	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	s133	s73	s132	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	s134	s73	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	s138	s143	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	s144	s32	[]	[]	[]	
76	[]	[]	[]	[]	[]	[]	[]	s145	s32	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	s146	s109	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	s147	s58	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	s148	s58	[]	[]	[]	
87	[]	[]	[]	s149	[]	[]	[]	[]	s7	[]	[]	[]	
88	[]	[]	[]	[]	[]	[]	[]	s36	s32	s150	[]	[]	
89	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
90	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
91	[]	[]	[]	[]	[]	[]	[]	s152	s157	[]	[]	[]	
92	[]	[]	[]	[]	[]	[]	[]	s159	s164	[]	[]	s158	
93	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
94	[]	[]	s94	[]	s44	s11	[]	[]	[]	[]	[]	[]	
95	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
96	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
97	[]	[]	s169	s168	s99	s11	[]	[]	s171	[]	[]	[]	
98	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
99	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
100	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
101	[]	[]	[]	[]	[]	[]	[]	s177	s52	[]	[]	[]	
102	[]	[]	[]	[]	[]	[]	[]	s178	s52	[]	[]	[]	
103	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
105	[]	[]	[]	[]	[]	[]	[]	s182	s109	[]	[]	[]	
106	[]	[]	[]	[]	[]	[]	[]	s183	s109	[]	[]	[]	
107	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
109	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
110	[]	[]	[]	[]	[]	[]	[]	s186	s58	[]	[]	[]	
111	[]	[]	[]	[]	[]	[]	[]	s187	s58	[]	[]	[]	
112	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
113	[]	[]	[]	[]	[]	[]	[]	s188	s58	[]	[]	[]	
114	[]	[]	[]	[]	[]	[]	[]	s189	s58	[]	[]	[]	
115	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
117	[]	[]	[]	[]	[]	[]	[]	s191	s58	[]	[]	[]	
118	[]	[]	[]	[]	[]	[]	[]	s192	s58	[]	[]	[]	
119	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
120	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
121	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
122	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
123	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
124	[]	[]	[]	[]	[]	[]	[]	s131	s32	s193	[]	[]	
125	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
126	[]	[]	[]	[]	[]	[]	[]	s194	s199	[]	[]	[]	
127	[]	[]	[]	[]	[]	[]	[]	s200	s73	[]	[]	[]	
128	[]	[]	[]	[]	[]	[]	[]	s201	s73	[]	[]	[]	
129	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
130	[]	[]	[]	[]	[]	[]	[]	s65	s73	s132	[]	[]	
131	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s126	[]	
132	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
133	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s126	[]	
134	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
135	[]	[]	[]	[]	[]	[]	[]	s204	s109	[]	[]	[]	
136	[]	[]	[]	[]	[]	[]	[]	s205	s58	[]	[]	[]	
137	[]	[]	[]	[]	[]	[]	[]	s206	s58	[]	[]	[]	
138	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
139	[]	[]	[]	[]	[]	[]	[]	s209	s143	[]	[]	[]	
140	[]	[]	[]	[]	[]	[]	[]	s210	s109	[]	[]	[]	
141	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
142	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
143	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
144	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
145	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
146	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
147	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
148	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
149	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
150	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
151	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
152	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
153	[]	[]	[]	[]	[]	[]	[]	s217	s157	[]	[]	[]	
154	[]	[]	[]	[]	[]	[]	[]	s218	s109	[]	[]	[]	
155	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
156	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
157	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
158	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
159	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
160	[]	[]	[]	[]	[]	[]	[]	s225	s164	[]	[]	[]	
161	[]	[]	[]	[]	[]	[]	[]	s226	s109	[]	[]	[]	
162	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
163	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
164	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
165	[]	[]	[]	[]	[]	[]	s229	[]	[]	[]	[]	[]	
166	[]	[]	s230	[]	s232	s11	[]	[]	[]	[]	[]	[]	
167	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
168	[]	[]	[]	s233	[]	[]	[]	[]	s171	[]	[]	[]	
169	[]	[]	s169	[]	s99	s11	[]	[]	[]	[]	[]	[]	
170	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
171	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
172	[]	[]	[]	[]	[]	[]	[]	s26	s32	s236	[]	[]	
173	[]	[]	[]	[]	[]	[]	[]	s36	s32	s237	[]	[]	
174	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
175	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
176	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
177	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
178	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
179	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
180	[]	[]	[]	[]	[]	[]	[]	s241	s109	[]	[]	[]	
181	[]	[]	[]	[]	[]	[]	[]	s242	s109	[]	[]	[]	
182	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
183	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
184	[]	[]	[]	[]	[]	[]	[]	s244	s58	[]	[]	[]	
185	[]	[]	[]	[]	[]	[]	[]	s245	s58	[]	[]	[]	
186	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
187	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
188	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
189	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
190	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
191	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
192	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
193	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
194	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
195	[]	[]	[]	[]	[]	[]	[]	s252	s199	[]	[]	[]	
196	[]	[]	[]	[]	[]	[]	[]	s253	s109	[]	[]	[]	
197	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
198	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
199	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
200	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
201	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
202	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
203	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
204	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
205	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
206	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
207	[]	[]	[]	[]	[]	[]	[]	s258	s143	[]	[]	[]	
208	[]	[]	[]	[]	[]	[]	[]	s259	s143	[]	[]	[]	
209	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
210	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
211	[]	[]	[]	[]	[]	[]	[]	s261	s58	[]	[]	[]	
212	[]	[]	[]	[]	[]	[]	[]	s262	s58	[]	[]	[]	
213	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
214	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
215	[]	[]	[]	[]	[]	[]	[]	s263	s157	[]	[]	[]	
216	[]	[]	[]	[]	[]	[]	[]	s264	s157	[]	[]	[]	
217	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
218	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
219	[]	[]	[]	[]	[]	[]	[]	s266	s58	[]	[]	[]	
220	[]	[]	[]	[]	[]	[]	[]	s267	s58	[]	[]	[]	
221	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
222	[]	[]	[]	[]	[]	[]	[]	s268	s164	[]	[]	[]	
223	[]	[]	[]	[]	[]	[]	[]	s269	s164	[]	[]	[]	
224	[]	[]	[]	[]	[]	[]	[]	s270	s164	[]	[]	[]	
225	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
226	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
227	[]	[]	[]	[]	[]	[]	[]	s272	s58	[]	[]	[]	
228	[]	[]	[]	[]	[]	[]	[]	s273	s58	[]	[]	[]	
229	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
230	[]	[]	s275	s274	s232	s11	[]	[]	s277	[]	[]	[]	
231	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
232	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
233	[]	[]	[]	s233	[]	[]	[]	[]	s171	[]	[]	[]	
234	[]	[]	[]	[]	[]	[]	[]	s283	s52	[]	[]	[]	
235	[]	[]	[]	[]	[]	[]	[]	s284	s52	[]	[]	[]	
236	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
237	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
238	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
239	[]	[]	s288	[]	s99	s11	[]	[]	[]	[]	[]	[]	
240	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
241	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
242	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
243	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
244	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
245	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
246	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
247	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
248	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
249	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
250	[]	[]	[]	[]	[]	[]	[]	s291	s199	[]	[]	[]	
251	[]	[]	[]	[]	[]	[]	[]	s292	s199	[]	[]	[]	
252	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
253	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
254	[]	[]	[]	[]	[]	[]	[]	s294	s58	[]	[]	[]	
255	[]	[]	[]	[]	[]	[]	[]	s295	s58	[]	[]	[]	
256	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
257	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
258	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
259	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
260	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
261	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
262	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
263	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
264	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
265	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
266	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
267	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
268	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
269	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
270	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
271	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
272	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
273	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
274	[]	[]	[]	s302	[]	[]	[]	[]	s277	[]	[]	[]	
275	[]	[]	s275	[]	s232	s11	[]	[]	[]	[]	[]	[]	
276	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
277	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
278	[]	[]	[]	[]	[]	[]	[]	s26	s32	s305	[]	[]	
279	[]	[]	[]	[]	[]	[]	[]	s36	s32	s306	[]	[]	
280	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
281	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
282	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
283	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
284	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
285	[]	[]	[]	s312	[]	[]	[]	[]	s171	[]	[]	[]	
286	[]	[]	[]	s313	[]	[]	[]	[]	s171	[]	[]	[]	
287	[]	[]	[]	[]	[]	[]	[]	s159	s164	[]	[]	s314	
288	[]	[]	s169	s315	s99	s11	[]	[]	s171	[]	[]	[]	
289	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
290	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
291	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
292	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
293	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
294	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
295	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
296	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
297	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
298	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
299	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
300	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
301	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
302	[]	[]	[]	s302	[]	[]	[]	[]	s277	[]	[]	[]	
303	[]	[]	[]	[]	[]	[]	[]	s318	s52	[]	[]	[]	
304	[]	[]	[]	[]	[]	[]	[]	s319	s52	[]	[]	[]	
305	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
306	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
307	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
308	[]	[]	s323	[]	s232	s11	[]	[]	[]	[]	[]	[]	
309	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
310	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
311	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
312	[]	[]	[]	s233	[]	[]	[]	[]	s171	[]	[]	[]	
313	[]	[]	[]	s233	[]	[]	[]	[]	s171	[]	[]	[]	
314	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
315	[]	[]	[]	s233	[]	[]	[]	[]	s171	[]	[]	[]	
316	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
317	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
318	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
319	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
320	[]	[]	[]	s327	[]	[]	[]	[]	s277	[]	[]	[]	
321	[]	[]	[]	s328	[]	[]	[]	[]	s277	[]	[]	[]	
322	[]	[]	[]	[]	[]	[]	[]	s159	s164	[]	[]	s329	
323	[]	[]	s275	s330	s232	s11	[]	[]	s277	[]	[]	[]	
324	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
325	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
326	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
327	[]	[]	[]	s302	[]	[]	[]	[]	s277	[]	[]	[]	
328	[]	[]	[]	s302	[]	[]	[]	[]	s277	[]	[]	[]	
329	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
330	[]	[]	[]	s302	[]	[]	[]	[]	s277	[]	[]	[]	
331	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
332	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


LALR
I65
E -> ( E · ), *]+
E -> E · + E, *+)
E -> E · * E, *+)
I77
S -> call ID ( Elist · ), ID$ifwhilecall
Elist -> Elist · ， E, ，)
I76
S -> while B do S · , procrecordintifwhilecallIDreal$
S -> S · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I28
B -> false · , thenor
I31
E -> CONST · , *;+
I74
E -> E + E · , *or+)
E -> E · + E, +*or)
E -> E · * E, +*or)
I59
E -> - E · , *，+)
E -> E · + E, ，+*)
E -> E · * E, ，+*)
I37
T -> record D · , ID
D -> D · D, IDprocrealrecordint
D ->  · D D, procrecordintIDreal
D ->  · proc ID ; D S, procrecordintIDreal
D ->  · T ID ;, procrecordintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I42
L -> ID [ E · ], ==[<=!=<>+*>=)
E -> E · + E, *]+
E -> E · * E, *]+
I5
D -> T · ID ;, IDprocrealrecordint
I80
D -> proc ID ; D S · , IDprocrealrecordint
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I26
B -> E · relop E, ordo
E -> E · + E, >===!=+*<=<>
E -> E · * E, >===!=+*<=<>
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I19
S -> ID = · E ;, ID$ifwhilecall
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I45
S -> if B then · S, procrecordintifwhilecallIDreal$
S ->  · S S, procrecordintifwhilecallIDreal$
S ->  · ID = E ;, procrecordintifwhilecallIDreal$
S ->  · L = E ;, procrecordintifwhilecallIDreal$
S ->  · empty, procrecordintifwhilecallIDreal$
S ->  · if B then S, procrecordintifwhilecallIDreal$
S ->  · while B do S, procrecordintifwhilecallIDreal$
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I32
E -> L · , *;+
L -> L · [ E ], *[;+
I40
S -> ID = E · ;, procrecordintifwhilecallIDreal$
E -> E · + E, *;+
E -> E · * E, *;+
I79
C -> [ CONST ] · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I46
B -> B or · B, thenor
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I53
relop -> < · , (CONST-ID
I16
S -> S S · , procrecordintifwhilecallIDreal
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I82
Elist -> Elist ， · E, ，)
E ->  · E + E, *，+)
E ->  · E * E, *，+)
E ->  · - E, *，+)
E ->  · ( E ), *，+)
E ->  · ID, *，+)
E ->  · CONST, *，+)
E ->  · L, *，+)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I17
D -> proc ID · ; D S, procrecordifwhilecallintIDreal$
I67
S -> L = E ; · , ID$ifwhilecall
I47
B -> not B · , or)
B -> B · or B, or)
I22
L -> L [ · E ], *[]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I33
S -> while B · do S, ID$ifwhilecall
B -> B · or B, ordo
I55
relop -> == · , (CONST-ID
I35
T -> X C · , ID
I44
L -> L [ E · ], *[]+
E -> E · + E, *]+
E -> E · * E, *]+
I20
L -> ID [ · E ], [，+*)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *[]+
L ->  · L [ E ], *[]+
I68
L -> L [ E ] · , ==[<=!=<>+*>=)
I13
X -> int · , [ID
I73
B -> E relop E · , or)
E -> E · + E, *or+)
E -> E · * E, *or+)
I70
B -> B or B · , or)
B -> B · or B, or)
I41
E -> ( · E ), *，+)
E ->  · E + E, *+)
E ->  · E * E, *+)
E ->  · - E, *+)
E ->  · ( E ), *+)
E ->  · ID, *+)
E ->  · CONST, *+)
E ->  · L, *+)
L ->  · ID [ E ], *[+)
L ->  · L [ E ], *[+)
I29
E -> - · E, >===!=+*<=<>
E ->  · E + E, ==!=<=<>+*>=
E ->  · E * E, ==!=<=<>+*>=
E ->  · - E, ==!=<=<>+*>=
E ->  · ( E ), ==!=<=<>+*>=
E ->  · ID, ==!=<=<>+*>=
E ->  · CONST, ==!=<=<>+*>=
E ->  · L, ==!=<=<>+*>=
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I50
B -> E relop · E, ordo
E ->  · E + E, *ordo+
E ->  · E * E, *ordo+
E ->  · - E, *ordo+
E ->  · ( E ), *ordo+
E ->  · ID, *ordo+
E ->  · CONST, *ordo+
E ->  · L, *ordo+
L ->  · ID [ E ], [+*ordo
L ->  · L [ E ], [+*ordo
I51
E -> E + · E, *，+)
E ->  · E + E, ，+*)
E ->  · E * E, ，+*)
E ->  · - E, ，+*)
E ->  · ( E ), ，+*)
E ->  · ID, ，+*)
E ->  · CONST, ，+*)
E ->  · L, ，+*)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I69
S -> if B then S · , procrecordintifwhilecallIDreal
S -> S · S, procrecordintifwhilecallIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I27
B -> true · , or)
I71
B -> ( B ) · , thenor
I25
B -> ( · B ), thenor
E -> ( · E ), >===!=+*<=<>
B ->  · B or B, or)
B ->  · not B, or)
B ->  · ( B ), or)
B ->  · E relop E, or)
B ->  · true, or)
B ->  · false, or)
E ->  · E + E, ==!=<=<>+*>=)
E ->  · E * E, ==!=<=<>+*>=)
E ->  · - E, ==!=<=<>+*>=)
E ->  · ( E ), ==!=<=<>+*>=)
E ->  · ID, ==!=<=<>+*>=)
E ->  · CONST, ==!=<=<>+*>=)
E ->  · L, ==!=<=<>+*>=)
L ->  · ID [ E ], ==[<=!=<>+*>=)
L ->  · L [ E ], ==[<=!=<>+*>=)
I24
B -> not · B, thenor
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I6
S -> ID · = E ;, ID$ifwhilecall
L -> ID · [ E ], =[
I57
relop -> > · , (CONST-ID
I66
L -> ID [ E ] · , =[
I54
relop -> <= · , (CONST-ID
I9
S -> while · B do S, ID$ifwhilecall
B ->  · B or B, ordo
B ->  · not B, ordo
B ->  · ( B ), ordo
B ->  · E relop E, ordo
B ->  · true, ordo
B ->  · false, ordo
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I18
D -> T ID · ;, procrecordifwhilecallintIDreal$
I8
S -> if · B then S, ID$ifwhilecall
B ->  · B or B, thenor
B ->  · not B, thenor
B ->  · ( B ), thenor
B ->  · E relop E, thenor
B ->  · true, thenor
B ->  · false, thenor
E ->  · E + E, >===!=+*<=<>
E ->  · E * E, >===!=+*<=<>
E ->  · - E, >===!=+*<=<>
E ->  · ( E ), >===!=+*<=<>
E ->  · ID, >===!=+*<=<>
E ->  · CONST, >===!=+*<=<>
E ->  · L, >===!=+*<=<>
L ->  · ID [ E ], ==[!=<=<>+*>=
L ->  · L [ E ], ==[!=<=<>+*>=
I83
C -> [ CONST ] C · , ID
I30
E -> ID · , *thenor+
L -> ID · [ E ], then[+*or
I61
S -> call ID ( · Elist ), ID$ifwhilecall
Elist ->  · Elist ， E, ，)
Elist ->  · E, ，)
E ->  · E + E, *，+)
E ->  · E * E, *，+)
E ->  · - E, *，+)
E ->  · ( E ), *，+)
E ->  · ID, *，+)
E ->  · CONST, *，+)
E ->  · L, *，+)
L ->  · ID [ E ], [，+*)
L ->  · L [ E ], [，+*)
I60
S -> while B do · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I2
P -> D · , $
D -> D · D, procreal$recordint
D ->  · D D, procrecordintreal$
D ->  · proc ID ; D S, procrecordintreal$
D ->  · T ID ;, procrecordintreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I56
relop -> != · , (CONST-ID
I11
T -> X · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I10
S -> call · ID ( Elist ), procrecordintifwhilecallIDreal
I39
D -> T ID ; · , procreal$recordint
I52
E -> E * · E, *;+
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I38
D -> proc ID ; · D S, procrecordifwhilecallintIDreal$
D ->  · D D, procrecordifwhilecallintIDreal$
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal$
D ->  · T ID ;, procrecordifwhilecallintIDreal$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I81
S -> call ID ( Elist ) · , ID$ifwhilecall
I62
C -> [ CONST · ] C, ID
I12
T -> record · D, ID
D ->  · D D, IDprocrealrecordint
D ->  · proc ID ; D S, IDprocrealrecordint
D ->  · T ID ;, IDprocrealrecordint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I0
P' ->  · P, $
P ->  · D, $
P ->  · S, $
D ->  · D D, procreal$recordint
D ->  · proc ID ; D S, procreal$recordint
D ->  · T ID ;, procreal$recordint
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
T ->  · X C, ID
T ->  · record D, ID
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
X ->  · int, [ID
X ->  · real, [ID
I14
X -> real · , [ID
I48
B -> ( B · ), ordo
B -> B · or B, or)
I72
E -> ( E ) · , *thenor+
I78
Elist -> E · , ，)
E -> E · + E, *，+)
E -> E · * E, *，+)
I23
S -> if B · then S, ID$ifwhilecall
B -> B · or B, thenor
I63
D -> proc ID ; D · S, IDprocrealrecordint
D -> D · D, procrecordifwhilecallintIDreal
S ->  · S S, procrecordintifwhilecallIDreal
S ->  · ID = E ;, procrecordintifwhilecallIDreal
S ->  · L = E ;, procrecordintifwhilecallIDreal
S ->  · empty, procrecordintifwhilecallIDreal
S ->  · if B then S, procrecordintifwhilecallIDreal
S ->  · while B do S, procrecordintifwhilecallIDreal
S ->  · call ID ( Elist ), procrecordintifwhilecallIDreal
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I64
S -> ID = E ; · , ID$ifwhilecall
I36
C -> [ · CONST ] C, ID
I58
relop -> >= · , (CONST-ID
I3
P -> S · , $
S -> S · S, ID$ifwhilecall
S ->  · S S, ID$ifwhilecall
S ->  · ID = E ;, ID$ifwhilecall
S ->  · L = E ;, ID$ifwhilecall
S ->  · empty, ID$ifwhilecall
S ->  · if B then S, ID$ifwhilecall
S ->  · while B do S, ID$ifwhilecall
S ->  · call ID ( Elist ), ID$ifwhilecall
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I15
D -> D D · , procrecordifwhilecallintIDreal
D -> D · D, procrecordifwhilecallintIDreal
D ->  · D D, procrecordifwhilecallintIDreal
D ->  · proc ID ; D S, procrecordifwhilecallintIDreal
D ->  · T ID ;, procrecordifwhilecallintIDreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, [ID
X ->  · real, [ID
I84
Elist -> Elist ， E · , ，)
E -> E · + E, *，+)
E -> E · * E, *，+)
I21
S -> L = · E ;, ID$ifwhilecall
E ->  · E + E, *;+
E ->  · E * E, *;+
E ->  · - E, *;+
E ->  · ( E ), *;+
E ->  · ID, *;+
E ->  · CONST, *;+
E ->  · L, *;+
L ->  · ID [ E ], *[;+
L ->  · L [ E ], *[;+
I7
S -> L · = E ;, ID$ifwhilecall
L -> L · [ E ], =[
I43
S -> L = E · ;, ID$ifwhilecall
E -> E · + E, *;+
E -> E · * E, *;+
I1
P' -> P · , $
I49
E -> ( E · ), ==!=<=<>+*>=)
B -> E · relop E, or)
E -> E · + E, ==!=<=<>+*>=)
E -> E · * E, ==!=<=<>+*>=)
relop ->  · <, (CONST-ID
relop ->  · <=, (CONST-ID
relop ->  · ==, (CONST-ID
relop ->  · !=, (CONST-ID
relop ->  · >, (CONST-ID
relop ->  · >=, (CONST-ID
I4
D -> proc · ID ; D S, procrecordifwhilecallintIDreal$
I75
E -> E * E · , *thenor+
E -> E · + E, then+*or
E -> E · * E, then+*or
I34
S -> call ID · ( Elist ), ID$ifwhilecall

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17), (ID, 17), (ID, 17), (ID, 17)]
5 - [(ID, 18), (ID, 18), (ID, 18), (ID, 18)]
6 - [(=, 19), ([, 20), (=, 19), ([, 20), (=, 19), ([, 20)]
7 - [(=, 21), ([, 22), (=, 21), ([, 22), (=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 34), (ID, 34), (ID, 34)]
11 - [(C, 35), ([, 36)]
12 - [(D, 37), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 38), (;, 38), (;, 38), (;, 38)]
18 - [(;, 39), (;, 39), (;, 39), (;, 39)]
19 - [(E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
20 - [(E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
21 - [(E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
22 - [(E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
23 - [(then, 45), (or, 46), (then, 45), (or, 46), (then, 45), (or, 46)]
24 - [(B, 47), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 47), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 47), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 48), (E, 49), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 48), (E, 49), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 48), (E, 49), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 48), (E, 49), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
26 - [(relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58), (relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58), (relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58)]
29 - [(E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 59), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20)]
32 - [([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22)]
33 - [(do, 60), (or, 46), (do, 60), (or, 46), (do, 60), (or, 46)]
34 - [((, 61), ((, 61), ((, 61)]
36 - [(CONST, 62)]
37 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
38 - [(D, 63), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 63), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 63), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 63), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
40 - [(;, 64), (+, 51), (*, 52), (;, 64), (+, 51), (*, 52), (;, 64), (+, 51), (*, 52)]
41 - [(E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 65), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
42 - [(], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52), (], 66), (+, 51), (*, 52)]
43 - [(;, 67), (+, 51), (*, 52), (;, 67), (+, 51), (*, 52), (;, 67), (+, 51), (*, 52)]
44 - [(], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52), (], 68), (+, 51), (*, 52)]
45 - [(S, 69), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 69), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 69), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
46 - [(B, 70), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 70), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 70), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
47 - [(or, 46), (or, 46), (or, 46)]
48 - [(), 71), (or, 46), (), 71), (or, 46), (), 71), (or, 46)]
49 - [(), 72), (relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58), (), 72), (relop, 50), (+, 51), (*, 52), (<, 53), (<=, 54), (==, 55), (!=, 56), (>, 57), (>=, 58)]
50 - [(E, 73), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 73), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 73), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
51 - [(E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 74), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
52 - [(E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
59 - [(+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52)]
60 - [(S, 76), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 76), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 76), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
61 - [(Elist, 77), (E, 78), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (Elist, 77), (E, 78), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (Elist, 77), (E, 78), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
62 - [(], 79)]
63 - [(S, 80), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (S, 80), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (S, 80), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (S, 80), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
65 - [(), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52), (), 72), (+, 51), (*, 52)]
69 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
70 - [(or, 46), (or, 46), (or, 46)]
73 - [(+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52)]
74 - [(+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52)]
75 - [(+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52), (+, 51), (*, 52)]
76 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
77 - [(), 81), (，, 82), (), 81), (，, 82), (), 81), (，, 82)]
78 - [(+, 51), (*, 52)]
79 - [(C, 83), ([, 36)]
80 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
82 - [(E, 84), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
84 - [(+, 51), (*, 52)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4	s6,r15	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r0	
2	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r1	
3	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r2,r15	
4	[]	s17,s17,s17,s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18,s18,s18,s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20,s20,s20	[]	[]	s19,s19,s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22,s22,s22	[]	[]	s21,s21,s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s34,s34,s34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
12	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	[]	r9	[]	[]	[]	[]	r9	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	r10	[]	[]	[]	[]	r10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	s4,s4,s4,s4,r4	r4	[]	s12,s12,s12,s12,r4	s13,s13,s13,s13,r4	s14,s14,s14,s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	
16	r3,r15	s6,s6,s6,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r3,r15	[]	[]	s9,s9,s9,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r3,r15	[]	[]	
17	[]	[]	s38,s38,s38,s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s39,s39,s39,s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s45,s45,s45	[]	[]	[]	s46,s46,s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29	s25,s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24,s24	s27,s27,s27,s27	s28,s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51	s52,s52,s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s53,s53,s53	s54,s54,s54	s55,s55,s55	s56,s56,s56	s58,s58,s58	s57,s57,s57	[]	[]	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r31	[]	[]	[]	[]	[]	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	[]	[]	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	s20,s20,s20,s20,s20,s20,s20,s20,s20	[]	[]	[]	r20	r20	[]	[]	[]	[]	r20	[]	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	r22	[]	[]	[]	s22,s22,s22,s22,s22,s22,s22,s22,s22	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s60,s60,s60	s46,s46,s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61,s61,s61	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	r7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	s4	r8	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	s4,s4,s4,s4	[]	[]	s12,s12,s12,s12	s13,s13,s13,s13	s14,s14,s14,s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	r6	[]	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	
40	[]	[]	s64,s64,s64	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51	s52,s52,s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	s66,s66,s66,s66,s66,s66,s66,s66,s66,s66	[]	s51,s51,s51,s51,s51,s51,s51,s51,s51,s51	s52,s52,s52,s52,s52,s52,s52,s52,s52,s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	s67,s67,s67	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51	s52,s52,s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	s68,s68,s68,s68,s68,s68,s68,s68,s68,s68	[]	s51,s51,s51,s51,s51,s51,s51,s51,s51,s51	s52,s52,s52,s52,s52,s52,s52,s52,s52,s52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	r15	s6,s6,s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r15	[]	[]	s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r15	[]	r15	
46	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	[]	[]	[]	[]	s46,s46,s46,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s71,s71,s71	[]	[]	[]	[]	[]	s46,s46,s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51	s52,s52	[]	[]	s72,s72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s53,s53	s54,s54	s55,s55	s56,s56	s58,s58	s57,s57	[]	[]	[]	
50	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	r33	[]	[]	[]	[]	[]	r33	[]	[]	[]	[]	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	r34	[]	[]	[]	[]	[]	r34	[]	[]	[]	[]	r34	r34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	r35	[]	[]	[]	[]	[]	r35	[]	[]	[]	[]	r35	r35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	r36	[]	[]	[]	[]	[]	r36	[]	[]	[]	[]	r36	r36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	r37	[]	[]	[]	[]	[]	r37	[]	[]	[]	[]	r37	r37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	r38	[]	[]	[]	[]	[]	r38	[]	[]	[]	[]	r38	r38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51,s51,s51,s51,s51,s51,s51,r18	s52,s52,s52,s52,s52,s52,s52,s52,s52,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	[]	
60	[]	s6,s6,s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r15	[]	[]	s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r15	[]	r15	
61	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	[]	s79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	s4,s4,s4,s4,r15	s6,s6,s6,s6,r15	[]	s12,s12,s12,s12,r15	s13,s13,s13,s13,r15	s14,s14,s14,s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,s8,r15	[]	[]	s9,s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,s10,r15	[]	[]	
64	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51,s51,s51,s51,s51,s51,s51	s52,s52,s52,s52,s52,s52,s52,s52,s52	[]	[]	s72,s72,s72,s72,s72,s72,s72,s72,s72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
68	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	[]	[]	
69	r25,r15	s6,s6,s6,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r25,r15	[]	[]	s9,s9,s9,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r25,r15	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	[]	[]	[]	[]	s46,s46,s46,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	[]	[]	r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	r19	[]	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51	s52,s52,s52	[]	[]	r30	[]	[]	[]	[]	[]	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51,s51,s51,s51,s51,s51,s51,r16	s52,s52,s52,s52,s52,s52,s52,s52,s52,r16	[]	[]	r16	[]	[]	[]	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51,s51,s51,s51,s51,s51,s51,r17	s52,s52,s52,s52,s52,s52,s52,s52,s52,r17	[]	[]	[]	[]	r17	[]	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	r26,r15	s6,s6,s6,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r26,r15	[]	[]	s9,s9,s9,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r26,r15	[]	r26,r15	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s81,s81,s81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s82,s82,s82	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	r41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r41	[]	
79	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	r5,r15	s6,s6,s6,s6,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,s8,r15	[]	[]	s9,s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,s10,r15	[]	[]	
81	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	[]	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r39	[]	r39	
82	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	[]	r11	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	s52	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s23,s23,s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s33,s33,s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s35	[]	[]	[]	[]	[]	
12	[]	[]	s37	[]	s5	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15,s15,s15,s15	[]	s5,s5,s5,s5	s11,s11,s11,s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16,s16,s16	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s40,s40,s40	s32,s32,s32	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s42,s42,s42,s42,s42,s42,s42,s42,s42,s42	s32,s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s43,s43,s43	s32,s32,s32	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s44,s44,s44,s44,s44,s44,s44,s44,s44,s44	s32,s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s47,s47,s47	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s49,s49,s49,s49	s32,s32,s32,s32	s48,s48,s48,s48	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s50,s50,s50	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s59,s59,s59,s59,s59,s59,s59,s59,s59	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
38	[]	[]	s63,s63,s63,s63	[]	s5,s5,s5,s5	s11,s11,s11,s11	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s65,s65,s65,s65,s65,s65,s65,s65,s65	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	[]	s69,s69,s69	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s70,s70,s70	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s50,s50	[]	
50	[]	[]	[]	[]	[]	[]	[]	s73,s73,s73	s32,s32,s32	[]	[]	[]	
51	[]	[]	[]	[]	[]	[]	[]	s74,s74,s74,s74,s74,s74,s74,s74,s74	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	s75,s75,s75,s75,s75,s75,s75,s75,s75	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	s76,s76,s76	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
61	[]	[]	[]	[]	[]	[]	[]	s78,s78,s78	s32,s32,s32	[]	[]	s77,s77,s77	
62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	s15,s15,s15,s15	s80,s80,s80,s80	s5,s5,s5,s5	s11,s11,s11,s11	[]	[]	s7,s7,s7,s7	[]	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	s16,s16,s16	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	s16,s16,s16	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	s83	[]	[]	[]	[]	[]	
80	[]	[]	[]	s16,s16,s16,s16	[]	[]	[]	[]	s7,s7,s7,s7	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	[]	[]	[]	[]	[]	[]	s84	s32	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


