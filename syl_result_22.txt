LR0
I28
B -> false · 
I18
D -> T ID · ;
I67
L -> ID [ E ] · 
I6
S -> ID · = E ;
L -> ID · [ E ]
I66
E -> ( E · )
E -> E · + E
E -> E · * E
I46
B -> B or · B
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I12
T -> record · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I68
S -> L = E ; · 
I64
D -> proc ID ; D · S
D -> D · D
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
L ->  · ID [ E ]
L ->  · L [ E ]
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I84
Elist -> Elist ， · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I82
D -> proc ID ; D S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I47
B -> B and · B
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I78
S -> while B do S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I8
S -> if · B then S
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I0
P' ->  · P
P ->  · D
P ->  · S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
T ->  · X C
T ->  · record D
L ->  · ID [ E ]
L ->  · L [ E ]
X ->  · int
X ->  · real
I73
B -> ( B ) · 
I54
relop -> < · 
I62
S -> call ID ( · Elist )
Elist ->  · Elist ， E
Elist ->  · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I81
C -> [ CONST ] · C
C ->  · [ CONST ] C
C ->  · empty
I75
B -> E relop E · 
E -> E · + E
E -> E · * E
I51
B -> E relop · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I7
S -> L · = E ;
L -> L · [ E ]
I43
S -> L = E · ;
E -> E · + E
E -> E · * E
I58
relop -> > · 
I52
E -> E + · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I72
B -> B and B · 
B -> B · or B
B -> B · and B
I37
T -> record D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I32
E -> L · 
L -> L · [ E ]
I11
T -> X · C
C ->  · [ CONST ] C
C ->  · empty
I15
D -> D D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I9
S -> while · B do S
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I79
S -> call ID ( Elist · )
Elist -> Elist · ， E
I60
E -> - E · 
E -> E · + E
E -> E · * E
I55
relop -> <= · 
I27
B -> true · 
I48
B -> not B · 
B -> B · or B
B -> B · and B
I29
E -> - · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I83
S -> call ID ( Elist ) · 
I70
S -> if B then S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I39
D -> T ID ; · 
I31
E -> CONST · 
I1
P' -> P · 
I38
D -> proc ID ; · D S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I13
X -> int · 
I50
E -> ( E · )
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I44
L -> L [ E · ]
E -> E · + E
E -> E · * E
I3
P -> S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I33
S -> while B · do S
B -> B · or B
B -> B · and B
I17
D -> proc ID · ; D S
I26
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I65
S -> ID = E ; · 
I42
L -> ID [ E · ]
E -> E · + E
E -> E · * E
I49
B -> ( B · )
B -> B · or B
B -> B · and B
I45
S -> if B then · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I19
S -> ID = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I22
L -> L [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I57
relop -> != · 
I34
S -> call ID · ( Elist )
I5
D -> T · ID ;
I4
D -> proc · ID ; D S
I85
C -> [ CONST ] C · 
I77
E -> E * E · 
E -> E · + E
E -> E · * E
I56
relop -> == · 
I20
L -> ID [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I86
Elist -> Elist ， E · 
E -> E · + E
E -> E · * E
I80
Elist -> E · 
E -> E · + E
E -> E · * E
I35
T -> X C · 
I30
E -> ID · 
L -> ID · [ E ]
I71
B -> B or B · 
B -> B · or B
B -> B · and B
I24
B -> not · B
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I40
S -> ID = E · ;
E -> E · + E
E -> E · * E
I10
S -> call · ID ( Elist )
I14
X -> real · 
I2
P -> D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I61
S -> while B do · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I63
C -> [ CONST · ] C
I53
E -> E * · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I23
S -> if B · then S
B -> B · or B
B -> B · and B
I41
E -> ( · E )
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I76
E -> E + E · 
E -> E · + E
E -> E · * E
I59
relop -> >= · 
I74
E -> ( E ) · 
I16
S -> S S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I36
C -> [ · CONST ] C
I69
L -> L [ E ] · 
I25
B -> ( · B )
E -> ( · E )
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I21
S -> L = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17)]
5 - [(ID, 18)]
6 - [(=, 19), ([, 20)]
7 - [(=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 34)]
11 - [(C, 35), ([, 36)]
12 - [(D, 37), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 38)]
18 - [(;, 39)]
19 - [(E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
20 - [(E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
21 - [(E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
22 - [(E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
23 - [(then, 45), (or, 46), (and, 47)]
24 - [(B, 48), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 49), (E, 50), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
26 - [(relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59)]
29 - [(E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 20)]
32 - [([, 22)]
33 - [(do, 61), (or, 46), (and, 47)]
34 - [((, 62)]
36 - [(CONST, 63)]
37 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
38 - [(D, 64), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
40 - [(;, 65), (+, 52), (*, 53)]
41 - [(E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
42 - [(], 67), (+, 52), (*, 53)]
43 - [(;, 68), (+, 52), (*, 53)]
44 - [(], 69), (+, 52), (*, 53)]
45 - [(S, 70), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
46 - [(B, 71), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
47 - [(B, 72), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
48 - [(or, 46), (and, 47)]
49 - [(), 73), (or, 46), (and, 47)]
50 - [(), 74), (relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59)]
51 - [(E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
52 - [(E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
53 - [(E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
60 - [(+, 52), (*, 53)]
61 - [(S, 78), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
62 - [(Elist, 79), (E, 80), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
63 - [(], 81)]
64 - [(S, 82), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
66 - [(), 74), (+, 52), (*, 53)]
70 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
71 - [(or, 46), (and, 47)]
72 - [(or, 46), (and, 47)]
75 - [(+, 52), (*, 53)]
76 - [(+, 52), (*, 53)]
77 - [(+, 52), (*, 53)]
78 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
79 - [(), 83), (，, 84)]
80 - [(+, 52), (*, 53)]
81 - [(C, 85), ([, 36)]
82 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
84 - [(E, 86), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
86 - [(+, 52), (*, 53)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4,r15	s6,r15	r15	s12,r15	s13,r15	s14,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
1	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	r0	
2	s4,r1	r1	r1	s12,r1	s13,r1	s14,r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	r1	
3	r2,r15	s6,r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	s8,r2,r15	r2,r15	r2,r15	s9,r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	r2,r15	s10,r2,r15	r2,r15	r2,r15	
4	[]	s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20	[]	[]	s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22	[]	[]	s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	r12	r12	r12	r12	r12	r12	s36,r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	
12	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	r9	
14	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	r10	
15	s4,r4	r4	r4	s12,r4	s13,r4	s14,r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	r4	
16	r3,r15	s6,r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	s8,r3,r15	r3,r15	r3,r15	s9,r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	r3,r15	s10,r3,r15	r3,r15	r3,r15	
17	[]	[]	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s45	[]	[]	[]	s46	s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s54	s55	s56	s57	s59	s58	[]	[]	[]	
27	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	r32	
28	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	r33	
29	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	r20	r20	r20	r20	r20	r20	s20,r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	r20	
31	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	r21	
32	r22	r22	r22	r22	r22	r22	s22,r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	r22	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61	s46	s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	r7	
36	[]	[]	[]	[]	[]	[]	[]	s63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	s4,r8	r8	r8	s12,r8	s13,r8	s14,r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	r8	
38	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	r6	
40	[]	[]	s65	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	s67	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	s68	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	s69	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	r15	s6,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
46	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	s46,r29	s47,r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	r29	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	[]	s46	s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	s74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s54	s55	s56	s57	s59	s58	[]	[]	[]	
51	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	r34	
55	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	r35	
56	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	r36	
57	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	r37	
58	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	r38	
59	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	r39	
60	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	s52,r18	s53,r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	r18	
61	r15	s6,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
62	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	[]	[]	[]	[]	[]	[]	s81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	s4,r15	s6,r15	r15	s12,r15	s13,r15	s14,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s8,r15	r15	r15	s9,r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	r15	s10,r15	r15	r15	
65	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	r13	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	s74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	r23	
68	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	r14	
69	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	r24	
70	r25,r15	s6,r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	s8,r25,r15	r25,r15	r25,r15	s9,r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	r25,r15	s10,r25,r15	r25,r15	r25,r15	
71	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	s46,r27	s47,r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	r27	
72	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	s46,r28	s47,r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	r28	
73	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	r30	
74	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	r19	
75	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	s52,r31	s53,r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	r31	
76	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	s52,r16	s53,r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	r16	
77	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	s52,r17	s53,r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	r17	
78	r26,r15	s6,r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	s8,r26,r15	r26,r15	r26,r15	s9,r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	r26,r15	s10,r26,r15	r26,r15	r26,r15	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s84	[]	
80	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	s52,r42	s53,r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	r42	
81	r12	r12	r12	r12	r12	r12	s36,r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	r12	
82	r5,r15	s6,r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	s8,r5,r15	r5,r15	r5,r15	s9,r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	r5,r15	s10,r5,r15	r5,r15	r5,r15	
83	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	r40	
84	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	r11	
86	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	s52,r41	s53,r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	r41	
87	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26	s32	s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s26	s32	s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s35	[]	[]	[]	[]	[]	
12	[]	[]	s37	[]	s5	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s40	s32	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s42	s32	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s43	s32	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s44	s32	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26	s32	s48	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s50	s32	s49	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s60	s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
38	[]	[]	s64	[]	s5	s11	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s66	s32	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	[]	s70	[]	[]	[]	[]	s7	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	s26	s32	s71	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	s26	s32	s72	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	[]	
51	[]	[]	[]	[]	[]	[]	[]	s75	s32	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	s76	s32	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	s77	s32	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	[]	[]	s78	[]	[]	[]	[]	s7	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	s80	s32	[]	[]	s79	
63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	[]	[]	s15	s82	s5	s11	[]	[]	s7	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	s85	[]	[]	[]	[]	[]	
82	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	s86	s32	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
87	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


SLR
I28
B -> false · 
I18
D -> T ID · ;
I67
L -> ID [ E ] · 
I6
S -> ID · = E ;
L -> ID · [ E ]
I66
E -> ( E · )
E -> E · + E
E -> E · * E
I46
B -> B or · B
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I12
T -> record · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I68
S -> L = E ; · 
I64
D -> proc ID ; D · S
D -> D · D
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
L ->  · ID [ E ]
L ->  · L [ E ]
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I84
Elist -> Elist ， · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I82
D -> proc ID ; D S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I47
B -> B and · B
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I78
S -> while B do S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I8
S -> if · B then S
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I0
P' ->  · P
P ->  · D
P ->  · S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
T ->  · X C
T ->  · record D
L ->  · ID [ E ]
L ->  · L [ E ]
X ->  · int
X ->  · real
I73
B -> ( B ) · 
I54
relop -> < · 
I62
S -> call ID ( · Elist )
Elist ->  · Elist ， E
Elist ->  · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I81
C -> [ CONST ] · C
C ->  · [ CONST ] C
C ->  · empty
I75
B -> E relop E · 
E -> E · + E
E -> E · * E
I51
B -> E relop · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I7
S -> L · = E ;
L -> L · [ E ]
I43
S -> L = E · ;
E -> E · + E
E -> E · * E
I58
relop -> > · 
I52
E -> E + · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I72
B -> B and B · 
B -> B · or B
B -> B · and B
I37
T -> record D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I32
E -> L · 
L -> L · [ E ]
I11
T -> X · C
C ->  · [ CONST ] C
C ->  · empty
I15
D -> D D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I9
S -> while · B do S
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I79
S -> call ID ( Elist · )
Elist -> Elist · ， E
I60
E -> - E · 
E -> E · + E
E -> E · * E
I55
relop -> <= · 
I27
B -> true · 
I48
B -> not B · 
B -> B · or B
B -> B · and B
I29
E -> - · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I83
S -> call ID ( Elist ) · 
I70
S -> if B then S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I39
D -> T ID ; · 
I31
E -> CONST · 
I1
P' -> P · 
I38
D -> proc ID ; · D S
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I13
X -> int · 
I50
E -> ( E · )
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I44
L -> L [ E · ]
E -> E · + E
E -> E · * E
I3
P -> S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I33
S -> while B · do S
B -> B · or B
B -> B · and B
I17
D -> proc ID · ; D S
I26
B -> E · relop E
E -> E · + E
E -> E · * E
relop ->  · <
relop ->  · <=
relop ->  · ==
relop ->  · !=
relop ->  · >
relop ->  · >=
I65
S -> ID = E ; · 
I42
L -> ID [ E · ]
E -> E · + E
E -> E · * E
I49
B -> ( B · )
B -> B · or B
B -> B · and B
I45
S -> if B then · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I19
S -> ID = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I22
L -> L [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I57
relop -> != · 
I34
S -> call ID · ( Elist )
I5
D -> T · ID ;
I4
D -> proc · ID ; D S
I85
C -> [ CONST ] C · 
I77
E -> E * E · 
E -> E · + E
E -> E · * E
I56
relop -> == · 
I20
L -> ID [ · E ]
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I86
Elist -> Elist ， E · 
E -> E · + E
E -> E · * E
I80
Elist -> E · 
E -> E · + E
E -> E · * E
I35
T -> X C · 
I30
E -> ID · 
L -> ID · [ E ]
I71
B -> B or B · 
B -> B · or B
B -> B · and B
I24
B -> not · B
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I40
S -> ID = E · ;
E -> E · + E
E -> E · * E
I10
S -> call · ID ( Elist )
I14
X -> real · 
I2
P -> D · 
D -> D · D
D ->  · D D
D ->  · proc ID ; D S
D ->  · T ID ;
T ->  · X C
T ->  · record D
X ->  · int
X ->  · real
I61
S -> while B do · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I63
C -> [ CONST · ] C
I53
E -> E * · E
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I23
S -> if B · then S
B -> B · or B
B -> B · and B
I41
E -> ( · E )
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I76
E -> E + E · 
E -> E · + E
E -> E · * E
I59
relop -> >= · 
I74
E -> ( E ) · 
I16
S -> S S · 
S -> S · S
S ->  · S S
S ->  · ID = E ;
S ->  · L = E ;
S ->  · empty
S ->  · if B then S
S ->  · while B do S
S ->  · call ID ( Elist )
L ->  · ID [ E ]
L ->  · L [ E ]
I36
C -> [ · CONST ] C
I69
L -> L [ E ] · 
I25
B -> ( · B )
E -> ( · E )
B ->  · B or B
B ->  · B and B
B ->  · not B
B ->  · ( B )
B ->  · E relop E
B ->  · true
B ->  · false
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]
I21
S -> L = · E ;
E ->  · E + E
E ->  · E * E
E ->  · - E
E ->  · ( E )
E ->  · ID
E ->  · CONST
E ->  · L
L ->  · ID [ E ]
L ->  · L [ E ]

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17)]
5 - [(ID, 18)]
6 - [(=, 19), ([, 20)]
7 - [(=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 34)]
11 - [(C, 35), ([, 36)]
12 - [(D, 37), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 38)]
18 - [(;, 39)]
19 - [(E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
20 - [(E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
21 - [(E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
22 - [(E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
23 - [(then, 45), (or, 46), (and, 47)]
24 - [(B, 48), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 49), (E, 50), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
26 - [(relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59)]
29 - [(E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 20)]
32 - [([, 22)]
33 - [(do, 61), (or, 46), (and, 47)]
34 - [((, 62)]
36 - [(CONST, 63)]
37 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
38 - [(D, 64), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
40 - [(;, 65), (+, 52), (*, 53)]
41 - [(E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
42 - [(], 67), (+, 52), (*, 53)]
43 - [(;, 68), (+, 52), (*, 53)]
44 - [(], 69), (+, 52), (*, 53)]
45 - [(S, 70), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
46 - [(B, 71), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
47 - [(B, 72), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
48 - [(or, 46), (and, 47)]
49 - [(), 73), (or, 46), (and, 47)]
50 - [(), 74), (relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59)]
51 - [(E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
52 - [(E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
53 - [(E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
60 - [(+, 52), (*, 53)]
61 - [(S, 78), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
62 - [(Elist, 79), (E, 80), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
63 - [(], 81)]
64 - [(S, 82), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
66 - [(), 74), (+, 52), (*, 53)]
70 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
71 - [(or, 46), (and, 47)]
72 - [(or, 46), (and, 47)]
75 - [(+, 52), (*, 53)]
76 - [(+, 52), (*, 53)]
77 - [(+, 52), (*, 53)]
78 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
79 - [(), 83), (，, 84)]
80 - [(+, 52), (*, 53)]
81 - [(C, 85), ([, 36)]
82 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
84 - [(E, 86), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
86 - [(+, 52), (*, 53)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4,r15	s6,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r0	
2	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r1	
3	r15	s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r2,r15	
4	[]	s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20	[]	[]	s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22	[]	[]	s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
12	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	[]	r9	[]	[]	[]	[]	r9	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	r10	[]	[]	[]	[]	r10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	s4,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	r4	
16	r3,r15	s6,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r3,r15	[]	[]	s9,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r3,r15	[]	r3,r15	
17	[]	[]	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s45	[]	[]	[]	s46	s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s54	s55	s56	s57	s59	s58	[]	[]	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	r32	[]	[]	r32	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r33	[]	r33	[]	[]	r33	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	[]	[]	r20	[]	[]	[]	s20	[]	r20	[]	r20	r20	[]	[]	r20	[]	r20	[]	[]	r20	r20	r20	[]	[]	[]	r20	r20	r20	r20	r20	r20	[]	r20	[]	
31	[]	[]	r21	[]	[]	[]	[]	[]	r21	[]	r21	r21	[]	[]	r21	[]	r21	[]	[]	r21	r21	r21	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	r21	[]	
32	[]	[]	r22	[]	[]	[]	s22	[]	r22	[]	r22	r22	[]	[]	r22	[]	r22	[]	[]	r22	r22	r22	[]	[]	[]	r22	r22	r22	r22	r22	r22	[]	r22	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61	s46	s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	r7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	s63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	s4	r8	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	r6	
40	[]	[]	s65	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	s67	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	s68	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	s69	[]	s52	s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	r15	s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
46	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	r29	[]	[]	r29	s46,r29	s47,r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	[]	s46	s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	s74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s54	s55	s56	s57	s59	s58	[]	[]	[]	
51	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	r34	[]	[]	[]	[]	[]	r34	[]	[]	[]	[]	r34	r34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	r35	[]	[]	[]	[]	[]	r35	[]	[]	[]	[]	r35	r35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	r36	[]	[]	[]	[]	[]	r36	[]	[]	[]	[]	r36	r36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	r37	[]	[]	[]	[]	[]	r37	[]	[]	[]	[]	r37	r37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	r38	[]	[]	[]	[]	[]	r38	[]	[]	[]	[]	r38	r38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	r39	[]	[]	[]	[]	[]	r39	[]	[]	[]	[]	r39	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	r18	[]	[]	[]	[]	[]	r18	[]	s52,r18	s53,r18	[]	[]	r18	[]	r18	[]	[]	r18	r18	r18	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	r18	[]	
61	r15	s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
62	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	[]	[]	[]	[]	[]	[]	s81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	s4,r15	s6,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
65	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	s74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	r23	[]	[]	[]	r23	[]	r23	r23	r23	r23	[]	[]	r23	[]	r23	[]	[]	r23	r23	r23	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	r23	[]	
68	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
69	[]	[]	r24	[]	[]	[]	r24	[]	r24	r24	r24	r24	[]	[]	r24	[]	r24	[]	[]	r24	r24	r24	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	r24	[]	
70	r25,r15	s6,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r25,r15	[]	[]	s9,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r25,r15	[]	r25,r15	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	r27	[]	[]	r27	s46,r27	s47,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	r28	[]	[]	r28	s46,r28	s47,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r30	[]	r30	[]	[]	r30	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	r19	[]	[]	[]	[]	[]	r19	[]	r19	r19	[]	[]	r19	[]	r19	[]	[]	r19	r19	r19	[]	[]	[]	r19	r19	r19	r19	r19	r19	[]	r19	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	r31	[]	r31	[]	[]	r31	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	r16	[]	[]	[]	[]	[]	r16	[]	s52,r16	s53,r16	[]	[]	r16	[]	r16	[]	[]	r16	r16	r16	[]	[]	[]	r16	r16	r16	r16	r16	r16	[]	r16	[]	
77	[]	[]	r17	[]	[]	[]	[]	[]	r17	[]	s52,r17	s53,r17	[]	[]	r17	[]	r17	[]	[]	r17	r17	r17	[]	[]	[]	r17	r17	r17	r17	r17	r17	[]	r17	[]	
78	r26,r15	s6,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r26,r15	[]	[]	s9,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r26,r15	[]	r26,r15	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s84	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	r42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r42	[]	
81	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	r5,r15	s6,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r5,r15	[]	[]	s9,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r5,r15	[]	r5,r15	
83	r40	r40	[]	r40	r40	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	r40	
84	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	r11	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	r41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r41	[]	
87	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26	s32	s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s26	s32	s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s35	[]	[]	[]	[]	[]	
12	[]	[]	s37	[]	s5	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s40	s32	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s42	s32	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s43	s32	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s44	s32	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26	s32	s48	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s50	s32	s49	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s60	s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
38	[]	[]	s64	[]	s5	s11	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s66	s32	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	[]	s70	[]	[]	[]	[]	s7	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	s26	s32	s71	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	s26	s32	s72	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51	[]	
51	[]	[]	[]	[]	[]	[]	[]	s75	s32	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	s76	s32	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	s77	s32	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	[]	[]	s78	[]	[]	[]	[]	s7	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	s80	s32	[]	[]	s79	
63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	[]	[]	s15	s82	s5	s11	[]	[]	s7	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	s85	[]	[]	[]	[]	[]	
82	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	s86	s32	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
87	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


LR1
I300
L -> ID [ E · ], or*[+and)
E -> E · + E, *]+
E -> E · * E, *]+
I317
S -> L = E ; · , ifprocwhilecallrecordrealIDint$
I331
S -> ID = E ; · , ifprocwhilecallrecordrealIDint
I240
S -> ID = · E ;, ifprocwhilecallrecordrealIDint$
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I160
E -> ID · , or*do+and
L -> ID · [ E ], or*[do+and
I269
E -> E + E · , or*do+and
E -> E · + E, or*do+and
E -> E · * E, or*do+and
I62
B -> B or · B, orthenand
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I314
D -> proc ID ; · D S, ifprocwhilecallrecordrealIDint
D ->  · D D, ifprocwhilecallrecordrealIDint
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint
D ->  · T ID ;, ifprocwhilecallrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I321
D -> proc ID ; D S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I4
D -> proc · ID ; D S, procint$recordreal
I139
E -> ( · E ), >=><=)<*+==!=
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I121
S -> L = E ; · , ifIDwhilecall$
I167
E -> ID · , )*，+
L -> ID · [ E ], *[+)，
I199
B -> B and B · , )orand
B -> B · or B, )orand
B -> B · and B, )orand
I217
L -> ID [ · E ], or*then[+and
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I205
E -> L · , or*+and)
L -> L · [ E ], or*[+and)
I131
E -> E + · E, >=><=)<*+==!=
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I124
B -> B or B · , orthenand
B -> B · or B, orthenand
B -> B · and B, orthenand
I143
E -> - · E, or*then+and
E ->  · E + E, or*then+and
E ->  · E * E, or*then+and
E ->  · - E, or*then+and
E ->  · ( E ), or*then+and
E ->  · ID, or*then+and
E ->  · CONST, or*then+and
E ->  · L, or*then+and
L ->  · ID [ E ], or*then[+and
L ->  · L [ E ], or*then[+and
I63
B -> B and · B, orthenand
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I19
S -> ID = · E ;, ifIDwhilecall$
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I99
D -> proc ID ; D · S, procint$recordreal
D -> D · D, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
D ->  · D D, ifprocwhilecallrecordrealIDint$
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint$
D ->  · T ID ;, ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I279
L -> L [ E · ], *[+)，
E -> E · + E, *]+
E -> E · * E, *]+
I237
D -> proc · ID ; D S, ifprocwhilecallrecordrealIDint
I84
E -> - E · , >=><=*+==<!=
E -> E · + E, >=><=<*+==!=
E -> E · * E, >=><=<*+==!=
I230
E -> E * · E, )*，+
E ->  · E + E, *+)，
E ->  · E * E, *+)，
E ->  · - E, *+)，
E ->  · ( E ), *+)，
E ->  · ID, *+)，
E ->  · CONST, *+)，
E ->  · L, *+)，
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I262
L -> ID [ E ] · , >=><=[)<*+==!=
I221
E -> E + · E, or*do+and
E ->  · E + E, or*do+and
E ->  · E * E, or*do+and
E ->  · - E, or*do+and
E ->  · ( E ), or*do+and
E ->  · ID, or*do+and
E ->  · CONST, or*do+and
E ->  · L, or*do+and
L ->  · ID [ E ], or*[do+and
L ->  · L [ E ], or*[do+and
I324
S -> ID = E · ;, ifprocwhilecallrecordrealIDint
E -> E · + E, *+;
E -> E · * E, *+;
I96
D -> D D · , IDprocintrecordreal
D -> D · D, procrecordrealIDint
D ->  · D D, procrecordrealIDint
D ->  · proc ID ; D S, procrecordrealIDint
D ->  · T ID ;, procrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I111
E -> L · , )*+
L -> L · [ E ], )[*+
I127
B -> B or · B, )orand
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I133
B -> not B · , )orand
B -> B · or B, )orand
B -> B · and B, )orand
I216
E -> ( E · ), or*then+and
E -> E · + E, )*+
E -> E · * E, )*+
I278
L -> ID [ E · ], *[+)，
E -> E · + E, *]+
E -> E · * E, *]+
I286
S -> call · ID ( Elist ), ifprocwhilecallrecordrealIDint
I35
T -> X C · , ID
I115
E -> E + · E, *]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I128
B -> B and · B, )orand
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I296
L -> L [ E ] · , )[*+
I37
T -> record D · , ID
D -> D · D, IDprocintrecordreal
D ->  · D D, procrecordrealIDint
D ->  · proc ID ; D S, procrecordrealIDint
D ->  · T ID ;, procrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I202
E -> ( · E ), or*+and)
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I87
L -> L [ · E ], >=><=[<*+==!=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I156
B -> ( B ) · , ordoand
I58
relop -> > · , (-IDCONST
I268
L -> L [ E · ], or*then[+and
E -> E · + E, *]+
E -> E · * E, *]+
I322
L -> ID [ E ] · , or*[+and)
I305
L -> L [ E ] · , or*[do+and
I249
E -> ( E ) · , )*+
I36
B -> E · relop E, ordoand
E -> E · + E, >=><=*+==<!=
E -> E · * E, >=><=*+==<!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I248
E -> E * E · , )*+
E -> E · + E, )*+
E -> E · * E, )*+
I98
D -> T ID · ;, IDprocintrecordreal
I267
L -> ID [ E · ], or*then[+and
E -> E · + E, *]+
E -> E · * E, *]+
I162
E -> L · , or*do+and
L -> L · [ E ], or*[do+and
I50
E -> ID · , *+;
L -> ID · [ E ], *[+;
I229
E -> E + · E, )*，+
E ->  · E + E, *+)，
E ->  · E * E, *+)，
E ->  · - E, *+)，
E ->  · ( E ), *+)，
E ->  · ID, *+)，
E ->  · CONST, *+)，
E ->  · L, *+)，
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I166
E -> ( · E ), )*，+
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I120
L -> L [ · E ], *][+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I231
E -> - E · , )*，+
E -> E · + E, *+)，
E -> E · * E, *+)，
I169
E -> L · , )*，+
L -> L · [ E ], *[+)，
I88
S -> while B do · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I145
E -> ID · , or*then+and
L -> ID · [ E ], or*then[+and
I271
E -> ( E ) · , or*do+and
I325
S -> L = E · ;, ifprocwhilecallrecordrealIDint
E -> E · + E, *+;
E -> E · * E, *+;
I328
S -> call ID ( · Elist ), ifprocwhilecallrecordrealIDint
Elist ->  · Elist ， E, )，
Elist ->  · E, )，
E ->  · E + E, )*，+
E ->  · E * E, )*，+
E ->  · - E, )*，+
E ->  · ( E ), )*，+
E ->  · ID, )*，+
E ->  · CONST, )*，+
E ->  · L, )*，+
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I306
L -> ID [ E ] · , *[+)，
I2
P -> D · , $
D -> D · D, procint$recordreal
D ->  · D D, procrecordrealint$
D ->  · proc ID ; D S, procrecordrealint$
D ->  · T ID ;, procrecordrealint$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I142
B -> E relop E · , orthenand
E -> E · + E, or*then+and
E -> E · * E, or*then+and
I280
D -> proc ID ; D S · , IDprocintrecordreal
S -> S · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I253
L -> L [ E ] · , *[+;
I73
E -> CONST · , >=><=)<*+==!=
I334
S -> while B do S · , ifprocwhilecallrecordrealIDint
S -> S · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I178
S -> while · B do S, ifprocwhilecallrecordrealIDint$
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I144
E -> ( · E ), or*then+and
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I182
E -> E + E · , *+;
E -> E · + E, *+;
E -> E · * E, *+;
I243
S -> while B · do S, ifprocwhilecallrecordrealIDint$
B -> B · or B, ordoand
B -> B · and B, ordoand
I13
X -> int · , ID[
I35
B -> ( · B ), ordoand
E -> ( · E ), >=><=*+==<!=
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I57
relop -> != · , (-IDCONST
I11
T -> X · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I206
E -> E + E · , >=><=)<*+==!=
E -> E · + E, >=><=)<*+==!=
E -> E · * E, >=><=)<*+==!=
I184
E -> ( E ) · , *+;
I239
S -> S S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I310
S -> L = · E ;, ifprocwhilecallrecordrealIDint
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I302
L -> ID [ E ] · , or*then[+and
I329
D -> proc ID ; D · S, ifprocwhilecallrecordrealIDint
D -> D · D, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
D ->  · D D, ifprocwhilecallrecordrealIDint
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint
D ->  · T ID ;, ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I9
S -> while · B do S, ifIDwhilecall$
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I33
S -> while B · do S, ifIDwhilecall$
B -> B · or B, ordoand
B -> B · and B, ordoand
I22
L -> L [ · E ], =[
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I117
E -> - E · , *]+
E -> E · + E, *]+
E -> E · * E, *]+
I56
relop -> == · , (-IDCONST
I270
E -> E * E · , or*do+and
E -> E · + E, or*do+and
E -> E · * E, or*do+and
I204
E -> CONST · , or*+and)
I17
D -> proc ID · ; D S, procint$recordreal
I15
D -> D D · , procint$recordreal
D -> D · D, procrecordrealint$
D ->  · D D, procrecordrealint$
D ->  · proc ID ; D S, procrecordrealint$
D ->  · T ID ;, procrecordrealint$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I52
E -> L · , *+;
L -> L · [ E ], *[+;
I287
D -> proc ID · ; D S, ifprocwhilecallrecordrealIDint
I220
L -> L [ E ] · , >=><=[<*+==!=
I147
E -> L · , or*then+and
L -> L · [ E ], or*then[+and
I168
E -> CONST · , )*，+
I284
S -> if · B then S, ifprocwhilecallrecordrealIDint
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I129
E -> ( E ) · , >=><=*+==<!=
I30
E -> ID · , >=><=*+==<!=
L -> ID · [ E ], >=><=[<*+==!=
I38
B -> false · , ordoand
I71
E -> - · E, >=><=)<*+==!=
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I69
B -> true · , )orand
I255
L -> L [ E ] · , *][+
I154
B -> B or B · , ordoand
B -> B · or B, ordoand
B -> B · and B, ordoand
I215
E -> - E · , or*then+and
E -> E · + E, or*then+and
E -> E · * E, or*then+and
I158
E -> - · E, or*do+and
E ->  · E + E, or*do+and
E ->  · E * E, or*do+and
E ->  · - E, or*do+and
E ->  · ( E ), or*do+and
E ->  · ID, or*do+and
E ->  · CONST, or*do+and
E ->  · L, or*do+and
L ->  · ID [ E ], or*[do+and
L ->  · L [ E ], or*[do+and
I141
L -> L [ · E ], >=><=[)<*+==!=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I281
D -> D D · , ifprocwhilecallrecordrealIDint
D -> D · D, ifprocwhilecallrecordrealIDint
D ->  · D D, ifprocwhilecallrecordrealIDint
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint
D ->  · T ID ;, ifprocwhilecallrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I283
S -> L · = E ;, ifprocwhilecallrecordrealIDint
L -> L · [ E ], =[
I146
E -> CONST · , or*then+and
I320
S -> call ID ( Elist · ), ifprocwhilecallrecordrealIDint$
Elist -> Elist · ， E, )，
I54
E -> - · E, *]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I195
E -> ( E ) · , *]+
I36
C -> [ · CONST ] C, ID
I18
D -> T ID · ;, procint$recordreal
I55
relop -> <= · , (-IDCONST
I297
E -> E + E · , or*+and)
E -> E · + E, or*+and)
E -> E · * E, or*+and)
I163
S -> call ID ( Elist · ), ifIDwhilecall$
Elist -> Elist · ， E, )，
I288
D -> T ID · ;, ifprocwhilecallrecordrealIDint
I173
D -> proc ID ; D S · , procint$recordreal
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I66
E -> ( E · ), >=><=*+==<!=
B -> E · relop E, )orand
E -> E · + E, >=><=)<*+==!=
E -> E · * E, >=><=)<*+==!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I332
S -> L = E ; · , ifprocwhilecallrecordrealIDint
I77
E -> E * · E, >=><=*+==<!=
E ->  · E + E, >=><=<*+==!=
E ->  · E * E, >=><=<*+==!=
E ->  · - E, >=><=<*+==!=
E ->  · ( E ), >=><=<*+==!=
E ->  · ID, >=><=<*+==!=
E ->  · CONST, >=><=<*+==!=
E ->  · L, >=><=<*+==!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I261
L -> L [ · E ], or*[+and)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I125
B -> B and B · , orthenand
B -> B · or B, orthenand
B -> B · and B, orthenand
I309
S -> ID = · E ;, ifprocwhilecallrecordrealIDint
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I122
L -> L [ E ] · , =[
I291
S -> if B then · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I130
B -> E relop · E, )orand
E ->  · E + E, or*+and)
E ->  · E * E, or*+and)
E ->  · - E, or*+and)
E ->  · ( E ), or*+and)
E ->  · ID, or*+and)
E ->  · CONST, or*+and)
E ->  · L, or*+and)
L ->  · ID [ E ], or*[+and)
L ->  · L [ E ], or*[+and)
I244
S -> call ID · ( Elist ), ifprocwhilecallrecordrealIDint$
I183
E -> E * E · , *+;
E -> E · + E, *+;
E -> E · * E, *+;
I101
D -> T · ID ;, ifprocwhilecallrecordrealIDint$
I56
E -> ID · , *]+
L -> ID · [ E ], *][+
I32
E -> L · , >=><=*+==<!=
L -> L · [ E ], >=><=[<*+==!=
I165
E -> - · E, )*，+
E ->  · E + E, *+)，
E ->  · E * E, *+)，
E ->  · - E, *+)，
E ->  · ( E ), *+)，
E ->  · ID, *+)，
E ->  · CONST, *+)，
E ->  · L, *+)，
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I64
B -> not B · , orthenand
B -> B · or B, orthenand
B -> B · and B, orthenand
I189
L -> ID [ · E ], )[*+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I175
S -> ID · = E ;, ifprocwhilecallrecordrealIDint$
L -> ID · [ E ], =[
I207
E -> E * E · , >=><=)<*+==!=
E -> E · + E, >=><=)<*+==!=
E -> E · * E, >=><=)<*+==!=
I242
S -> if B · then S, ifprocwhilecallrecordrealIDint$
B -> B · or B, orthenand
B -> B · and B, orthenand
I16
S -> S S · , ifIDwhilecall$
S -> S · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I92
B -> ( B · ), ordoand
B -> B · or B, )orand
B -> B · and B, )orand
I336
D -> proc ID ; D S · , ifprocwhilecallrecordrealIDint
S -> S · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I39
S -> call ID · ( Elist ), ifIDwhilecall$
I27
B -> true · , orthenand
I326
S -> if B then · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I148
E -> E + E · , >=><=*+==<!=
E -> E · + E, >=><=<*+==!=
E -> E · * E, >=><=<*+==!=
I174
D -> D D · , ifprocwhilecallrecordrealIDint$
D -> D · D, ifprocwhilecallrecordrealIDint$
D ->  · D D, ifprocwhilecallrecordrealIDint$
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint$
D ->  · T ID ;, ifprocwhilecallrecordrealIDint$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I234
L -> L [ · E ], *[+)，
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I6
S -> ID · = E ;, ifIDwhilecall$
L -> ID · [ E ], =[
I23
S -> if B · then S, ifIDwhilecall$
B -> B · or B, orthenand
B -> B · and B, orthenand
I24
B -> not · B, orthenand
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I188
E -> ( E · ), )*+
E -> E · + E, )*+
E -> E · * E, )*+
I157
B -> E relop E · , ordoand
E -> E · + E, or*do+and
E -> E · * E, or*do+and
I89
B -> B or · B, ordoand
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I225
L -> ID [ · E ], or*[do+and
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I257
E -> E * · E, or*+and)
E ->  · E + E, or*+and)
E ->  · E * E, or*+and)
E ->  · - E, or*+and)
E ->  · ( E ), or*+and)
E ->  · ID, or*+and)
E ->  · CONST, or*+and)
E ->  · L, or*+and)
L ->  · ID [ E ], or*[+and)
L ->  · L [ E ], or*[+and)
I90
B -> B and · B, ordoand
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I76
E -> E + · E, >=><=*+==<!=
E ->  · E + E, >=><=<*+==!=
E ->  · E * E, >=><=<*+==!=
E ->  · - E, >=><=<*+==!=
E ->  · ( E ), >=><=<*+==!=
E ->  · ID, >=><=<*+==!=
E ->  · CONST, >=><=<*+==!=
E ->  · L, >=><=<*+==!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I251
L -> L [ E · ], )[*+
E -> E · + E, *]+
E -> E · * E, *]+
I224
E -> ( E · ), or*do+and
E -> E · + E, )*+
E -> E · * E, )*+
I67
B -> not · B, )orand
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I187
E -> - E · , )*+
E -> E · + E, )*+
E -> E · * E, )*+
I245
D -> proc ID ; · D S, ifprocwhilecallrecordrealIDint$
D ->  · D D, ifprocwhilecallrecordrealIDint$
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint$
D ->  · T ID ;, ifprocwhilecallrecordrealIDint$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I218
L -> L [ · E ], or*then[+and
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I263
L -> L [ E ] · , >=><=[)<*+==!=
I59
relop -> >= · , (-IDCONST
I250
L -> ID [ E · ], )[*+
E -> E · + E, *]+
E -> E · * E, *]+
I112
L -> ID [ · E ], *[+;
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I273
L -> L [ E · ], or*[do+and
E -> E · + E, *]+
E -> E · * E, *]+
I208
B -> ( B ) · , )orand
I44
D -> T · ID ;, IDprocintrecordreal
I58
E -> L · , *]+
L -> L · [ E ], *][+
I275
E -> E + E · , )*，+
E -> E · + E, *+)，
E -> E · * E, *+)，
I106
E -> ( E · ), *+;
E -> E · + E, )*+
E -> E · * E, )*+
I209
E -> ( E ) · , >=><=)<*+==!=
I256
E -> E + · E, or*+and)
E ->  · E + E, or*+and)
E ->  · E * E, or*+and)
E ->  · - E, or*+and)
E ->  · ( E ), or*+and)
E ->  · ID, or*+and)
E ->  · CONST, or*+and)
E ->  · L, or*+and)
L ->  · ID [ E ], or*[+and)
L ->  · L [ E ], or*[+and)
I272
L -> ID [ E · ], or*[do+and
E -> E · + E, *]+
E -> E · * E, *]+
I323
L -> L [ E ] · , or*[+and)
I104
E -> E * · E, *+;
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I135
B -> E · relop E, )orand
E -> E · + E, >=><=*+==<!=
E -> E · * E, >=><=*+==<!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I0
P' ->  · P, $
P ->  · D, $
P ->  · S, $
D ->  · D D, procint$recordreal
D ->  · proc ID ; D S, procint$recordreal
D ->  · T ID ;, procint$recordreal
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
T ->  · X C, ID
T ->  · record D, ID
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
X ->  · int, ID[
X ->  · real, ID[
I330
S -> call ID ( Elist ) · , ifprocwhilecallrecordrealIDint$
I285
S -> while · B do S, ifprocwhilecallrecordrealIDint
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I312
S -> while B · do S, ifprocwhilecallrecordrealIDint
B -> B · or B, ordoand
B -> B · and B, ordoand
I298
E -> E * E · , or*+and)
E -> E · + E, or*+and)
E -> E · * E, or*+and)
I246
D -> T ID ; · , ifprocwhilecallrecordrealIDint$
I318
S -> if B then S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I192
L -> L [ E · ], *[+;
E -> E · + E, *]+
E -> E · * E, *]+
I186
E -> E * · E, )*+
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I108
E -> ( · E ), )*+
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I61
S -> if B then · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I227
S -> call ID ( Elist ) · , ifIDwhilecall$
I86
L -> ID [ · E ], >=><=[<*+==!=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I299
E -> ( E ) · , or*+and)
I75
B -> E relop · E, orthenand
E ->  · E + E, or*then+and
E ->  · E * E, or*then+and
E ->  · - E, or*then+and
E ->  · ( E ), or*then+and
E ->  · ID, or*then+and
E ->  · CONST, or*then+and
E ->  · L, or*then+and
L ->  · ID [ E ], or*then[+and
L ->  · L [ E ], or*then[+and
I295
L -> ID [ E ] · , )[*+
I191
L -> ID [ E · ], *[+;
E -> E · + E, *]+
E -> E · * E, *]+
I223
E -> - E · , or*do+and
E -> E · + E, or*do+and
E -> E · * E, or*do+and
I86
Elist -> Elist ， E · , )，
E -> E · + E, )*，+
E -> E · * E, )*，+
I307
L -> L [ E ] · , *[+)，
I308
S -> S S · , ifprocwhilecallrecordrealIDint
S -> S · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I193
E -> E + E · , *]+
E -> E · + E, *]+
E -> E · * E, *]+
I159
E -> ( · E ), or*do+and
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I316
S -> ID = E ; · , ifprocwhilecallrecordrealIDint$
I150
E -> ( E · ), >=><=<*+==!=
E -> E · + E, )*+
E -> E · * E, )*+
I137
E -> ( E · ), >=><=)<*+==!=
B -> E · relop E, )orand
E -> E · + E, >=><=)<*+==!=
E -> E · * E, >=><=)<*+==!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I304
L -> ID [ E ] · , or*[do+and
I126
B -> ( B ) · , orthenand
I134
B -> ( · B ), )orand
E -> ( · E ), >=><=*+==<!=
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I102
S -> ID = E ; · , ifIDwhilecall$
I103
E -> E + · E, *+;
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I149
E -> E * E · , >=><=*+==<!=
E -> E · + E, >=><=<*+==!=
E -> E · * E, >=><=<*+==!=
I119
L -> ID [ · E ], *][+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I277
E -> ( E ) · , )*，+
I214
E -> E * · E, or*then+and
E ->  · E + E, or*then+and
E ->  · E * E, or*then+and
E ->  · - E, or*then+and
E ->  · ( E ), or*then+and
E ->  · ID, or*then+and
E ->  · CONST, or*then+and
E ->  · L, or*then+and
L ->  · ID [ E ], or*then[+and
L ->  · L [ E ], or*then[+and
I100
D -> proc · ID ; D S, ifprocwhilecallrecordrealIDint$
I152
L -> L [ E · ], >=><=[<*+==!=
E -> E · + E, *]+
E -> E · * E, *]+
I198
B -> B or B · , )orand
B -> B · or B, )orand
B -> B · and B, )orand
I289
S -> ID = E · ;, ifprocwhilecallrecordrealIDint$
E -> E · + E, *+;
E -> E · * E, *+;
I294
D -> proc ID ; D · S, ifprocwhilecallrecordrealIDint$
D -> D · D, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
D ->  · D D, ifprocwhilecallrecordrealIDint$
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint$
D ->  · T ID ;, ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I155
B -> B and B · , ordoand
B -> B · or B, ordoand
B -> B · and B, ordoand
I185
E -> E + · E, )*+
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I303
L -> L [ E ] · , or*then[+and
I179
S -> call · ID ( Elist ), ifprocwhilecallrecordrealIDint$
I49
E -> ( · E ), *+;
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I3
P -> S · , $
S -> S · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I26
B -> E · relop E, orthenand
E -> E · + E, >=><=*+==<!=
E -> E · * E, >=><=*+==<!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I118
E -> ( E · ), *]+
E -> E · + E, )*+
E -> E · * E, )*+
I81
C -> [ CONST ] · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I151
L -> ID [ E · ], >=><=[<*+==!=
E -> E · + E, *]+
E -> E · * E, *]+
I47
S -> ID = E · ;, ifIDwhilecall$
E -> E · + E, *+;
E -> E · * E, *+;
I172
D -> T ID ; · , IDprocintrecordreal
I91
B -> not B · , ordoand
B -> B · or B, ordoand
B -> B · and B, ordoand
I252
L -> ID [ E ] · , *[+;
I10
S -> call · ID ( Elist ), ifIDwhilecall$
I84
Elist -> Elist ， · E, )，
E ->  · E + E, )*，+
E ->  · E * E, )*，+
E ->  · - E, )*，+
E ->  · ( E ), )*，+
E ->  · ID, )*，+
E ->  · CONST, )*，+
E ->  · L, )*，+
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I266
E -> ( E ) · , or*then+and
I1
P' -> P · , $
I264
E -> E + E · , or*then+and
E -> E · + E, or*then+and
E -> E · * E, or*then+and
I197
L -> L [ E · ], *][+
E -> E · + E, *]+
E -> E · * E, *]+
I335
S -> call ID ( Elist · ), ifprocwhilecallrecordrealIDint
Elist -> Elist · ， E, )，
I110
E -> CONST · , )*+
I20
L -> ID [ · E ], =[
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I70
B -> false · , )orand
I213
E -> E + · E, or*then+and
E ->  · E + E, or*then+and
E ->  · E * E, or*then+and
E ->  · - E, or*then+and
E ->  · ( E ), or*then+and
E ->  · ID, or*then+and
E ->  · CONST, or*then+and
E ->  · L, or*then+and
L ->  · ID [ E ], or*then[+and
L ->  · L [ E ], or*then[+and
I196
L -> ID [ E · ], *][+
E -> E · + E, *]+
E -> E · * E, *]+
I29
E -> - · E, >=><=*+==<!=
E ->  · E + E, >=><=<*+==!=
E ->  · E * E, >=><=<*+==!=
E ->  · - E, >=><=<*+==!=
E ->  · ( E ), >=><=<*+==!=
E ->  · ID, >=><=<*+==!=
E ->  · CONST, >=><=<*+==!=
E ->  · L, >=><=<*+==!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I276
E -> E * E · , )*，+
E -> E · + E, *+)，
E -> E · * E, *+)，
I171
D -> proc ID ; · D S, IDprocintrecordreal
D ->  · D D, ifprocwhilecallrecordrealIDint
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint
D ->  · T ID ;, ifprocwhilecallrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I85
E -> ( · E ), >=><=<*+==!=
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I25
B -> ( · B ), orthenand
E -> ( · E ), >=><=*+==<!=
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I5
D -> T · ID ;, procint$recordreal
I319
S -> while B do S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I290
S -> L = E · ;, ifprocwhilecallrecordrealIDint$
E -> E · + E, *+;
E -> E · * E, *+;
I293
S -> call ID ( · Elist ), ifprocwhilecallrecordrealIDint$
Elist ->  · Elist ， E, )，
Elist ->  · E, )，
E ->  · E + E, )*，+
E ->  · E * E, )*，+
E ->  · - E, )*，+
E ->  · ( E ), )*，+
E ->  · ID, )*，+
E ->  · CONST, )*，+
E ->  · L, )*，+
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I161
E -> CONST · , or*do+and
I43
D -> proc · ID ; D S, IDprocintrecordreal
I313
S -> call ID · ( Elist ), ifprocwhilecallrecordrealIDint
I14
X -> real · , ID[
I219
L -> ID [ E ] · , >=><=[<*+==!=
I238
D -> T · ID ;, ifprocwhilecallrecordrealIDint
I59
S -> L = E · ;, ifIDwhilecall$
E -> E · + E, *+;
E -> E · * E, *+;
I105
E -> - E · , *+;
E -> E · + E, *+;
E -> E · * E, *+;
I94
S -> call ID ( · Elist ), ifIDwhilecall$
Elist ->  · Elist ， E, )，
Elist ->  · E, )，
E ->  · E + E, )*，+
E ->  · E * E, )*，+
E ->  · - E, )*，+
E ->  · ( E ), )*，+
E ->  · ID, )*，+
E ->  · CONST, )*，+
E ->  · L, )*，+
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I123
S -> if B then S · , ifIDwhilecall$
S -> S · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I282
S -> ID · = E ;, ifprocwhilecallrecordrealIDint
L -> ID · [ E ], =[
I311
S -> if B · then S, ifprocwhilecallrecordrealIDint
B -> B · or B, orthenand
B -> B · and B, orthenand
I200
B -> E relop E · , )orand
E -> E · + E, or*+and)
E -> E · * E, or*+and)
I72
E -> ID · , >=><=)<*+==!=
L -> ID · [ E ], >=><=[)<*+==!=
I85
C -> [ CONST ] C · , ID
I138
E -> - E · , >=><=)<*+==!=
E -> E · + E, >=><=)<*+==!=
E -> E · * E, >=><=)<*+==!=
I60
L -> L [ E · ], =[
E -> E · + E, *]+
E -> E · * E, *]+
I55
E -> ( · E ), *]+
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I201
E -> - · E, or*+and)
E ->  · E + E, or*+and)
E ->  · E * E, or*+and)
E ->  · - E, or*+and)
E ->  · ( E ), or*+and)
E ->  · ID, or*+and)
E ->  · CONST, or*+and)
E ->  · L, or*+and)
L ->  · ID [ E ], or*[+and)
L ->  · L [ E ], or*[+and)
I241
S -> L = · E ;, ifprocwhilecallrecordrealIDint$
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I194
E -> E * E · , *]+
E -> E · + E, *]+
E -> E · * E, *]+
I54
relop -> < · , (-IDCONST
I53
L -> ID [ E · ], =[
E -> E · + E, *]+
E -> E · * E, *]+
I51
E -> CONST · , *+;
I63
C -> [ CONST · ] C, ID
I254
L -> ID [ E ] · , *][+
I140
L -> ID [ · E ], >=><=[)<*+==!=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I21
S -> L = · E ;, ifIDwhilecall$
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I37
B -> true · , ordoand
I45
D -> proc ID ; · D S, procint$recordreal
D ->  · D D, ifprocwhilecallrecordrealIDint$
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint$
D ->  · T ID ;, ifprocwhilecallrecordrealIDint$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I28
B -> false · , orthenand
I80
Elist -> E · , )，
E -> E · + E, )*，+
E -> E · * E, )*，+
I180
D -> proc ID · ; D S, ifprocwhilecallrecordrealIDint$
I136
B -> ( B · ), )orand
B -> B · or B, )orand
B -> B · and B, )orand
I210
E -> ( E · ), >=><=)<*+==!=
E -> E · + E, )*+
E -> E · * E, )*+
I34
B -> not · B, ordoand
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I190
L -> L [ · E ], )[*+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I93
B -> E relop · E, ordoand
E ->  · E + E, or*do+and
E ->  · E * E, or*do+and
E ->  · - E, or*do+and
E ->  · ( E ), or*do+and
E ->  · ID, or*do+and
E ->  · CONST, or*do+and
E ->  · L, or*do+and
L ->  · ID [ E ], or*[do+and
L ->  · L [ E ], or*[do+and
I247
E -> E + E · , )*+
E -> E · + E, )*+
E -> E · * E, )*+
I68
B -> ( · B ), )orand
E -> ( · E ), >=><=)<*+==!=
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I260
L -> ID [ · E ], or*[+and)
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I203
E -> ID · , or*+and)
L -> ID · [ E ], or*[+and)
I177
S -> if · B then S, ifprocwhilecallrecordrealIDint$
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I31
E -> CONST · , >=><=*+==<!=
I12
T -> record · D, ID
D ->  · D D, IDprocintrecordreal
D ->  · proc ID ; D S, IDprocintrecordreal
D ->  · T ID ;, IDprocintrecordreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I212
L -> L [ E · ], >=><=[)<*+==!=
E -> E · + E, *]+
E -> E · * E, *]+
I74
E -> L · , >=><=)<*+==!=
L -> L · [ E ], >=><=[)<*+==!=
I114
L -> ID [ E ] · , =[
I48
E -> - · E, *+;
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I109
E -> ID · , )*+
L -> ID · [ E ], )[*+
I8
S -> if · B then S, ifIDwhilecall$
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I226
L -> L [ · E ], or*[do+and
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I259
E -> ( E · ), or*+and)
E -> E · + E, )*+
E -> E · * E, )*+
I265
E -> E * E · , or*then+and
E -> E · + E, or*then+and
E -> E · * E, or*then+and
I46
D -> T ID ; · , procint$recordreal
I132
E -> E * · E, >=><=)<*+==!=
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I211
L -> ID [ E · ], >=><=[)<*+==!=
E -> E · + E, *]+
E -> E · * E, *]+
I337
S -> call ID ( Elist ) · , ifprocwhilecallrecordrealIDint
I222
E -> E * · E, or*do+and
E ->  · E + E, or*do+and
E ->  · E * E, or*do+and
E ->  · - E, or*do+and
E ->  · ( E ), or*do+and
E ->  · ID, or*do+and
E ->  · CONST, or*do+and
E ->  · L, or*do+and
L ->  · ID [ E ], or*[do+and
L ->  · L [ E ], or*[do+and
I292
S -> while B do · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I107
E -> - · E, )*+
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I176
S -> L · = E ;, ifprocwhilecallrecordrealIDint$
L -> L · [ E ], =[
I315
D -> T ID ; · , ifprocwhilecallrecordrealIDint
I236
D -> proc ID ; D · S, IDprocintrecordreal
D -> D · D, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
D ->  · D D, ifprocwhilecallrecordrealIDint
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint
D ->  · T ID ;, ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I233
L -> ID [ · E ], *[+)，
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I258
E -> - E · , or*+and)
E -> E · + E, or*+and)
E -> E · * E, or*+and)
I301
L -> L [ E · ], or*[+and)
E -> E · + E, *]+
E -> E · * E, *]+
I116
E -> E * · E, *]+
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I57
E -> CONST · , *]+
I7
S -> L · = E ;, ifIDwhilecall$
L -> L · [ E ], =[
I153
S -> while B do S · , ifIDwhilecall$
S -> S · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I327
S -> while B do · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I333
S -> if B then S · , ifprocwhilecallrecordrealIDint
S -> S · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I97
D -> proc ID · ; D S, IDprocintrecordreal
I113
L -> L [ · E ], *[+;
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I181
D -> T ID · ;, ifprocwhilecallrecordrealIDint$
I232
E -> ( E · ), )*，+
E -> E · + E, )*+
E -> E · * E, )*+
I65
B -> ( B · ), orthenand
B -> B · or B, )orand
B -> B · and B, )orand

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17)]
5 - [(ID, 18)]
6 - [(=, 19), ([, 20)]
7 - [(=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 39)]
11 - [(C, 40), ([, 41)]
12 - [(D, 42), (proc, 43), (T, 44), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 45)]
18 - [(;, 46)]
19 - [(E, 47), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
20 - [(E, 53), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
21 - [(E, 59), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
22 - [(E, 60), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
23 - [(then, 61), (or, 62), (and, 63)]
24 - [(B, 64), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 65), (E, 66), (not, 67), ((, 68), (true, 69), (false, 70), (-, 71), (ID, 72), (CONST, 73), (L, 74)]
26 - [(relop, 75), (+, 76), (*, 77), (<, 78), (<=, 79), (==, 80), (!=, 81), (>, 82), (>=, 83)]
29 - [(E, 84), (-, 29), ((, 85), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 86)]
32 - [([, 87)]
33 - [(do, 88), (or, 89), (and, 90)]
34 - [(B, 91), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
35 - [(B, 92), (E, 66), (not, 67), ((, 68), (true, 69), (false, 70), (-, 71), (ID, 72), (CONST, 73), (L, 74)]
36 - [(relop, 93), (+, 76), (*, 77), (<, 78), (<=, 79), (==, 80), (!=, 81), (>, 82), (>=, 83)]
39 - [((, 94)]
41 - [(CONST, 95)]
42 - [(D, 96), (proc, 43), (T, 44), (X, 11), (record, 12), (int, 13), (real, 14)]
43 - [(ID, 97)]
44 - [(ID, 98)]
45 - [(D, 99), (proc, 100), (T, 101), (X, 11), (record, 12), (int, 13), (real, 14)]
47 - [(;, 102), (+, 103), (*, 104)]
48 - [(E, 105), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
49 - [(E, 106), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
50 - [([, 112)]
52 - [([, 113)]
53 - [(], 114), (+, 115), (*, 116)]
54 - [(E, 117), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
55 - [(E, 118), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
56 - [([, 119)]
58 - [([, 120)]
59 - [(;, 121), (+, 103), (*, 104)]
60 - [(], 122), (+, 115), (*, 116)]
61 - [(S, 123), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
62 - [(B, 124), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
63 - [(B, 125), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
64 - [(or, 62), (and, 63)]
65 - [(), 126), (or, 127), (and, 128)]
66 - [(), 129), (relop, 130), (+, 131), (*, 132), (<, 78), (<=, 79), (==, 80), (!=, 81), (>, 82), (>=, 83)]
67 - [(B, 133), (not, 67), ((, 134), (E, 135), (true, 69), (false, 70), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
68 - [(B, 136), (E, 137), (not, 67), ((, 68), (true, 69), (false, 70), (-, 71), (ID, 72), (CONST, 73), (L, 74)]
71 - [(E, 138), (-, 71), ((, 139), (ID, 72), (CONST, 73), (L, 74)]
72 - [([, 140)]
74 - [([, 141)]
75 - [(E, 142), (-, 143), ((, 144), (ID, 145), (CONST, 146), (L, 147)]
76 - [(E, 148), (-, 29), ((, 85), (ID, 30), (CONST, 31), (L, 32)]
77 - [(E, 149), (-, 29), ((, 85), (ID, 30), (CONST, 31), (L, 32)]
84 - [(+, 76), (*, 77)]
85 - [(E, 150), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
86 - [(E, 151), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
87 - [(E, 152), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
88 - [(S, 153), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
89 - [(B, 154), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
90 - [(B, 155), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
91 - [(or, 89), (and, 90)]
92 - [(), 156), (or, 127), (and, 128)]
93 - [(E, 157), (-, 158), ((, 159), (ID, 160), (CONST, 161), (L, 162)]
94 - [(Elist, 163), (E, 164), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
95 - [(], 170)]
96 - [(D, 96), (proc, 43), (T, 44), (X, 11), (record, 12), (int, 13), (real, 14)]
97 - [(;, 171)]
98 - [(;, 172)]
99 - [(S, 173), (D, 174), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179), (proc, 100), (T, 101), (X, 11), (record, 12), (int, 13), (real, 14)]
100 - [(ID, 180)]
101 - [(ID, 181)]
103 - [(E, 182), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
104 - [(E, 183), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
105 - [(+, 103), (*, 104)]
106 - [(), 184), (+, 185), (*, 186)]
107 - [(E, 187), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
108 - [(E, 188), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
109 - [([, 189)]
111 - [([, 190)]
112 - [(E, 191), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
113 - [(E, 192), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
115 - [(E, 193), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
116 - [(E, 194), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
117 - [(+, 115), (*, 116)]
118 - [(), 195), (+, 185), (*, 186)]
119 - [(E, 196), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
120 - [(E, 197), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
123 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
124 - [(or, 62), (and, 63)]
125 - [(or, 62), (and, 63)]
127 - [(B, 198), (not, 67), ((, 134), (E, 135), (true, 69), (false, 70), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
128 - [(B, 199), (not, 67), ((, 134), (E, 135), (true, 69), (false, 70), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
130 - [(E, 200), (-, 201), ((, 202), (ID, 203), (CONST, 204), (L, 205)]
131 - [(E, 206), (-, 71), ((, 139), (ID, 72), (CONST, 73), (L, 74)]
132 - [(E, 207), (-, 71), ((, 139), (ID, 72), (CONST, 73), (L, 74)]
133 - [(or, 127), (and, 128)]
134 - [(B, 136), (E, 66), (not, 67), ((, 68), (true, 69), (false, 70), (-, 71), (ID, 72), (CONST, 73), (L, 74)]
135 - [(relop, 130), (+, 76), (*, 77), (<, 78), (<=, 79), (==, 80), (!=, 81), (>, 82), (>=, 83)]
136 - [(), 208), (or, 127), (and, 128)]
137 - [(), 209), (relop, 130), (+, 131), (*, 132), (<, 78), (<=, 79), (==, 80), (!=, 81), (>, 82), (>=, 83)]
138 - [(+, 131), (*, 132)]
139 - [(E, 210), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
140 - [(E, 211), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
141 - [(E, 212), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
142 - [(+, 213), (*, 214)]
143 - [(E, 215), (-, 143), ((, 144), (ID, 145), (CONST, 146), (L, 147)]
144 - [(E, 216), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
145 - [([, 217)]
147 - [([, 218)]
148 - [(+, 76), (*, 77)]
149 - [(+, 76), (*, 77)]
150 - [(), 129), (+, 185), (*, 186)]
151 - [(], 219), (+, 115), (*, 116)]
152 - [(], 220), (+, 115), (*, 116)]
153 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
154 - [(or, 89), (and, 90)]
155 - [(or, 89), (and, 90)]
157 - [(+, 221), (*, 222)]
158 - [(E, 223), (-, 158), ((, 159), (ID, 160), (CONST, 161), (L, 162)]
159 - [(E, 224), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
160 - [([, 225)]
162 - [([, 226)]
163 - [(), 227), (，, 228)]
164 - [(+, 229), (*, 230)]
165 - [(E, 231), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
166 - [(E, 232), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
167 - [([, 233)]
169 - [([, 234)]
170 - [(C, 235), ([, 41)]
171 - [(D, 236), (proc, 237), (T, 238), (X, 11), (record, 12), (int, 13), (real, 14)]
173 - [(S, 239), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
174 - [(D, 174), (proc, 100), (T, 101), (X, 11), (record, 12), (int, 13), (real, 14)]
175 - [(=, 240), ([, 20)]
176 - [(=, 241), ([, 22)]
177 - [(B, 242), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
178 - [(B, 243), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
179 - [(ID, 244)]
180 - [(;, 245)]
181 - [(;, 246)]
182 - [(+, 103), (*, 104)]
183 - [(+, 103), (*, 104)]
185 - [(E, 247), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
186 - [(E, 248), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
187 - [(+, 185), (*, 186)]
188 - [(), 249), (+, 185), (*, 186)]
189 - [(E, 250), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
190 - [(E, 251), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
191 - [(], 252), (+, 115), (*, 116)]
192 - [(], 253), (+, 115), (*, 116)]
193 - [(+, 115), (*, 116)]
194 - [(+, 115), (*, 116)]
196 - [(], 254), (+, 115), (*, 116)]
197 - [(], 255), (+, 115), (*, 116)]
198 - [(or, 127), (and, 128)]
199 - [(or, 127), (and, 128)]
200 - [(+, 256), (*, 257)]
201 - [(E, 258), (-, 201), ((, 202), (ID, 203), (CONST, 204), (L, 205)]
202 - [(E, 259), (-, 107), ((, 108), (ID, 109), (CONST, 110), (L, 111)]
203 - [([, 260)]
205 - [([, 261)]
206 - [(+, 131), (*, 132)]
207 - [(+, 131), (*, 132)]
210 - [(), 209), (+, 185), (*, 186)]
211 - [(], 262), (+, 115), (*, 116)]
212 - [(], 263), (+, 115), (*, 116)]
213 - [(E, 264), (-, 143), ((, 144), (ID, 145), (CONST, 146), (L, 147)]
214 - [(E, 265), (-, 143), ((, 144), (ID, 145), (CONST, 146), (L, 147)]
215 - [(+, 213), (*, 214)]
216 - [(), 266), (+, 185), (*, 186)]
217 - [(E, 267), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
218 - [(E, 268), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
221 - [(E, 269), (-, 158), ((, 159), (ID, 160), (CONST, 161), (L, 162)]
222 - [(E, 270), (-, 158), ((, 159), (ID, 160), (CONST, 161), (L, 162)]
223 - [(+, 221), (*, 222)]
224 - [(), 271), (+, 185), (*, 186)]
225 - [(E, 272), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
226 - [(E, 273), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
228 - [(E, 274), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
229 - [(E, 275), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
230 - [(E, 276), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
231 - [(+, 229), (*, 230)]
232 - [(), 277), (+, 185), (*, 186)]
233 - [(E, 278), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
234 - [(E, 279), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
236 - [(S, 280), (D, 281), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286), (proc, 237), (T, 238), (X, 11), (record, 12), (int, 13), (real, 14)]
237 - [(ID, 287)]
238 - [(ID, 288)]
239 - [(S, 239), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
240 - [(E, 289), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
241 - [(E, 290), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
242 - [(then, 291), (or, 62), (and, 63)]
243 - [(do, 292), (or, 89), (and, 90)]
244 - [((, 293)]
245 - [(D, 294), (proc, 100), (T, 101), (X, 11), (record, 12), (int, 13), (real, 14)]
247 - [(+, 185), (*, 186)]
248 - [(+, 185), (*, 186)]
250 - [(], 295), (+, 115), (*, 116)]
251 - [(], 296), (+, 115), (*, 116)]
256 - [(E, 297), (-, 201), ((, 202), (ID, 203), (CONST, 204), (L, 205)]
257 - [(E, 298), (-, 201), ((, 202), (ID, 203), (CONST, 204), (L, 205)]
258 - [(+, 256), (*, 257)]
259 - [(), 299), (+, 185), (*, 186)]
260 - [(E, 300), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
261 - [(E, 301), (-, 54), ((, 55), (ID, 56), (CONST, 57), (L, 58)]
264 - [(+, 213), (*, 214)]
265 - [(+, 213), (*, 214)]
267 - [(], 302), (+, 115), (*, 116)]
268 - [(], 303), (+, 115), (*, 116)]
269 - [(+, 221), (*, 222)]
270 - [(+, 221), (*, 222)]
272 - [(], 304), (+, 115), (*, 116)]
273 - [(], 305), (+, 115), (*, 116)]
274 - [(+, 229), (*, 230)]
275 - [(+, 229), (*, 230)]
276 - [(+, 229), (*, 230)]
278 - [(], 306), (+, 115), (*, 116)]
279 - [(], 307), (+, 115), (*, 116)]
280 - [(S, 308), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]
281 - [(D, 281), (proc, 237), (T, 238), (X, 11), (record, 12), (int, 13), (real, 14)]
282 - [(=, 309), ([, 20)]
283 - [(=, 310), ([, 22)]
284 - [(B, 311), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
285 - [(B, 312), (not, 34), ((, 35), (E, 36), (true, 37), (false, 38), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
286 - [(ID, 313)]
287 - [(;, 314)]
288 - [(;, 315)]
289 - [(;, 316), (+, 103), (*, 104)]
290 - [(;, 317), (+, 103), (*, 104)]
291 - [(S, 318), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
292 - [(S, 319), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
293 - [(Elist, 320), (E, 164), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
294 - [(S, 321), (D, 174), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179), (proc, 100), (T, 101), (X, 11), (record, 12), (int, 13), (real, 14)]
297 - [(+, 256), (*, 257)]
298 - [(+, 256), (*, 257)]
300 - [(], 322), (+, 115), (*, 116)]
301 - [(], 323), (+, 115), (*, 116)]
308 - [(S, 308), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]
309 - [(E, 324), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
310 - [(E, 325), (-, 48), ((, 49), (ID, 50), (CONST, 51), (L, 52)]
311 - [(then, 326), (or, 62), (and, 63)]
312 - [(do, 327), (or, 89), (and, 90)]
313 - [((, 328)]
314 - [(D, 329), (proc, 237), (T, 238), (X, 11), (record, 12), (int, 13), (real, 14)]
318 - [(S, 239), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
319 - [(S, 239), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
320 - [(), 330), (，, 228)]
321 - [(S, 239), (ID, 175), (L, 176), (if, 177), (while, 178), (call, 179)]
324 - [(;, 331), (+, 103), (*, 104)]
325 - [(;, 332), (+, 103), (*, 104)]
326 - [(S, 333), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]
327 - [(S, 334), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]
328 - [(Elist, 335), (E, 164), (-, 165), ((, 166), (ID, 167), (CONST, 168), (L, 169)]
329 - [(S, 336), (D, 281), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286), (proc, 237), (T, 238), (X, 11), (record, 12), (int, 13), (real, 14)]
333 - [(S, 308), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]
334 - [(S, 308), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]
335 - [(), 337), (，, 228)]
336 - [(S, 308), (ID, 282), (L, 283), (if, 284), (while, 285), (call, 286)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4	s6,r15	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r0	
2	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r1	
3	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r2,r15	
4	[]	s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20	[]	[]	s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22	[]	[]	s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	r12	[]	[]	[]	[]	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
12	s43	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	[]	r9	[]	[]	[]	[]	r9	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	r10	[]	[]	[]	[]	r10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	s4,r4	[]	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	
16	[]	s6,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r3,r15	[]	[]	s9,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r3,r15	[]	r3,r15	
17	[]	[]	s45	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61	[]	[]	[]	s62	s63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s68	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s76	s77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s78	s79	s80	s81	s83	s82	[]	[]	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	[]	[]	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r33	[]	[]	[]	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	s86	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r20	r20	r20	r20	r20	r20	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	s87	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r22	r22	r22	r22	r22	r22	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s88	s89	s90	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s68	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s76	s77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s78	s79	s80	s81	s83	s82	[]	[]	[]	
37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r33	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s94	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	r7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s95	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	s43	r8	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	s97	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	s98	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	s100	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
46	r6	[]	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	
47	[]	[]	s102	[]	[]	[]	[]	[]	[]	[]	s103	s104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	r20	[]	[]	[]	s112	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	[]	r22	[]	[]	[]	s113	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	s114	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	s119	[]	r20	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	r21	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	s120	[]	r22	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	s121	[]	[]	[]	[]	[]	[]	[]	s103	s104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	s122	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
62	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	[]	[]	s62,r29	s63,r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s126	[]	[]	[]	[]	[]	s127	s128	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s131	s132	[]	[]	s129	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s78	s79	s80	s81	s83	s82	[]	[]	[]	
67	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s134	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s68	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	[]	[]	[]	[]	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r33	[]	[]	[]	[]	[]	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s139	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	s140	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r20	r20	r20	r20	r20	r20	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	s141	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r22	r22	r22	r22	r22	r22	[]	[]	[]	
75	[]	s145	[]	[]	[]	[]	[]	s146	[]	[]	[]	[]	s143	s144	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
77	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	r34	[]	[]	[]	[]	[]	r34	[]	[]	[]	[]	r34	r34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	r35	[]	[]	[]	[]	[]	r35	[]	[]	[]	[]	r35	r35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	r36	[]	[]	[]	[]	[]	r36	[]	[]	[]	[]	r36	r36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	r37	[]	[]	[]	[]	[]	r37	[]	[]	[]	[]	r37	r37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	r38	[]	[]	[]	[]	[]	r38	[]	[]	[]	[]	r38	r38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	[]	r39	[]	[]	[]	[]	[]	r39	[]	[]	[]	[]	r39	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s76,r18	s77,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	[]	[]	
85	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
87	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
88	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
89	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
90	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
91	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	s89,r29	s90,r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
92	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s156	[]	[]	[]	[]	[]	s127	s128	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
93	[]	s160	[]	[]	[]	[]	[]	s161	[]	[]	[]	[]	s158	s159	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
94	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
95	[]	[]	[]	[]	[]	[]	[]	[]	s170	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
96	s43,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
97	[]	[]	s171	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
98	[]	[]	s172	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
99	s100,r15	s175,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r15	[]	[]	s178,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r15	[]	r15	
100	[]	s180	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
101	[]	s181	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
102	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
103	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
104	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
105	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	s103,r18	s104,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s184	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
107	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
108	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
109	[]	[]	[]	[]	[]	[]	s189	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
110	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
111	[]	[]	[]	[]	[]	[]	s190	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
112	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
113	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
114	[]	[]	[]	[]	[]	[]	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
115	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
116	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
117	[]	[]	[]	[]	[]	[]	[]	[]	r18	[]	s115,r18	s116,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
118	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s195	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
119	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
120	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
121	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
122	[]	[]	[]	[]	[]	[]	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
123	[]	s6,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r25,r15	[]	[]	s9,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r25,r15	[]	r25,r15	
124	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	[]	[]	s62,r27	s63,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
125	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	[]	[]	s62,r28	s63,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
126	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r30	[]	[]	[]	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
127	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s134	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
128	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s134	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
129	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	r19	r19	r19	r19	[]	[]	[]	
130	[]	s203	[]	[]	[]	[]	[]	s204	[]	[]	[]	[]	s201	s202	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
131	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s139	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
132	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s139	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
133	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	[]	[]	[]	[]	s127,r29	s128,r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
134	[]	s72	[]	[]	[]	[]	[]	s73	[]	[]	[]	[]	s71	s68	[]	[]	[]	[]	[]	[]	[]	[]	s67	s69	s70	[]	[]	[]	[]	[]	[]	[]	[]	[]	
135	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s76	s77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s78	s79	s80	s81	s83	s82	[]	[]	[]	
136	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s208	[]	[]	[]	[]	[]	s127	s128	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
137	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s131	s132	[]	[]	s209	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s78	s79	s80	s81	s83	s82	[]	[]	[]	
138	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s131,r18	s132,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	[]	[]	
139	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
140	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
141	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
142	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s213	s214	[]	[]	[]	[]	r31	[]	[]	[]	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
143	[]	s145	[]	[]	[]	[]	[]	s146	[]	[]	[]	[]	s143	s144	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
144	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
145	[]	[]	[]	[]	[]	[]	s217	[]	[]	[]	r20	r20	[]	[]	[]	[]	r20	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
146	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	r21	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
147	[]	[]	[]	[]	[]	[]	s218	[]	[]	[]	r22	r22	[]	[]	[]	[]	r22	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
148	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s76,r16	s77,r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r16	r16	r16	r16	r16	r16	[]	[]	[]	
149	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s76,r17	s77,r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r17	r17	r17	r17	r17	r17	[]	[]	[]	
150	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s129	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
151	[]	[]	[]	[]	[]	[]	[]	[]	s219	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
152	[]	[]	[]	[]	[]	[]	[]	[]	s220	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
153	[]	s6,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r26,r15	[]	[]	s9,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r26,r15	[]	r26,r15	
154	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	s89,r27	s90,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
155	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	s89,r28	s90,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
156	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r30	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
157	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s221	s222	[]	[]	[]	[]	[]	[]	[]	r31	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
158	[]	s160	[]	[]	[]	[]	[]	s161	[]	[]	[]	[]	s158	s159	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
159	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
160	[]	[]	[]	[]	[]	[]	s225	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	r20	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	r21	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
162	[]	[]	[]	[]	[]	[]	s226	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	r22	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
163	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s227	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s228	[]	
164	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s229	s230	[]	[]	r42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r42	[]	
165	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
166	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
167	[]	[]	[]	[]	[]	[]	s233	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r20	[]	
168	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	[]	
169	[]	[]	[]	[]	[]	[]	s234	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r22	[]	
170	[]	r12	[]	[]	[]	[]	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
171	s237	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
172	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
173	r5,r15	s175,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r15	[]	[]	s178,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r15	[]	r5,r15	
174	s100,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	r4	
175	[]	[]	[]	[]	[]	[]	s20	[]	[]	s240	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
176	[]	[]	[]	[]	[]	[]	s22	[]	[]	s241	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
177	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
178	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
179	[]	s244	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
180	[]	[]	s245	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
181	[]	[]	s246	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
182	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	s103,r16	s104,r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
183	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	s103,r17	s104,r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
184	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
185	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
186	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
187	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185,r18	s186,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
188	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s249	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
189	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
190	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
191	[]	[]	[]	[]	[]	[]	[]	[]	s252	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
192	[]	[]	[]	[]	[]	[]	[]	[]	s253	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
193	[]	[]	[]	[]	[]	[]	[]	[]	r16	[]	s115,r16	s116,r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
194	[]	[]	[]	[]	[]	[]	[]	[]	r17	[]	s115,r17	s116,r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
195	[]	[]	[]	[]	[]	[]	[]	[]	r19	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
196	[]	[]	[]	[]	[]	[]	[]	[]	s254	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
197	[]	[]	[]	[]	[]	[]	[]	[]	s255	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
198	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	[]	[]	[]	[]	s127,r27	s128,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
199	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	[]	[]	[]	[]	s127,r28	s128,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
200	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s256	s257	[]	[]	r31	[]	[]	[]	[]	[]	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
201	[]	s203	[]	[]	[]	[]	[]	s204	[]	[]	[]	[]	s201	s202	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
202	[]	s109	[]	[]	[]	[]	[]	s110	[]	[]	[]	[]	s107	s108	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
203	[]	[]	[]	[]	[]	[]	s260	[]	[]	[]	r20	r20	[]	[]	r20	[]	[]	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
204	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	r21	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
205	[]	[]	[]	[]	[]	[]	s261	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
206	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s131,r16	s132,r16	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r16	r16	r16	r16	r16	r16	[]	[]	[]	
207	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s131,r17	s132,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r17	r17	r17	r17	r17	r17	[]	[]	[]	
208	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r30	[]	[]	[]	[]	[]	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
209	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	r19	r19	r19	r19	[]	[]	[]	
210	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s209	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
211	[]	[]	[]	[]	[]	[]	[]	[]	s262	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
212	[]	[]	[]	[]	[]	[]	[]	[]	s263	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
213	[]	s145	[]	[]	[]	[]	[]	s146	[]	[]	[]	[]	s143	s144	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
214	[]	s145	[]	[]	[]	[]	[]	s146	[]	[]	[]	[]	s143	s144	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
215	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s213,r18	s214,r18	[]	[]	[]	[]	r18	[]	[]	[]	r18	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
216	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s266	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
217	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
218	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
219	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	[]	[]	
220	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	[]	[]	
221	[]	s160	[]	[]	[]	[]	[]	s161	[]	[]	[]	[]	s158	s159	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
222	[]	s160	[]	[]	[]	[]	[]	s161	[]	[]	[]	[]	s158	s159	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
223	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s221,r18	s222,r18	[]	[]	[]	[]	[]	[]	[]	r18	r18	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
224	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s271	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
225	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
226	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
227	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	r40	
228	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
229	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
230	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
231	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s229,r18	s230,r18	[]	[]	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	[]	
232	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s277	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
233	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
234	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
235	[]	r11	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
236	s237,r15	s282,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r15	[]	[]	s285,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r15	[]	[]	
237	[]	s287	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
238	[]	s288	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
239	r3,r15	s175,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r3,r15	[]	[]	s178,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r3,r15	[]	r3,r15	
240	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
241	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
242	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s291	[]	[]	[]	s62	s63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
243	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s292	s89	s90	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
244	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s293	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
245	s100	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
246	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	r6	
247	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185,r16	s186,r16	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
248	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185,r17	s186,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
249	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
250	[]	[]	[]	[]	[]	[]	[]	[]	s295	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
251	[]	[]	[]	[]	[]	[]	[]	[]	s296	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
252	[]	[]	r23	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
253	[]	[]	r24	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
254	[]	[]	[]	[]	[]	[]	r23	[]	r23	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
255	[]	[]	[]	[]	[]	[]	r24	[]	r24	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
256	[]	s203	[]	[]	[]	[]	[]	s204	[]	[]	[]	[]	s201	s202	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
257	[]	s203	[]	[]	[]	[]	[]	s204	[]	[]	[]	[]	s201	s202	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
258	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s256,r18	s257,r18	[]	[]	r18	[]	[]	[]	[]	[]	r18	r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
259	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s185	s186	[]	[]	s299	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
260	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
261	[]	s56	[]	[]	[]	[]	[]	s57	[]	[]	[]	[]	s54	s55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
262	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	[]	[]	
263	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	r24	r24	r24	r24	r24	[]	[]	[]	
264	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s213,r16	s214,r16	[]	[]	[]	[]	r16	[]	[]	[]	r16	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
265	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s213,r17	s214,r17	[]	[]	[]	[]	r17	[]	[]	[]	r17	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
266	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	r19	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
267	[]	[]	[]	[]	[]	[]	[]	[]	s302	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
268	[]	[]	[]	[]	[]	[]	[]	[]	s303	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
269	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s221,r16	s222,r16	[]	[]	[]	[]	[]	[]	[]	r16	r16	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
270	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s221,r17	s222,r17	[]	[]	[]	[]	[]	[]	[]	r17	r17	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
271	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	r19	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
272	[]	[]	[]	[]	[]	[]	[]	[]	s304	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
273	[]	[]	[]	[]	[]	[]	[]	[]	s305	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
274	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s229	s230	[]	[]	r41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r41	[]	
275	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s229,r16	s230,r16	[]	[]	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r16	[]	
276	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s229,r17	s230,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r17	[]	
277	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	[]	
278	[]	[]	[]	[]	[]	[]	[]	[]	s306	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
279	[]	[]	[]	[]	[]	[]	[]	[]	s307	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
280	r5,r15	s282,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r15	[]	[]	s285,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r15	[]	[]	
281	s237,r4	r4	[]	s12,r4	s13,r4	s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r4	[]	[]	
282	[]	[]	[]	[]	[]	[]	s20	[]	[]	s309	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
283	[]	[]	[]	[]	[]	[]	s22	[]	[]	s310	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
284	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s25	[]	[]	[]	[]	[]	[]	[]	[]	s24	s27	s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
285	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s35	[]	[]	[]	[]	[]	[]	[]	[]	s34	s37	s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	
286	[]	s313	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
287	[]	[]	s314	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
288	[]	[]	s315	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
289	[]	[]	s316	[]	[]	[]	[]	[]	[]	[]	s103	s104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
290	[]	[]	s317	[]	[]	[]	[]	[]	[]	[]	s103	s104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
291	r15	s175,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r15	[]	[]	s178,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r15	[]	r15	
292	r15	s175,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r15	[]	[]	s178,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r15	[]	r15	
293	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
294	s100,r15	s175,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r15	[]	[]	s178,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r15	[]	r15	
295	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
296	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
297	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s256,r16	s257,r16	[]	[]	r16	[]	[]	[]	[]	[]	r16	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
298	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s256,r17	s257,r17	[]	[]	r17	[]	[]	[]	[]	[]	r17	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
299	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	r19	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
300	[]	[]	[]	[]	[]	[]	[]	[]	s322	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
301	[]	[]	[]	[]	[]	[]	[]	[]	s323	[]	s115	s116	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
302	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
303	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
304	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	r23	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
305	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	r24	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
306	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	[]	
307	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r24	[]	
308	r3,r15	s282,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r3,r15	[]	[]	s285,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r3,r15	[]	[]	
309	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
310	[]	s50	[]	[]	[]	[]	[]	s51	[]	[]	[]	[]	s48	s49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
311	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s326	[]	[]	[]	s62	s63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
312	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s327	s89	s90	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
313	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s328	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
314	s237	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
315	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	
316	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	r13	
317	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
318	r25,r15	s175,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r25,r15	[]	[]	s178,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r25,r15	[]	r25,r15	
319	r26,r15	s175,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r26,r15	[]	[]	s178,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r26,r15	[]	r26,r15	
320	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s330	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s228	[]	
321	r5,r15	s175,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s177,r5,r15	[]	[]	s178,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s179,r5,r15	[]	r5,r15	
322	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	r23	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
323	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	r24	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
324	[]	[]	s331	[]	[]	[]	[]	[]	[]	[]	s103	s104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
325	[]	[]	s332	[]	[]	[]	[]	[]	[]	[]	s103	s104	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
326	r15	s282,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r15	[]	[]	s285,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r15	[]	[]	
327	r15	s282,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r15	[]	[]	s285,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r15	[]	[]	
328	[]	s167	[]	[]	[]	[]	[]	s168	[]	[]	[]	[]	s165	s166	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
329	s237,r15	s282,r15	[]	s12,r15	s13,r15	s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r15	[]	[]	s285,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r15	[]	[]	
330	r40	r40	[]	r40	r40	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	r40	
331	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	
332	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	
333	r25,r15	s282,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r25,r15	[]	[]	s285,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r25,r15	[]	[]	
334	r26,r15	s282,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r26,r15	[]	[]	s285,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r26,r15	[]	[]	
335	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s337	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s228	[]	
336	r5,r15	s282,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s284,r5,r15	[]	[]	s285,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s286,r5,r15	[]	[]	
337	r40	r40	[]	r40	r40	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	[]	
338	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26	s32	s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s36	s32	s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s40	[]	[]	[]	[]	[]	
12	[]	[]	s42	[]	s44	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s47	s52	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s53	s58	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s59	s52	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s60	s58	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26	s32	s64	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s66	s74	s65	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s75	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s84	s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	s36	s32	s91	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	s66	s74	s92	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s93	[]	
37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	s96	[]	s44	s11	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	s99	[]	s101	s11	[]	[]	[]	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	s105	s52	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	s106	s111	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
51	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	s117	s58	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	s118	s111	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	[]	[]	s123	[]	[]	[]	[]	s7	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	s26	s32	s124	[]	[]	
63	[]	[]	[]	[]	[]	[]	[]	s26	s32	s125	[]	[]	
64	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s130	[]	
67	[]	[]	[]	[]	[]	[]	[]	s135	s32	s133	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	s137	s74	s136	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	s138	s74	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	s142	s147	[]	[]	[]	
76	[]	[]	[]	[]	[]	[]	[]	s148	s32	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	s149	s32	[]	[]	[]	
78	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	s150	s111	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	s151	s58	[]	[]	[]	
87	[]	[]	[]	[]	[]	[]	[]	s152	s58	[]	[]	[]	
88	[]	[]	[]	s153	[]	[]	[]	[]	s7	[]	[]	[]	
89	[]	[]	[]	[]	[]	[]	[]	s36	s32	s154	[]	[]	
90	[]	[]	[]	[]	[]	[]	[]	s36	s32	s155	[]	[]	
91	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
92	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
93	[]	[]	[]	[]	[]	[]	[]	s157	s162	[]	[]	[]	
94	[]	[]	[]	[]	[]	[]	[]	s164	s169	[]	[]	s163	
95	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
96	[]	[]	s96	[]	s44	s11	[]	[]	[]	[]	[]	[]	
97	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
98	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
99	[]	[]	s174	s173	s101	s11	[]	[]	s176	[]	[]	[]	
100	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
101	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
102	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
103	[]	[]	[]	[]	[]	[]	[]	s182	s52	[]	[]	[]	
104	[]	[]	[]	[]	[]	[]	[]	s183	s52	[]	[]	[]	
105	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
106	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
107	[]	[]	[]	[]	[]	[]	[]	s187	s111	[]	[]	[]	
108	[]	[]	[]	[]	[]	[]	[]	s188	s111	[]	[]	[]	
109	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
110	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
111	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
112	[]	[]	[]	[]	[]	[]	[]	s191	s58	[]	[]	[]	
113	[]	[]	[]	[]	[]	[]	[]	s192	s58	[]	[]	[]	
114	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
115	[]	[]	[]	[]	[]	[]	[]	s193	s58	[]	[]	[]	
116	[]	[]	[]	[]	[]	[]	[]	s194	s58	[]	[]	[]	
117	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
118	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
119	[]	[]	[]	[]	[]	[]	[]	s196	s58	[]	[]	[]	
120	[]	[]	[]	[]	[]	[]	[]	s197	s58	[]	[]	[]	
121	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
122	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
123	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
124	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
125	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
126	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
127	[]	[]	[]	[]	[]	[]	[]	s135	s32	s198	[]	[]	
128	[]	[]	[]	[]	[]	[]	[]	s135	s32	s199	[]	[]	
129	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
130	[]	[]	[]	[]	[]	[]	[]	s200	s205	[]	[]	[]	
131	[]	[]	[]	[]	[]	[]	[]	s206	s74	[]	[]	[]	
132	[]	[]	[]	[]	[]	[]	[]	s207	s74	[]	[]	[]	
133	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
134	[]	[]	[]	[]	[]	[]	[]	s66	s74	s136	[]	[]	
135	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s130	[]	
136	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
137	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s130	[]	
138	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
139	[]	[]	[]	[]	[]	[]	[]	s210	s111	[]	[]	[]	
140	[]	[]	[]	[]	[]	[]	[]	s211	s58	[]	[]	[]	
141	[]	[]	[]	[]	[]	[]	[]	s212	s58	[]	[]	[]	
142	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
143	[]	[]	[]	[]	[]	[]	[]	s215	s147	[]	[]	[]	
144	[]	[]	[]	[]	[]	[]	[]	s216	s111	[]	[]	[]	
145	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
146	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
147	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
148	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
149	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
150	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
151	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
152	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
153	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
154	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
155	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
156	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
157	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
158	[]	[]	[]	[]	[]	[]	[]	s223	s162	[]	[]	[]	
159	[]	[]	[]	[]	[]	[]	[]	s224	s111	[]	[]	[]	
160	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
161	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
162	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
163	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
164	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
165	[]	[]	[]	[]	[]	[]	[]	s231	s169	[]	[]	[]	
166	[]	[]	[]	[]	[]	[]	[]	s232	s111	[]	[]	[]	
167	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
168	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
169	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
170	[]	[]	[]	[]	[]	[]	s235	[]	[]	[]	[]	[]	
171	[]	[]	s236	[]	s238	s11	[]	[]	[]	[]	[]	[]	
172	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
173	[]	[]	[]	s239	[]	[]	[]	[]	s176	[]	[]	[]	
174	[]	[]	s174	[]	s101	s11	[]	[]	[]	[]	[]	[]	
175	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
176	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
177	[]	[]	[]	[]	[]	[]	[]	s26	s32	s242	[]	[]	
178	[]	[]	[]	[]	[]	[]	[]	s36	s32	s243	[]	[]	
179	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
180	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
181	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
182	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
183	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
184	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
185	[]	[]	[]	[]	[]	[]	[]	s247	s111	[]	[]	[]	
186	[]	[]	[]	[]	[]	[]	[]	s248	s111	[]	[]	[]	
187	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
188	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
189	[]	[]	[]	[]	[]	[]	[]	s250	s58	[]	[]	[]	
190	[]	[]	[]	[]	[]	[]	[]	s251	s58	[]	[]	[]	
191	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
192	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
193	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
194	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
195	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
196	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
197	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
198	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
199	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
200	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
201	[]	[]	[]	[]	[]	[]	[]	s258	s205	[]	[]	[]	
202	[]	[]	[]	[]	[]	[]	[]	s259	s111	[]	[]	[]	
203	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
204	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
205	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
206	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
207	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
208	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
209	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
210	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
211	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
212	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
213	[]	[]	[]	[]	[]	[]	[]	s264	s147	[]	[]	[]	
214	[]	[]	[]	[]	[]	[]	[]	s265	s147	[]	[]	[]	
215	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
216	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
217	[]	[]	[]	[]	[]	[]	[]	s267	s58	[]	[]	[]	
218	[]	[]	[]	[]	[]	[]	[]	s268	s58	[]	[]	[]	
219	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
220	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
221	[]	[]	[]	[]	[]	[]	[]	s269	s162	[]	[]	[]	
222	[]	[]	[]	[]	[]	[]	[]	s270	s162	[]	[]	[]	
223	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
224	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
225	[]	[]	[]	[]	[]	[]	[]	s272	s58	[]	[]	[]	
226	[]	[]	[]	[]	[]	[]	[]	s273	s58	[]	[]	[]	
227	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
228	[]	[]	[]	[]	[]	[]	[]	s274	s169	[]	[]	[]	
229	[]	[]	[]	[]	[]	[]	[]	s275	s169	[]	[]	[]	
230	[]	[]	[]	[]	[]	[]	[]	s276	s169	[]	[]	[]	
231	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
232	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
233	[]	[]	[]	[]	[]	[]	[]	s278	s58	[]	[]	[]	
234	[]	[]	[]	[]	[]	[]	[]	s279	s58	[]	[]	[]	
235	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
236	[]	[]	s281	s280	s238	s11	[]	[]	s283	[]	[]	[]	
237	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
238	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
239	[]	[]	[]	s239	[]	[]	[]	[]	s176	[]	[]	[]	
240	[]	[]	[]	[]	[]	[]	[]	s289	s52	[]	[]	[]	
241	[]	[]	[]	[]	[]	[]	[]	s290	s52	[]	[]	[]	
242	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
243	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
244	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
245	[]	[]	s294	[]	s101	s11	[]	[]	[]	[]	[]	[]	
246	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
247	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
248	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
249	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
250	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
251	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
252	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
253	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
254	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
255	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
256	[]	[]	[]	[]	[]	[]	[]	s297	s205	[]	[]	[]	
257	[]	[]	[]	[]	[]	[]	[]	s298	s205	[]	[]	[]	
258	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
259	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
260	[]	[]	[]	[]	[]	[]	[]	s300	s58	[]	[]	[]	
261	[]	[]	[]	[]	[]	[]	[]	s301	s58	[]	[]	[]	
262	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
263	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
264	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
265	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
266	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
267	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
268	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
269	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
270	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
271	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
272	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
273	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
274	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
275	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
276	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
277	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
278	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
279	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
280	[]	[]	[]	s308	[]	[]	[]	[]	s283	[]	[]	[]	
281	[]	[]	s281	[]	s238	s11	[]	[]	[]	[]	[]	[]	
282	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
283	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
284	[]	[]	[]	[]	[]	[]	[]	s26	s32	s311	[]	[]	
285	[]	[]	[]	[]	[]	[]	[]	s36	s32	s312	[]	[]	
286	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
287	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
288	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
289	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
290	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
291	[]	[]	[]	s318	[]	[]	[]	[]	s176	[]	[]	[]	
292	[]	[]	[]	s319	[]	[]	[]	[]	s176	[]	[]	[]	
293	[]	[]	[]	[]	[]	[]	[]	s164	s169	[]	[]	s320	
294	[]	[]	s174	s321	s101	s11	[]	[]	s176	[]	[]	[]	
295	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
296	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
297	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
298	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
299	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
300	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
301	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
302	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
303	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
304	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
305	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
306	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
307	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
308	[]	[]	[]	s308	[]	[]	[]	[]	s283	[]	[]	[]	
309	[]	[]	[]	[]	[]	[]	[]	s324	s52	[]	[]	[]	
310	[]	[]	[]	[]	[]	[]	[]	s325	s52	[]	[]	[]	
311	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
312	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
313	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
314	[]	[]	s329	[]	s238	s11	[]	[]	[]	[]	[]	[]	
315	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
316	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
317	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
318	[]	[]	[]	s239	[]	[]	[]	[]	s176	[]	[]	[]	
319	[]	[]	[]	s239	[]	[]	[]	[]	s176	[]	[]	[]	
320	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
321	[]	[]	[]	s239	[]	[]	[]	[]	s176	[]	[]	[]	
322	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
323	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
324	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
325	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
326	[]	[]	[]	s333	[]	[]	[]	[]	s283	[]	[]	[]	
327	[]	[]	[]	s334	[]	[]	[]	[]	s283	[]	[]	[]	
328	[]	[]	[]	[]	[]	[]	[]	s164	s169	[]	[]	s335	
329	[]	[]	s281	s336	s238	s11	[]	[]	s283	[]	[]	[]	
330	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
331	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
332	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
333	[]	[]	[]	s308	[]	[]	[]	[]	s283	[]	[]	[]	
334	[]	[]	[]	s308	[]	[]	[]	[]	s283	[]	[]	[]	
335	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
336	[]	[]	[]	s308	[]	[]	[]	[]	s283	[]	[]	[]	
337	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
338	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


LALR
I42
L -> ID [ E · ], or*[+and)
E -> E · + E, *]+
E -> E · * E, *]+
I68
S -> L = E ; · , ifprocwhilecallrecordrealIDint$
I65
S -> ID = E ; · , ifprocwhilecallrecordrealIDint
I19
S -> ID = · E ;, ifprocwhilecallrecordrealIDint$
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I30
E -> ID · , or*do+and
L -> ID · [ E ], or*[do+and
I59
relop -> >= · , (-IDCONST
I76
E -> E + E · , or*do+and
E -> E · + E, or*do+and
E -> E · * E, or*do+and
I46
B -> B or · B, orthenand
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I38
D -> proc ID ; · D S, ifprocwhilecallrecordrealIDint
D ->  · D D, ifprocwhilecallrecordrealIDint
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint
D ->  · T ID ;, ifprocwhilecallrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I82
D -> proc ID ; D S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I4
D -> proc · ID ; D S, procint$recordreal
I41
E -> ( · E ), >=><=)<*+==!=
E ->  · E + E, )*+
E ->  · E * E, )*+
E ->  · - E, )*+
E ->  · ( E ), )*+
E ->  · ID, )*+
E ->  · CONST, )*+
E ->  · L, )*+
L ->  · ID [ E ], )[*+
L ->  · L [ E ], )[*+
I20
L -> ID [ · E ], or*then[+and
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I72
B -> B and B · , )orand
B -> B · or B, )orand
B -> B · and B, )orand
I32
E -> L · , or*+and)
L -> L · [ E ], or*[+and)
I52
E -> E + · E, >=><=)<*+==!=
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I71
B -> B or B · , orthenand
B -> B · or B, orthenand
B -> B · and B, orthenand
I29
E -> - · E, or*then+and
E ->  · E + E, or*then+and
E ->  · E * E, or*then+and
E ->  · - E, or*then+and
E ->  · ( E ), or*then+and
E ->  · ID, or*then+and
E ->  · CONST, or*then+and
E ->  · L, or*then+and
L ->  · ID [ E ], or*then[+and
L ->  · L [ E ], or*then[+and
I47
B -> B and · B, orthenand
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I64
D -> proc ID ; D · S, procint$recordreal
D -> D · D, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
D ->  · D D, ifprocwhilecallrecordrealIDint$
D ->  · proc ID ; D S, ifprocwhilecallrecordrealIDint$
D ->  · T ID ;, ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I44
L -> L [ E · ], *[+)，
E -> E · + E, *]+
E -> E · * E, *]+
I14
X -> real · , ID[
I8
S -> if · B then S, ifprocwhilecallrecordrealIDint
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I60
E -> - E · , >=><=*+==<!=
E -> E · + E, >=><=<*+==!=
E -> E · * E, >=><=<*+==!=
I53
E -> E * · E, )*，+
E ->  · E + E, *+)，
E ->  · E * E, *+)，
E ->  · - E, *+)，
E ->  · ( E ), *+)，
E ->  · ID, *+)，
E ->  · CONST, *+)，
E ->  · L, *+)，
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I67
L -> ID [ E ] · , >=><=[)<*+==!=
I28
B -> false · , ordoand
I40
S -> ID = E · ;, ifprocwhilecallrecordrealIDint
E -> E · + E, *+;
E -> E · * E, *+;
I15
D -> D D · , IDprocintrecordreal
D -> D · D, procrecordrealIDint
D ->  · D D, procrecordrealIDint
D ->  · proc ID ; D S, procrecordrealIDint
D ->  · T ID ;, procrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I48
B -> not B · , )orand
B -> B · or B, )orand
B -> B · and B, )orand
I66
E -> ( E · ), or*then+and
E -> E · + E, )*+
E -> E · * E, )*+
I85
C -> [ CONST ] C · , ID
I10
S -> call · ID ( Elist ), ifprocwhilecallrecordrealIDint
I27
B -> true · , )orand
I35
T -> X C · , ID
I0
P' ->  · P, $
P ->  · D, $
P ->  · S, $
D ->  · D D, procint$recordreal
D ->  · proc ID ; D S, procint$recordreal
D ->  · T ID ;, procint$recordreal
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
T ->  · X C, ID
T ->  · record D, ID
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
X ->  · int, ID[
X ->  · real, ID[
I83
S -> call ID ( Elist ) · , ifprocwhilecallrecordrealIDint$
I69
L -> L [ E ] · , )[*+
I37
T -> record D · , ID
D -> D · D, IDprocintrecordreal
D ->  · D D, procrecordrealIDint
D ->  · proc ID ; D S, procrecordrealIDint
D ->  · T ID ;, procrecordrealIDint
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I22
L -> L [ · E ], >=><=[<*+==!=
E ->  · E + E, *]+
E ->  · E * E, *]+
E ->  · - E, *]+
E ->  · ( E ), *]+
E ->  · ID, *]+
E ->  · CONST, *]+
E ->  · L, *]+
L ->  · ID [ E ], *][+
L ->  · L [ E ], *][+
I73
B -> ( B ) · , ordoand
I39
D -> T ID ; · , ifprocwhilecallrecordrealIDint$
I70
S -> if B then S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I54
relop -> < · , (-IDCONST
I7
S -> L · = E ;, ifprocwhilecallrecordrealIDint
L -> L · [ E ], =[
I63
C -> [ CONST · ] C, ID
I58
relop -> > · , (-IDCONST
I79
S -> call ID ( Elist · ), ifprocwhilecallrecordrealIDint$
Elist -> Elist · ， E, )，
I36
C -> [ · CONST ] C, ID
I74
E -> ( E ) · , )*+
I55
relop -> <= · , (-IDCONST
I86
Elist -> Elist ， E · , )，
E -> E · + E, )*，+
E -> E · * E, )*，+
I26
B -> E · relop E, ordoand
E -> E · + E, >=><=*+==<!=
E -> E · * E, >=><=*+==<!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I77
E -> E * E · , )*+
E -> E · + E, )*+
E -> E · * E, )*+
I18
D -> T ID · ;, IDprocintrecordreal
I80
Elist -> E · , )，
E -> E · + E, )*，+
E -> E · * E, )*，+
I50
E -> ( E · ), >=><=*+==<!=
B -> E · relop E, )orand
E -> E · + E, >=><=)<*+==!=
E -> E · * E, >=><=)<*+==!=
relop ->  · <, (-IDCONST
relop ->  · <=, (-IDCONST
relop ->  · ==, (-IDCONST
relop ->  · !=, (-IDCONST
relop ->  · >, (-IDCONST
relop ->  · >=, (-IDCONST
I61
S -> while B do · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I43
S -> L = E · ;, ifprocwhilecallrecordrealIDint
E -> E · + E, *+;
E -> E · * E, *+;
I62
S -> call ID ( · Elist ), ifprocwhilecallrecordrealIDint
Elist ->  · Elist ， E, )，
Elist ->  · E, )，
E ->  · E + E, )*，+
E ->  · E * E, )*，+
E ->  · - E, )*，+
E ->  · ( E ), )*，+
E ->  · ID, )*，+
E ->  · CONST, )*，+
E ->  · L, )*，+
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I45
S -> if B then · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I51
B -> E relop · E, )orand
E ->  · E + E, or*+and)
E ->  · E * E, or*+and)
E ->  · - E, or*+and)
E ->  · ( E ), or*+and)
E ->  · ID, or*+and)
E ->  · CONST, or*+and)
E ->  · L, or*+and)
L ->  · ID [ E ], or*[+and)
L ->  · L [ E ], or*[+and)
I34
S -> call ID · ( Elist ), ifprocwhilecallrecordrealIDint$
I2
P -> D · , $
D -> D · D, procint$recordreal
D ->  · D D, procrecordrealint$
D ->  · proc ID ; D S, procrecordrealint$
D ->  · T ID ;, procrecordrealint$
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I5
D -> T · ID ;, ifprocwhilecallrecordrealIDint$
I75
B -> E relop E · , orthenand
E -> E · + E, or*then+and
E -> E · * E, or*then+and
I12
T -> record · D, ID
D ->  · D D, IDprocintrecordreal
D ->  · proc ID ; D S, IDprocintrecordreal
D ->  · T ID ;, IDprocintrecordreal
T ->  · X C, ID
T ->  · record D, ID
X ->  · int, ID[
X ->  · real, ID[
I6
S -> ID · = E ;, ifprocwhilecallrecordrealIDint$
L -> ID · [ E ], =[
I23
S -> if B · then S, ifprocwhilecallrecordrealIDint$
B -> B · or B, orthenand
B -> B · and B, orthenand
I31
E -> CONST · , >=><=)<*+==!=
I49
B -> ( B · ), ordoand
B -> B · or B, )orand
B -> B · and B, )orand
I78
S -> while B do S · , ifprocwhilecallrecordrealIDint
S -> S · S, ifprocwhilecallrecordrealIDint
S ->  · S S, ifprocwhilecallrecordrealIDint
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint
S ->  · L = E ;, ifprocwhilecallrecordrealIDint
S ->  · empty, ifprocwhilecallrecordrealIDint
S ->  · if B then S, ifprocwhilecallrecordrealIDint
S ->  · while B do S, ifprocwhilecallrecordrealIDint
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I3
P -> S · , $
S -> S · S, ifIDwhilecall$
S ->  · S S, ifIDwhilecall$
S ->  · ID = E ;, ifIDwhilecall$
S ->  · L = E ;, ifIDwhilecall$
S ->  · empty, ifIDwhilecall$
S ->  · if B then S, ifIDwhilecall$
S ->  · while B do S, ifIDwhilecall$
S ->  · call ID ( Elist ), ifIDwhilecall$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I81
C -> [ CONST ] · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I9
S -> while · B do S, ifprocwhilecallrecordrealIDint$
B ->  · B or B, ordoand
B ->  · B and B, ordoand
B ->  · not B, ordoand
B ->  · ( B ), ordoand
B ->  · E relop E, ordoand
B ->  · true, ordoand
B ->  · false, ordoand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I33
S -> while B · do S, ifprocwhilecallrecordrealIDint$
B -> B · or B, ordoand
B -> B · and B, ordoand
I13
X -> int · , ID[
I25
B -> ( · B ), ordoand
E -> ( · E ), >=><=*+==<!=
B ->  · B or B, )orand
B ->  · B and B, )orand
B ->  · not B, )orand
B ->  · ( B ), )orand
B ->  · E relop E, )orand
B ->  · true, )orand
B ->  · false, )orand
E ->  · E + E, >=><=)<*+==!=
E ->  · E * E, >=><=)<*+==!=
E ->  · - E, >=><=)<*+==!=
E ->  · ( E ), >=><=)<*+==!=
E ->  · ID, >=><=)<*+==!=
E ->  · CONST, >=><=)<*+==!=
E ->  · L, >=><=)<*+==!=
L ->  · ID [ E ], >=><=[)<*+==!=
L ->  · L [ E ], >=><=[)<*+==!=
I24
B -> not · B, orthenand
B ->  · B or B, orthenand
B ->  · B and B, orthenand
B ->  · not B, orthenand
B ->  · ( B ), orthenand
B ->  · E relop E, orthenand
B ->  · true, orthenand
B ->  · false, orthenand
E ->  · E + E, >=><=*+==<!=
E ->  · E * E, >=><=*+==<!=
E ->  · - E, >=><=*+==<!=
E ->  · ( E ), >=><=*+==<!=
E ->  · ID, >=><=*+==<!=
E ->  · CONST, >=><=*+==<!=
E ->  · L, >=><=*+==<!=
L ->  · ID [ E ], >=><=[<*+==!=
L ->  · L [ E ], >=><=[<*+==!=
I57
relop -> != · , (-IDCONST
I11
T -> X · C, ID
C ->  · [ CONST ] C, ID
C ->  · empty, ID
I16
S -> S S · , ifprocwhilecallrecordrealIDint$
S -> S · S, ifprocwhilecallrecordrealIDint$
S ->  · S S, ifprocwhilecallrecordrealIDint$
S ->  · ID = E ;, ifprocwhilecallrecordrealIDint$
S ->  · L = E ;, ifprocwhilecallrecordrealIDint$
S ->  · empty, ifprocwhilecallrecordrealIDint$
S ->  · if B then S, ifprocwhilecallrecordrealIDint$
S ->  · while B do S, ifprocwhilecallrecordrealIDint$
S ->  · call ID ( Elist ), ifprocwhilecallrecordrealIDint$
L ->  · ID [ E ], =[
L ->  · L [ E ], =[
I21
S -> L = · E ;, ifprocwhilecallrecordrealIDint
E ->  · E + E, *+;
E ->  · E * E, *+;
E ->  · - E, *+;
E ->  · ( E ), *+;
E ->  · ID, *+;
E ->  · CONST, *+;
E ->  · L, *+;
L ->  · ID [ E ], *[+;
L ->  · L [ E ], *[+;
I84
Elist -> Elist ， · E, )，
E ->  · E + E, )*，+
E ->  · E * E, )*，+
E ->  · - E, )*，+
E ->  · ( E ), )*，+
E ->  · ID, )*，+
E ->  · CONST, )*，+
E ->  · L, )*，+
L ->  · ID [ E ], *[+)，
L ->  · L [ E ], *[+)，
I1
P' -> P · , $
I56
relop -> == · , (-IDCONST
I17
D -> proc ID · ; D S, procint$recordreal

0 - [(P, 1), (D, 2), (S, 3), (proc, 4), (T, 5), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (X, 11), (record, 12), (int, 13), (real, 14)]
2 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
3 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
4 - [(ID, 17), (ID, 17), (ID, 17), (ID, 17)]
5 - [(ID, 18), (ID, 18), (ID, 18), (ID, 18)]
6 - [(=, 19), ([, 20), (=, 19), ([, 20), (=, 19), ([, 20)]
7 - [(=, 21), ([, 22), (=, 21), ([, 22), (=, 21), ([, 22)]
8 - [(B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 23), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
9 - [(B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 33), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
10 - [(ID, 34), (ID, 34), (ID, 34)]
11 - [(C, 35), ([, 36)]
12 - [(D, 37), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
15 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
16 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
17 - [(;, 38), (;, 38), (;, 38), (;, 38)]
18 - [(;, 39), (;, 39), (;, 39), (;, 39)]
19 - [(E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 40), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
20 - [(E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 42), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
21 - [(E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 43), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
22 - [(E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 44), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
23 - [(then, 45), (or, 46), (and, 47), (then, 45), (or, 46), (and, 47), (then, 45), (or, 46), (and, 47)]
24 - [(B, 48), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 48), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 48), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
25 - [(B, 49), (E, 50), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 49), (E, 50), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 49), (E, 50), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 49), (E, 50), (not, 24), ((, 25), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
26 - [(relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59), (relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59), (relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59)]
29 - [(E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 60), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
30 - [([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20), ([, 20)]
32 - [([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22), ([, 22)]
33 - [(do, 61), (or, 46), (and, 47), (do, 61), (or, 46), (and, 47), (do, 61), (or, 46), (and, 47)]
34 - [((, 62), ((, 62), ((, 62)]
36 - [(CONST, 63)]
37 - [(D, 15), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
38 - [(D, 64), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 64), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 64), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (D, 64), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
40 - [(;, 65), (+, 52), (*, 53), (;, 65), (+, 52), (*, 53), (;, 65), (+, 52), (*, 53)]
41 - [(E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 66), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
42 - [(], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53), (], 67), (+, 52), (*, 53)]
43 - [(;, 68), (+, 52), (*, 53), (;, 68), (+, 52), (*, 53), (;, 68), (+, 52), (*, 53)]
44 - [(], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53), (], 69), (+, 52), (*, 53)]
45 - [(S, 70), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 70), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 70), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
46 - [(B, 71), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 71), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 71), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
47 - [(B, 72), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 72), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32), (B, 72), (not, 24), ((, 25), (E, 26), (true, 27), (false, 28), (-, 29), (ID, 30), (CONST, 31), (L, 32)]
48 - [(or, 46), (and, 47), (or, 46), (and, 47), (or, 46), (and, 47)]
49 - [(), 73), (or, 46), (and, 47), (), 73), (or, 46), (and, 47), (), 73), (or, 46), (and, 47)]
50 - [(), 74), (relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59), (), 74), (relop, 51), (+, 52), (*, 53), (<, 54), (<=, 55), (==, 56), (!=, 57), (>, 58), (>=, 59)]
51 - [(E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 75), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
52 - [(E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 76), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
53 - [(E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (E, 77), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
60 - [(+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53)]
61 - [(S, 78), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 78), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 78), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
62 - [(Elist, 79), (E, 80), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (Elist, 79), (E, 80), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32), (Elist, 79), (E, 80), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
63 - [(], 81)]
64 - [(S, 82), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (S, 82), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (S, 82), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14), (S, 82), (D, 15), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (proc, 4), (T, 5), (X, 11), (record, 12), (int, 13), (real, 14)]
66 - [(), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53), (), 74), (+, 52), (*, 53)]
70 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
71 - [(or, 46), (and, 47), (or, 46), (and, 47), (or, 46), (and, 47)]
72 - [(or, 46), (and, 47), (or, 46), (and, 47), (or, 46), (and, 47)]
75 - [(+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53)]
76 - [(+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53)]
77 - [(+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53), (+, 52), (*, 53)]
78 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
79 - [(), 83), (，, 84), (), 83), (，, 84), (), 83), (，, 84)]
80 - [(+, 52), (*, 53)]
81 - [(C, 85), ([, 36)]
82 - [(S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10), (S, 16), (ID, 6), (L, 7), (if, 8), (while, 9), (call, 10)]
84 - [(E, 86), (-, 29), ((, 41), (ID, 30), (CONST, 31), (L, 32)]
86 - [(+, 52), (*, 53)]

ACTION
	proc	ID	;	record	int	real	[	CONST	]	=	+	*	-	(	)	if	then	else	while	do	or	and	not	true	false	<	<=	==	!=	>=	>	call	，	$
0	s4	s6,r15	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r15	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r0	
2	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r1	
3	[]	s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,r15	[]	[]	s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,r15	[]	r2,r15	
4	[]	s17,s17,s17,s17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	s18,s18,s18,s18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	s20,s20,s20	[]	[]	s19,s19,s19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	s22,s22,s22	[]	[]	s21,s21,s21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
9	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
10	[]	s34,s34,s34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
12	s4	[]	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
13	[]	r9	[]	[]	[]	[]	r9	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	r10	[]	[]	[]	[]	r10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	s4,s4,s4,s4,r4	r4	[]	s12,s12,s12,s12,r4	s13,s13,s13,s13,r4	s14,s14,s14,s14,r4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
16	r3,r15	s6,s6,s6,r3,r15	[]	r3,r15	r3,r15	r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r3,r15	[]	[]	s9,s9,s9,r3,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r3,r15	[]	r3,r15	
17	[]	[]	s38,s38,s38,s38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	s39,s39,s39,s39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
20	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
21	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
22	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s45,s45,s45	[]	[]	[]	s46,s46,s46	s47,s47,s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
25	[]	s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29	s25,s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24,s24	s27,s27,s27,s27	s28,s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52	s53,s53,s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s54,s54,s54	s55,s55,s55	s56,s56,s56	s57,s57,s57	s59,s59,s59	s58,s58,s58	[]	[]	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r32	[]	[]	[]	[]	[]	r32	r32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r33	r33	r33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	s20,s20,s20,s20,s20,s20,s20,s20,s20	[]	[]	[]	r20	r20	[]	[]	[]	[]	[]	[]	[]	r20	r20	r20	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	[]	[]	r21	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r21	r21	r21	r21	r21	r21	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	s22,s22,s22,s22,s22,s22,s22,s22,s22	[]	[]	[]	r22	r22	[]	[]	r22	[]	[]	[]	[]	[]	r22	r22	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s61,s61,s61	s46,s46,s46	s47,s47,s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s62,s62,s62	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	r7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	s63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	s4	r8	[]	s12	s13	s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
38	s4,s4,s4,s4	[]	[]	s12,s12,s12,s12	s13,s13,s13,s13	s14,s14,s14,s14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
39	r6	r6	[]	r6	r6	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	[]	r6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r6	[]	r6	
40	[]	[]	s65,s65,s65	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52	s53,s53,s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	s67,s67,s67,s67,s67,s67,s67,s67,s67,s67	[]	s52,s52,s52,s52,s52,s52,s52,s52,s52,s52	s53,s53,s53,s53,s53,s53,s53,s53,s53,s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	s68,s68,s68	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52	s53,s53,s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	s69,s69,s69,s69,s69,s69,s69,s69,s69,s69	[]	s52,s52,s52,s52,s52,s52,s52,s52,s52,s52	s53,s53,s53,s53,s53,s53,s53,s53,s53,s53	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	r15	s6,s6,s6,r15	[]	r15	r15	r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r15	[]	[]	s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r15	[]	r15	
46	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
47	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s25,s25,s25	[]	[]	[]	[]	[]	[]	[]	[]	s24,s24,s24	s27,s27,s27	s28,s28,s28	[]	[]	[]	[]	[]	[]	[]	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r29	[]	[]	[]	[]	[]	s46,s46,s46,r29	s47,s47,s47,r29	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s73,s73,s73	[]	[]	[]	[]	[]	s46,s46,s46	s47,s47,s47	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52	s53,s53	[]	[]	s74,s74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s54,s54	s55,s55	s56,s56	s57,s57	s59,s59	s58,s58	[]	[]	[]	
51	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
52	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
53	[]	s30,s30,s30,s30,s30,s30,s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31,s31,s31,s31,s31,s31,s31	[]	[]	[]	[]	s29,s29,s29,s29,s29,s29,s29,s29,s29	s41,s41,s41,s41,s41,s41,s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
54	[]	r34	[]	[]	[]	[]	[]	r34	[]	[]	[]	[]	r34	r34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	r35	[]	[]	[]	[]	[]	r35	[]	[]	[]	[]	r35	r35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	r36	[]	[]	[]	[]	[]	r36	[]	[]	[]	[]	r36	r36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	r37	[]	[]	[]	[]	[]	r37	[]	[]	[]	[]	r37	r37	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	r38	[]	[]	[]	[]	[]	r38	[]	[]	[]	[]	r38	r38	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	r39	[]	[]	[]	[]	[]	r39	[]	[]	[]	[]	r39	r39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52,s52,s52,s52,s52,s52,s52,r18	s53,s53,s53,s53,s53,s53,s53,s53,s53,r18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r18	r18	r18	r18	r18	r18	[]	[]	[]	
61	[]	s6,s6,s6,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r15	[]	[]	s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r15	[]	r15	
62	[]	s30,s30,s30	[]	[]	[]	[]	[]	s31,s31,s31	[]	[]	[]	[]	s29,s29,s29	s41,s41,s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
63	[]	[]	[]	[]	[]	[]	[]	[]	s81	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	s4,s4,s4,s4,r15	s6,s6,s6,s6,r15	[]	s12,s12,s12,s12,r15	s13,s13,s13,s13,r15	s14,s14,s14,s14,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,s8,r15	[]	[]	s9,s9,s9,s9,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,s10,r15	[]	r15	
65	r13	r13	[]	r13	r13	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	r13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r13	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52,s52,s52,s52,s52,s52,s52	s53,s53,s53,s53,s53,s53,s53,s53,s53	[]	[]	s74,s74,s74,s74,s74,s74,s74,s74,s74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	r23	[]	[]	[]	r23	r23	[]	[]	r23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r23	r23	r23	r23	r23	r23	[]	[]	[]	
68	r14	r14	[]	r14	r14	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	[]	r14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r14	[]	r14	
69	[]	[]	[]	[]	[]	[]	r24	[]	[]	[]	r24	r24	[]	[]	r24	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	r25,r15	s6,s6,s6,r25,r15	[]	r25,r15	r25,r15	r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r25,r15	[]	[]	s9,s9,s9,r25,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r25,r15	[]	r25,r15	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r27	[]	[]	[]	s46,s46,s46,r27	s47,s47,s47,r27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r28	[]	[]	[]	[]	[]	s46,s46,s46,r28	s47,s47,s47,r28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r30	r30	r30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r19	r19	[]	[]	r19	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52	s53,s53,s53	[]	[]	[]	[]	r31	[]	[]	[]	r31	r31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52,s52,s52,s52,s52,s52,s52,r16	s53,s53,s53,s53,s53,s53,s53,s53,s53,r16	[]	[]	[]	[]	[]	[]	[]	r16	r16	r16	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52,s52,s52,s52,s52,s52,s52,s52,s52,r17	s53,s53,s53,s53,s53,s53,s53,s53,s53,r17	[]	[]	r17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	r26,r15	s6,s6,s6,r26,r15	[]	r26,r15	r26,r15	r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,r26,r15	[]	[]	s9,s9,s9,r26,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,r26,r15	[]	[]	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s83,s83,s83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s84,s84,s84	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	r42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r42	[]	
81	[]	r12	[]	[]	[]	[]	s36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
82	r5,r15	s6,s6,s6,s6,r5,r15	[]	r5,r15	r5,r15	r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	s8,s8,s8,s8,r5,r15	[]	[]	s9,s9,s9,s9,r5,r15	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s10,s10,s10,s10,r5,r15	[]	r5,r15	
83	r40	r40	[]	r40	r40	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	[]	r40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r40	[]	r40	
84	[]	s30	[]	[]	[]	[]	[]	s31	[]	[]	[]	[]	s29	s41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
85	[]	r11	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s52	s53	[]	[]	r41	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	r41	[]	
87	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	

GOTO
	P'	P	D	S	T	X	C	E	L	B	relop	Elist
0	[]	s1	s2	s3	s5	s11	[]	[]	s7	[]	[]	[]	
1	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
2	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
3	[]	[]	[]	s16	[]	[]	[]	[]	s7	[]	[]	[]	
4	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
5	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
6	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
7	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
8	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s23,s23,s23	[]	[]	
9	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s33,s33,s33	[]	[]	
10	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
11	[]	[]	[]	[]	[]	[]	s35	[]	[]	[]	[]	[]	
12	[]	[]	s37	[]	s5	s11	[]	[]	[]	[]	[]	[]	
13	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
14	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
15	[]	[]	s15,s15,s15,s15	[]	s5,s5,s5,s5	s11,s11,s11,s11	[]	[]	[]	[]	[]	[]	
16	[]	[]	[]	s16,s16,s16	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
17	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
18	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
19	[]	[]	[]	[]	[]	[]	[]	s40,s40,s40	s32,s32,s32	[]	[]	[]	
20	[]	[]	[]	[]	[]	[]	[]	s42,s42,s42,s42,s42,s42,s42,s42,s42,s42	s32,s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
21	[]	[]	[]	[]	[]	[]	[]	s43,s43,s43	s32,s32,s32	[]	[]	[]	
22	[]	[]	[]	[]	[]	[]	[]	s44,s44,s44,s44,s44,s44,s44,s44,s44,s44	s32,s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
23	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
24	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s48,s48,s48	[]	[]	
25	[]	[]	[]	[]	[]	[]	[]	s50,s50,s50,s50	s32,s32,s32,s32	s49,s49,s49,s49	[]	[]	
26	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51,s51	[]	
27	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
28	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
29	[]	[]	[]	[]	[]	[]	[]	s60,s60,s60,s60,s60,s60,s60,s60,s60	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
30	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
31	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
32	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
33	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
34	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
35	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
36	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
37	[]	[]	s15	[]	s5	s11	[]	[]	[]	[]	[]	[]	
38	[]	[]	s64,s64,s64,s64	[]	s5,s5,s5,s5	s11,s11,s11,s11	[]	[]	[]	[]	[]	[]	
39	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
40	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
41	[]	[]	[]	[]	[]	[]	[]	s66,s66,s66,s66,s66,s66,s66,s66,s66	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
42	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
43	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
44	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
45	[]	[]	[]	s70,s70,s70	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
46	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s71,s71,s71	[]	[]	
47	[]	[]	[]	[]	[]	[]	[]	s26,s26,s26	s32,s32,s32	s72,s72,s72	[]	[]	
48	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
49	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
50	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	s51,s51	[]	
51	[]	[]	[]	[]	[]	[]	[]	s75,s75,s75	s32,s32,s32	[]	[]	[]	
52	[]	[]	[]	[]	[]	[]	[]	s76,s76,s76,s76,s76,s76,s76,s76,s76	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
53	[]	[]	[]	[]	[]	[]	[]	s77,s77,s77,s77,s77,s77,s77,s77,s77	s32,s32,s32,s32,s32,s32,s32,s32,s32	[]	[]	[]	
54	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
55	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
56	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
57	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
58	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
59	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
60	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
61	[]	[]	[]	s78,s78,s78	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
62	[]	[]	[]	[]	[]	[]	[]	s80,s80,s80	s32,s32,s32	[]	[]	s79,s79,s79	
63	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
64	[]	[]	s15,s15,s15,s15	s82,s82,s82,s82	s5,s5,s5,s5	s11,s11,s11,s11	[]	[]	s7,s7,s7,s7	[]	[]	[]	
65	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
66	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
67	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
68	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
69	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
70	[]	[]	[]	s16,s16,s16	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
71	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
72	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
73	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
74	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
75	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
76	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
77	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
78	[]	[]	[]	s16,s16,s16	[]	[]	[]	[]	s7,s7,s7	[]	[]	[]	
79	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
80	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
81	[]	[]	[]	[]	[]	[]	s85	[]	[]	[]	[]	[]	
82	[]	[]	[]	s16,s16,s16,s16	[]	[]	[]	[]	s7,s7,s7,s7	[]	[]	[]	
83	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
84	[]	[]	[]	[]	[]	[]	[]	s86	s32	[]	[]	[]	
85	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
86	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	
87	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	[]	


