digit,letter_,digits,optionalExponent,optionalFraction,number,left_p,right_p,left_angle_brackets,right_angle_brackets,left_square_brace,right_square_brace,dot,left_curly,right_curly,colon,semicolon,equal,Comma,question_mark,plus,minus,Star,exclamation_mark,Or,if,else,for,basic_id,id,package,public,final,private,class,import,extends,annotate,override,try,catch,this,return,boolean,int,String,protected,access_control,qualifier,implements,interface,abstract,native,new,static,strictfp,synchronized,transient,volatile,break,continue,do,while,instanceof,switch,case,default,control_flow,throw,throws,error_handle,void,le,ge,ne,assignment,annotation,char,string,underline,Or_bool,And_bool
0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,+,-,.,empty,left_parenthes,right_parenthes,star,or,[,],{,},<,>,:,;,=,comma,?,!,@,/,',",_,&
# 常量
^digit - 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
^letter_ - A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z
^digits - digit digit *
^optionalFraction - . digits | empty
^optionalExponent - ( E ( + | - | empty ) digits ) | empty
@number - digits optionalFraction optionalExponent
# 符号
left_p - left_parenthes
right_p - right_parenthes
left_square_brace - [
right_square_brace - ]
dot - .
left_curly - {
right_curly - }
colon - :
semicolon - ;
assignment - =
equal - = =
le - < =
ge - > =
ne - ! =
Comma - comma
left_angle_brackets - <
right_angle_brackets - >
question_mark - ?
plus - +
minus - -
Star - star
exclamation_mark - !
Or - or
Or_bool - or or
And_bool - & &
# 基本标识符,可以作普通变量名
^underline - _
^basic_id - letter_ ( letter_ | digit | underline ) *
# 组合标识符,调用的函数名，或简单变量名
&id - basic_id ( . basic_id ) *
# 关键字 https://www.cnblogs.com/chenglc/p/6922834.html
^public - p u b l i c
^protected - p r o t e c t e d
^private - p r i v a t e
access_control - public | protected | private
^abstract - a b s t r a c t
^class - c l a s s
^extends - e x t e n d s
^final - f i n a l
^implements - i m p l e m e n t s
^interface - i n t e r f a c e
^native - n a t i v e
^new - n e w
^static - s t a t i c
^strictfp - s t r i c t f p
^synchronized - s y n c h r o n i z e d
^transient - t r a n s i e n t
^volatile - v o l a t i l e
qualifier - abstract | class | extends | final | implements | interface | native | new | static | strictfp | synchronized | transient | volatile
^break - b r e a k
^continue - c o n t i n u e
^return - r e t u r n
^do - d o
^while - w h i l e
^if - i f
^else - e l s e
^for - f o r
^instanceof - i n s t a n c e o f
^switch - s w i t c h
^case - c a s e
^default - d e f a u l t
control_flow - break | continue | return | do | while | if | else | for | instanceof | switch | case | default
import - i m p o r t
package - p a c k a g e
annotate - @
override - o v e r r i d e
^try - t r y
^catch - c a t c g
^throw - t h r o w
^throws - t h r o w s
error_handle - catch | try | throw | throws
this - t h i s
# 基本类型
boolean - b o o l e a n
int - i n t
String - S t r i n g
void - v o i d
# 注释与字符串常量
:annotation - / star and star /
;char - ' and '
;string - " and "